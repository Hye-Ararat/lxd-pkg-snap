name: lxd
base: core20
assumes:
  - snapd2.39
version: "4.24"
grade: stable
summary: LXD - container and VM manager
description: |-
 LXD is a system container and virtual machine manager.

 It offers a simple CLI and REST API to manage local or remote instances,
 uses an image based workflow and support for a variety of advanced features.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions. Existing
 integrations with many deployment and operation tools, makes it work
 just like a public cloud, except everything is under your control.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines when running Linux on Linux.

 LXD virtual machines are modern and secure, using UEFI and secure-boot
 by default and a great choice when a different kernel or operating
 system is needed.

 With clustering, up to 50 LXD servers can be easily joined and managed
 together with the same tools and APIs and without needing any external
 dependencies.


 Supported configuration options for the snap (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that have full control over LXD [default=lxd]
   - daemon.user.group: Set group of users that have restricted LXD access [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - ovn.builtin: Use snap-specific OVN configuration [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

 For system-wide configuration of the CLI, place your configuration in
 /var/snap/lxd/common/global-conf/ (config.yml and servercerts)

contact: lxc-devel@lists.linuxcontainers.org
issues: https://github.com/lxc/lxd/issues
source-code: https://github.com/lxc/lxd
website: https://linuxcontainers.org/lxd
confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots:
      - lxd
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  user-daemon:
    command: commands/lxd-user
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd-user/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - lxd-support
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-progs
    organize:
      sbin/: bin/
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/rbd
      - lib/*/ceph
      - lib/*/libatomic.so*
      - lib/*/libboost_iostreams.so*
      - lib/*/libboost_program_options.so*
      - lib/*/libboost_thread.so*
      - lib/*/libcephfs*
      - lib/*/libibverbs.so*
      - lib/*/librados.so*
      - lib/*/librbd.so*
      - lib/*/librdmacm.so*
      - lib/*/libsnappy.so*
      - lib/python3

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.16.1
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  dqlite:
    after:
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: nil
    build-packages:
      - on amd64:
        - acpica-tools
        - nasm
        - uuid-dev
      - on arm64:
        - acpica-tools
        - nasm
        - uuid-dev
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0
      set -ex
      git clone https://github.com/tianocore/edk2 . -b edk2-stable202202

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Fix submodules
      sed -i "s#https://git.cryptomilk.org/projects/cmocka#https://gitlab.com/cmocka/cmocka#g" .gitmodules
      git submodule update --init --recursive

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0003-boot-delay.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0004-gcc-errors.patch"

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM_ENABLE=TRUE \
            -DTPM_CONFIG_ENABLE=TRUE \
            -DTPM2_ENABLE=TRUE \
            -DTPM2_CONFIG_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libmnl:
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.2.1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*
    override-build: |
      snapcraftctl build

      sed -i "s# /lib/libmnl.la# ${SNAPCRAFT_STAGE}/lib/libmnl.la#g" "${SNAPCRAFT_PART_INSTALL}/lib/libnftnl.la"

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  libtpms:
    source: https://github.com/stefanberger/libtpms
    source-type: git
    source-tag: v0.9.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-tpm2
      - --with-openssl
    organize:
      usr/lib/: lib/
    prime:
      - lib/libtpms*so*

  liburing:
    source: https://github.com/axboe/liburing
    source-type: git
    source-tag: liburing-2.1
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0
      snapcraftctl build
    organize:
      usr/lib/: lib/
    prime:
      - lib/liburing*so*

  libusb:
    source: https://github.com/libusb/libusb
    source-type: git
    source-tag: v1.0.25
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libusb*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v1.0.2
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-json
    build-packages:
      - libedit-dev
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 18a08fb7f0443f8bde83393bd6f69e23a04246b3  # examples: compile with `make check' and add AM_CPPFLAGS

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.8.1
    source-depth: 1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container*.so*

  openvswitch:
    source: https://github.com/openvswitch/ovs
    source-type: git
    source-tag: v2.17.0
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
    stage-packages:
      - uuid-runtime
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/bin/: bin/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  ovn:
    after:
      - openvswitch
    source: https://github.com/ovn-org/ovn
    source-type: git
    source-tag: v21.12.0
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
      - --with-ovs-source=../../openvswitch/build/
    prime:
      - bin/ovn-nbctl
      - bin/ovn-sbctl

  spice-protocol:
    source: https://github.com/freedesktop/spice-protocol
    source-type: git
    source-tag: v0.14.4
    source-depth: 1
    plugin: meson
    prime: []

  spice-server:
    after:
      - spice-protocol
    source: https://github.com/freedesktop/spice
    source-type: git
    source-tag: v0.15.0
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  swtpm:
    after:
      - libseccomp
      - libtpms
    source: https://github.com/stefanberger/swtpm
    source-type: git
    source-tag: v0.7.2
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-seccomp
      - --with-openssl
      - --without-cuse
    build-packages:
      - expect
      - gawk
      - iproute2
      - libjson-glib-dev
      - python3-cryptography
      - python3-setuptools
      - socat
    stage-packages:
      - libjson-glib-1.0-0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      lib/swtpm/: lib/
    prime:
      - bin/swtpm
      - lib/libswtpm*so*
      - lib/*/libjson-glib-1.0.so*

  qemu:
    after:
      - libseccomp
      - liburing
      - libusb
      - spice-protocol
      - spice-server
    source: IRRELEVANT
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --disable-bochs
      - --disable-cloop
      - --disable-dmg
      - --disable-docs
      - --disable-guest-agent
      - --disable-parallels
      - --disable-qed
      - --disable-slirp
      - --disable-user
      - --disable-vdi
      - --disable-vnc
      - --disable-xen
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-libusb
      - --enable-usb-redir
      - --enable-linux-aio
      - --enable-linux-io-uring
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tcg
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --firmwarepath=/snap/lxd/current/share/qemu/
      - --localstatedir=/var/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
      - libusbredirhost-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
      - libusbredirhost1
      - libusbredirparser1
    override-pull: |-
      set -ex
      git clone https://gitlab.com/qemu/qemu . -b v6.1.1
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/local/bin/: bin/
      usr/local/lib/: lib/
      usr/local/libexec/: bin/
      usr/local/share/: share/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - bin/virtiofsd*
      - lib/*/libatomic.so*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - lib/*/libusbredir*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      export ARCH="$(basename $(readlink -f ${SNAPCRAFT_STAGE}/lib/*-linux-gnu*/))"
      export LD_LIBRARY_PATH="${SNAPCRAFT_STAGE}/lib:${SNAPCRAFT_STAGE}/lib/${ARCH}"

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
      - liblz4-1
    build-packages:
      - libuv1-dev
      - liblz4-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*
      - lib/*/libuv.so*

  sqlite:
    source: https://github.com/sqlite/sqlite
    source-type: git
    source-depth: 1
    source-tag: version-3.38.0
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - tcl
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.1.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-common
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - arptables
      - ebtables
    organize:
      usr/lib/ebtables/: lib/
      usr/sbin/: bin/
    prime:
      - bin/arptables-legacy
      - bin/ebtables-legacy
      - etc/ethertypes
      - etc/protocols
      - lib/libebtc.so.*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/lzma
      - bin/xz
      - lib/*/liblzma*so*
    override-build: |
      snapcraftctl build

      # Include the lzma symlink
      ln -s xz "${SNAPCRAFT_PART_INSTALL}/usr/bin/lzma"

  zfs-0-6:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.6
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-0:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.0.7
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-1:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.1.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"


  zstd:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - zstd
    organize:
      usr/bin/: bin/
    prime:
      - bin/pzstd
      - bin/zstd

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.12
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --disable-api-docs
      - --disable-bash
      - --disable-doc
      - --disable-examples
      - --disable-memfd-rexec
      - --disable-tests
      - --disable-tools
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick ca4c25c6e9ebb92f9e241ef9a231d4a715cb812d  # lxc-net: don't start by default inside lxc
      git cherry-pick f314419d1e054f7833b6976ec5ed32373aace622  # lxc-checkconfig: Fix bashism
      git cherry-pick 71ba7f65616e72a313e2a41615e449178da9daf2  # doc: Fix reverse allowlist/denylist
      git cherry-pick f7446b4e10d71f79f9f3952255608268842ee1f3  # cgroups: check that opened file descriptor is a cgroup filesystem
      git cherry-pick f1c4a17e7df5d819b1b170917865e2e458c8e5db  # cgroups: log fd of newly created cgroup
      git cherry-pick 8ef019a6ce2555f7b438b3841ab5216e5d6973ba  # doc: Fix reverse allowlist/denylist in Japanese man page
      git cherry-pick 3b9f84fd2397d06782bbf67dc8421463c43ab139  # ttys: ensure container_ttys= env variable is set correctly
      git cherry-pick 5ba5725cb4a210c25707beeca64fde5f561d1c71  # cgroups: modify cgroup2 attach logic

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-5.0.0
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
      - python3-jinja2
    stage-packages:
      - fuse
    plugin: meson
    meson-parameters:
      - --prefix=/
      - --datadir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
      - -Ddocs=false
      - -Dtests=false
    organize:
      lib/*/lxcfs/liblxcfs.so: lib/
      snap/lxd/current/lxc/config/common.conf.d/*: lxc/config/common.conf.d/
      snap/lxd/current/lxcfs/: lxcfs/
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc/config/common.conf.d/00-lxcfs.conf
      - lxcfs/
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 42c155d1df92d8bbabdb1de3433048584bb05d47  # lxcfs_fuse: ensure lxcfs_fuse_compat.h is included after including fuse header
      git cherry-pick e297458cb0d2a5c7f91ddacc771d4cf9efe301f8  # tree-wide: remove struct stat argument from DIR_FILLER and make it static inline
      git cherry-pick d58528f752aaa532eb3871899a27d66996a2a798  # tree-wide: ensure that file information is set even with legacy fuse
      git cherry-pick 02beb5d4e1b82e3416988af2341142518c804bd3  # tests: add test for issue #522
      git cherry-pick 112f0b9ca720b8f0da4d4a39153c16f55e3294e1  # meson: Include documentation
      git cherry-pick 1ef15e0d1f345ebb851f1bab8835cace5279e392  # workflows: disable documentation generation
      git cherry-pick 9d6cded612483cfb31919f306d1975ce801d8e25  # sysfs: Don't incorrectly filter entries
      git cherry-pick dcc13128a03b8af4e975e65b32afc841074bedb8  # tests: Fix sysfs test
      git cherry-pick 5daf75dbed117c75198e104f852fd170cac766de  # utils: add and use opathdir()
      git cherry-pick 2e3a6f5d8240695bd13a7a6da75de895b9407492  # sysfs_fuse: fix indendation
      git cherry-pick 2e13f0be3ad903adf870e7a3032c3356c0c9e4eb  # sysfs_fuse: generate file info for cpu<nr> entries as well
      git cherry-pick 75395f89cf6de91695562a0a47e36acbba879c1e  # meson: bump fuse version
      git cherry-pick 35bf60d4eed08e703180c1f6ec505c7c91442915  # github: add fuse3 tests
      git cherry-pick 006db260b1202761a6661085f7af2fd3cd7083f3  # meson: handle fuse versions with buggy dt_type handling
      git cherry-pick b997ce418919137df7a4552b2b8e0d8207edbaa5  # init/meson: Use libdir instead of hardcoded /lib path
      git cherry-pick a08da8d7e63a023679603a93c18b6bfc443f9471  # Query systemd system unit dir.

      set +ex
      snapcraftctl build
      set -ex

      patch -p1 $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook < "${SNAPCRAFT_PROJECT_DIR}/patches/lxcfs-0001-hook.patch"

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-4.24
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    build-snaps:
      - go
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nil
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 599dd2280553f816b945ebf5a128a6fc690a5219  # shared/util/linux: only complain on xattr size increase
      git cherry-pick 67f4f8c208ff0ec66232b153984e9d91ab8a53c3  # fix typo
      git cherry-pick 1c08d645b81c447528f5ef0761d5e3983f2bde86  # lxc/file: Update the description in lxc file mount
      git cherry-pick f31c2e32caac2da77cc6d2ff38e4b657d86e4e89  # i18n: Update translation templates
      git cherry-pick 7bf9269b15ef7c32b430a84fbd8438c497938e99  # sphinx: Don't pin dependencies
      git cherry-pick 6c23c249fac4c6533d0be1989c2472ff19089127  # lxd/db: Support for expiry_date in GetLocalStoragePoolVolumeSnapshotsWithType
      git cherry-pick 7c90bcacbf1c9d8011eff1db9174599adb3f98ea  # lxd: Support for expiry date in storagePoolVolumeSnapshotsTypeGet
      git cherry-pick 505ebf72d1d829b27d9250a2c4ac42ff4627c10e  # lxd: Warn if exec control connection disconnects prematurely
      git cherry-pick faa3c2c62dc2cf99eb90924d9ca9aae19485ec99  # lxd/cluster/heartbeat: Ensure g.Cluster is available
      git cherry-pick f0fa7901ccce81c1a8b4060ce6773b8e4fded424  # client/lxd: Add 5 second handshake timeout to websocket.Dialer
      git cherry-pick 08be1492c02c436e03b9889c98fa6b2ecf23b3a0  # lxd: Add 5 second handshake timeout to websocket.Dialer
      git cherry-pick 3520544925880d9a0fbd93fc0c2afb7dbbc3d9f3  # test: Add 5 second handshake timeout to websocket.Dialer
      git cherry-pick dfbecd407954dd698a56a57605e4ff9533bacef6  # lxd/db: Add snapshot id to return value in GetExpiredStorageVolumeSnapshots
      git cherry-pick 1858a938e5241165d42c3200be4ee8422f28f9a7  # lxd/storage: Prevent concurent snapshot for a volume
      git cherry-pick c1bfbe3270337b2dec325aac905fa5b644f618ef  # lxd: Prevent concurent snapshot expiry for a volume
      git cherry-pick 8483ddbe516b12bda5c600d3f06bcc0e88df217c  # lxd/instance_sftp: Handle projects on forward
      git cherry-pick 210073e632e635759b48f189e822085069f9f9d3  # client: Use DialTLS for SFTP connections
      git cherry-pick 614f36c1c6ed3ae38aab3cbbd8832c8d2a75dbd1  # client: Replace addMacaroonHeaders with addClientHeaders function
      git cherry-pick 5981c102fb3b4cdd90de60c65a27297d95ffdd08  # client/lxd: Removes duplicated header setting in rawQuery
      git cherry-pick ddb9d83dd10f3228a646476e8449c176e0f4a44f  # client: Replaces r.httpHost with r.httpBaseURL from net/url package
      git cherry-pick 68e2d7549a8631a6723f1efa983d68d13b7fc601  # test: Fix container devices nic bridged filtering tests on recent versions of nftables
      git cherry-pick aea8e1344582b9a636ca5e6e664a2abb91522088  # client/lxd/instances: Avoids connecting twice in rawSFTPConn
      git cherry-pick f487fce337cffe795e7218dbc4e78bc5e3383e5a  # test: Update file manipulation tests to use projects
      git cherry-pick 38fc39da220f524995cdc4d4dc8b0eb20b13897e  # lxd/instance: Improve var naming and comments related to pruneExpiredInstanceSnapshots
      git cherry-pick 384e35bde96ed5da00ec5bdd9ba9d0b5810b7105  # lxd/storage/volumes/snapshot: Improve var naming and comments related to pruneExpiredCustomVolumeSnapshots
      git cherry-pick 4dc4d89016456735042129a6f0227da896089879  # lxd/instance/drivers/driver/lxc: Create log path for forkfile if missing in FileSFTPConn
      git cherry-pick 19efaaf3875fa3de2caff73bc3e975da0b73b2eb  # lxd/instance/drivers/driver/lxc: Clean up forkfile.pid on exit
      git cherry-pick d729fa2f929f147657bdbc420ef1b6640e6c639d  # lxd/cluster/upgrade: Improve logging in triggerUpdate
      git cherry-pick 897846e0572ac89992b898d278ea0f2665f6b2bf  # lxc/file: Use random auth creds if --no-auth and --auth-user flags not specified
      git cherry-pick b2d6ee2e0bc58d32c9bb86f271c9c0d963fcf0c8  # test: Update SSH SFTP tests
      git cherry-pick b72f165662a2dd8cb4a62ff5d19e6f4f9d772de9  # tests/includes: Adds util to wait for DAD to complete.
      git cherry-pick dfaa60d5092997faf43b7252ddfb26eeb8a5bc2a  # tests: Uses wait_for_dad util instead of sleep.
      git cherry-pick 6fab1cfb117b847cc1695303206f5a5dd83d8a7e  # doc: restrict docutils version to fix parsing of notes
      git cherry-pick d77599353e1709829714c41daa2239979b9a0a2c  # lxd/firewall: Accept slices of IPv4 and IPv6 networks for bridge filter.
      git cherry-pick 2b8473e0360a586c8279c20926c5472a4a4302f7  # lxd/device: Adds function to calculate allowed IPv4 and IPv6 subnets.
      git cherry-pick a7986dffce98e18e32b9fb9a77b72f598dccfc35  # lxd/device: Use allowedIPNets to set up the firewall rules.
      git cherry-pick 765dfb6b078e9cd05b8ee08933f0c201df4281d9  # lxd/bgp: Handle multiple matches in RemovePrefix
      git cherry-pick b6899ae3e1df65cfc077069d9dbe21b9ef0120ec  # lxd/bgp: Fix issue with modifying paths list while iterating
      git cherry-pick cd20319e3c81d241484b3eb2ca757b4bf62b520a  # lxd/bgp: Don't fail on missing path
      git cherry-pick a65680b0a2cbc5e095fcfa14ad67054eef270574  # doc: add an extension for including YouTube links
      git cherry-pick ddabb22933febfc49d8c4e18025ec35354384566  # doc: add related YouTube links
      git cherry-pick 9af02960e1f34d06299dc76369eb2ec12a65f55d  # lxd/daemon: Adds kernelVersion to daemon struct
      git cherry-pick 0eb84cdc44c76995c9a78041ec846342e5b0a4b3  # lxd/state/state: Adds KernelVersion field to State structure
      git cherry-pick 0bcb7150cf9e815ace9698d21d8b65f8c06be125  # lxd/instance/drivers/driver/qemu: Use d.state.KernelVersion
      git cherry-pick 9645fa004fe336d3f5cd2f740154badb9ce46a6c  # lxd/instance/drivers/driver/qemu: Only enable io_uring support in kernels <= 5.13.0
      git cherry-pick 0c8a593af091554912bf6c257fe6782425f2a1f4  # lxd/cgroup/abstractions: Wrap parse errors to give context of problematic value
      git cherry-pick 0cf99ea1e9c1614fbe304b15e23b31eb755d5a79  # lxd/storage/utils: Prevent white space in storage pool names
      git cherry-pick f8c0262dd3487e0770b0b036f4c883d5706480a3  # doc: update YouTube extension to be ignored by OpenGraph
      git cherry-pick 3fecdbaa6eed5c0ed4e06c1c682c8f2def5ff424  # doc: open YouTube links in a new window
      git cherry-pick 762d962ddc0263c7ffef55f8ed4c47ed3ef7f20e  # lxd/instance/lxc: Handle long forkfile socket paths
      git cherry-pick 8258a7b679949f0eda5177dcff1c12a56940fcf2  # lxd/cluster: Don't mask lack of cluster response
      git cherry-pick df443132d9feaff9d8865c041265ec09faae015f  # lxd/device: Use allowedIPNets when clearing firewall rules.
      git cherry-pick 19349bd6783b4863771dfa13513567249a5ba425  # lxd/firewall/drivers: Fix typo in comment.
      git cherry-pick de4ffdfdd42d683bb26ace258237c98ecff80650  # lxd/firewall/drivers: Adds subnetMask and subnetHexPrefix utils.
      git cherry-pick 87fc07b82c5b1d4ff8df7e9ce2c1859cadadfe12  # lxd/firewall/drivers: Update ebtable and ip6table rule generation.
      git cherry-pick b98ccccac0fa742d536c2816a960606d6808b871  # lxd/firewall/drivers: Update ebtables rule matching logic.
      git cherry-pick 84b7f1c6b6a53602dfd09d1f9d54034a1ff1a375  # tests: Ensure firewall does not drop packets from within ipv4.routes.
      git cherry-pick 727ae92180410f57d3886812fc568bc18d6e4b0e  # tests: Corrects host IP in IPv6 tests.
      git cherry-pick d6060467bb62024681529244748772f5b2a7ea46  # tests: Change address of ipv6 network interface.
      git cherry-pick 71b17f1d4620bc8419b917c3739ee409635ac117  # tests: Tests ipv6.routes and ipv6.routes.external rules.
      git cherry-pick 0e2873833b68f1cb140a358496b8d7905712eef1  # lxd/firewall/drivers: Updates nftables bridge filter to accept multple subnets.
      git cherry-pick 014ab107c1b1c49433300b97505b08d9afde0fa7  # lxd/firewall/drivers: Remove FilterAllIPv{n} consts.
      git cherry-pick 9cfa1b564776978a3a76dc85c703f38a9d8744ca  # tests: Updates tests for new nftables rules.
      git cherry-pick 783de56c5c4d6be78e625b246ed8d89b6c97458f  # lxc/file: Ensure sshfs closes on exit request
      git cherry-pick 7e772a34c80d9b4a7b2cca46e9b7e453121b77cf  # lxd/response/upgrade: Adds Upgrade function to upgrade an HTTP connection
      git cherry-pick fe7cd5477829e289ef5113e0eb198ef5919359b3  # lxd-agent/sftp: response.Upgrade usage
      git cherry-pick 18a66eaa8f1a6b2424636309288b03e874889592  # lxd/cluster/gateway: response.Upgrade usage
      git cherry-pick 4c862810c44e04767f9be1cd2023fa7b67b116a3  # lxd/instance/sftp: response.Upgrade usage
      git cherry-pick ba2017dfab461dba5c2c2f37512380802b3832a6  # lxd/storage: Renames setupStorageDriver to storageStartup
      git cherry-pick 44810558f7b6ffdd8c8976f6cf2ae010ff0ddcfb  # lxd: storageStartup usage
      git cherry-pick d4e8731f60685c5632accf3edbbf0473acbbce9c  # lxd/storage: Comment consistency with networkStartup
      git cherry-pick 7c6b3708777c52727becf2f4a9aedeb0755303c7  # lxd/networks: Corrects comment copy/paste error
      git cherry-pick 4727d032545d7c1251ee114f31eda4da36ba4e24  # lxd/device/config/devices: More efficient allocations
      git cherry-pick 8dbc36a45b396fbd2fc7b7788ba9dc4f95252d77  # lxd/device/device/interface: Adds PreStartCheck
      git cherry-pick 0f593f5952ab711aa98d93ea0ba4f0d88b2c8373  # lxd/device/device/common: No-op PreStartCheck
      git cherry-pick 57090863b1c06dd38d7e9de2e00da330b6ffeeee  # lxd/device/disk: Adds PreStartCheck function to check if storage pool is available
      git cherry-pick c5f42fb2e5b444fba9ede2cedba2c713b1b9dee0  # lxd/device/disk: Included wrapped error in diskSourceNotFoundError
      git cherry-pick e661c1fa00e68d8c092091274dd0937b21641433  # lxd/instance/drivers: Expand start up validation to check for root disk storage pool availability
      git cherry-pick ff2606e05e545df35a68e1538202dbb1c1d732a3  # lxd/storage/load: Replaces UnavailablePools with IsAvailable
      git cherry-pick a5fbb60432ccdf14a044b38bed6ce9d5e2aa4ade  # lxd/storage/errors: Removes unused ErrPoolUnavailable error var
      git cherry-pick 7071e0214fe33ca9f962e47e94f3706915806272  # lxd/storage/backend/lxd: IsAvailable usage
      git cherry-pick 7062ea7b4f7c5ba3dd179f3f6006c13616679f60  # lxd/storage/backend/lxd: Replaces use of ErrPoolUnavailable with generic http.StatusServiceUnavailable
      git cherry-pick c34318c5980f8c411d3c04ef1e1115ea135a007a  # lxd/instances: Prevent concurrent running of instancesStart
      git cherry-pick df02fd047d1ab6070d036cf3157841c332f157e3  # lxd/instances: Updates instancesStart to detect http.StatusServiceUnavailable error class
      git cherry-pick 8b448b0e4f8f2df6f5797e52c94899e920cc4463  # lxd/instance/drivers: Call device.PreStartcheck() from deviceStart()
      git cherry-pick 73e69581e237776a3485d6be90da919a3b0b0d23  # lxd/instance/drivers: Use device rather than devName in contextual logging
      git cherry-pick c4ad1f2268f10596dd3b212e55ee23788827c48a  # lxd/instance/drivers/driver/qemu: Log project and instance name in getAgentMetrics
      git cherry-pick 76c995bd309862fa078efa3a2b9be1880f0e07b2  # lxd/storage: Increase log warnings to errors in storageStartup
      git cherry-pick 96273bb2c5ca7283d2ed3d53a701e3ac547e4d9b  # lxd/device/device/interface: Adds Name and Config to Device interface
      git cherry-pick 2e47788da24b79baf7a621836127022a696680d3  # lxd/instance/drivers/driver/lxc: Update deviceLoad to just return Device
      git cherry-pick ca3d6f5e8634e7c0262d46fd330e4573e675dd48  # lxd/instance/drivers/driver/lxc: Updates lxcCreate to use deviceLoad and deviceAdd
      git cherry-pick 57d7a578c0bf4e886b60fd52dd4c628813761cf6  # lxd/instance/drivers/driver/lxc: Updated usage of deviceLoad
      git cherry-pick fe3c9cb424967abc93220d49df3193eeb8482e70  # lxd/instance/drivers/driver/lxc: Updates deviceAdd to accept a device
      git cherry-pick c66645a40ecfeab4dbfbc517f06b06357425a520  # lxd/instance/drivers/driver/lxc: Updates deviceStart to accept a device
      git cherry-pick 013cb4726ba827be305a6cf156ba41b04133ee74  # lxd/instance/drivers/driver/lxc: Adds Adding device log message
      git cherry-pick af1f3cc21693ef03430c6d233699d62ceb32457c  # lxd/instance/drivers/driver/lxc: Updates startCommon to use deviceLoad and deviceStart separately
      git cherry-pick 07c383eef93e892ea8e06d6125017ba414a8fab0  # lxd/instance/drivers/driver/lxc: Updates updateDevices to use deviceLoad and deviceAdd/deviceUpdate separately
      git cherry-pick cab9aeaf6a3a4c98dcbea211878fa1eddaabab8b  # lxd/instance/drivers/driver/qemu: Update deviceLoad to just return Device
      git cherry-pick 5f416f83f1cb2ea4575e14d4a5fee44d8432638f  # lxd/instance/drivers/driver/qemu: d.deviceLoad usage
      git cherry-pick 6e1149bc59890759517834461a5e0c520f6450cb  # lxd/instance/drivers/driver/qemu: Adds Adding device log message
      git cherry-pick cf749f3fa7ba7f41a849cccfd1613755f7e4b8aa  # lxd/instance/drivers/driver/qemu: Adds Removing device log message
      git cherry-pick e09fae0efa0c232933adf383f1d6f70983350c6c  # lxd/instance/drivers/driver/qemu: Update deviceAdd to accept a device
      git cherry-pick 93306f2f829c2c8611e280898ec4037d61d5fea9  # lxd/instance/drivers/driver/qemu: Updates qemuCreate to use deviceLoad and deviceAdd
      git cherry-pick 89eb8ebe2af637de4872209fb37a5d6da6e926f8  # lxd/instance/drivers/driver/qemu: Updates updateDevices to use deviceLoad and deviceAdd/deviceUpdate separately
      git cherry-pick af7b1fefa3e0602469a4ff80c46df1eef53331b8  # lxd/isntance/drivers/driver/qemu: Updates deviceStart to accept a device
      git cherry-pick 5c95862b6650e713e88c41912722843a3c338866  # lxd/instance/drivers/driver/qemu: deviceStart usage
      git cherry-pick 15ace962a4e431673bcb8817beb8b845c64e4c01  # lxd/instance/drivers: Load all devices before starting them during instance start
      git cherry-pick 979248df7c2e214216286cf2da0acc1548b3f381  # lxd/instance/drivers: Add pre-start device checks when starting instance devices
      git cherry-pick 867fb48fda0005b919c115a5a3fc3a736e207dba  # lxd/instance/drivers/driver/lxc: Update deviceStop to accept a device
      git cherry-pick 589cb6d46c33d1a642bcaeccd735d6a1d2dba835  # lxd/instance/drivers/driver/lxc: Update startCommon to pass device to d.deviceStop
      git cherry-pick a3b562d56038861097f6c51c1b1ac5a20393d357  # lxd/instance/drivers/driver/lxc: Updates cleanupDevices to pass device to d.deviceStop
      git cherry-pick 3ba68d9585e8cb5dd7cd8b6de6427f87f4aadb80  # lxd/instance/drivers/driver/lxc: Updates updateDevices to pass device to d.deviceStop
      git cherry-pick b72bece1f6582a7600bf37b39366e11dbc7f752b  # lxd/instance/drivers/driver/qemu: Updates deviceStop to accept device
      git cherry-pick cd468c6ac3310a9a5005f469d60838198547a64b  # lxd/instance/drivers/driver/qemu: Update Start to pass device to deviceStop
      git cherry-pick a86b560d5ac6c6ea87dcb6d4a383a04d4b9b2835  # lxd/instance/drivers/driver/qemu: Updates updateDevices to pass device to deviceStop
      git cherry-pick 3c6cdd02154fd910dcfb4a7a9d4274c2a21d1ca4  # lxd/instance/drivers/driver/qemu: Updates cleanupDevices to pass device to deviceStop
      git cherry-pick 76bd2c3b1f004c96e625866f1ca88438037fb14b  # lxd/response/smart: Adds IsNotFoundError function
      git cherry-pick c1c87b6fe8da00185320a4c86352b08f370fc7ae  # lxd: Replace checks for various not found errors with response.IsNotFound() usage
      git cherry-pick d0661a706e2b0dbfb3eb33e7895ef0f907c1a001  # lxd/storage/backend/lxd: Replaces bespoke revert with revert package
      git cherry-pick 1b8bd80545b8965ac7bb6fdb094777821f150f40  # doc/environment: Adds LXD_IDMAPPED_MOUNTS_DISABLE env var
      git cherry-pick 2dd411d41216d0c91ade95d95a3899341d658176  # lxd/daemon: Detect LXD_IDMAPPED_MOUNTS_DISABLE env var and disable idmapped mount support
      git cherry-pick 3d87b4ac4c5aec9b7151aa42ba194fb62fb273ba  # lxd/storage/utils: Adds VolumeDBDelete function
      git cherry-pick f414673e802111277e69bce1cdbefc444970048b  # lxd/storage/backend/lxd: Replace usage of RemoveStoragePoolVolume with VolumeDBDelete
      git cherry-pick 3676ab9ac823623ab10c1f55524b314b74ca4b16  # lxd/storage/utils: Reduce arguments of VolumeDBCreate in style of VolumeDBDelete
      git cherry-pick 6782ca24d1e61aae7d6c6cf3702ddbd2d8650256  # lxd/storage/backend/lxd: VolumeDBCreate usage
      git cherry-pick 935f43f12da483ae2a0c9a3acf5212fa4b4f5772  # doc: add an extension for adding Discourse links
      git cherry-pick d60e2e7a1684e62cdac2fe1b0178aab0772a753e  # doc: add links to tutorials on Discourse
      git cherry-pick 71951e8af60af1e5686a86bc6373c9efd41ed343  # doc: add links to specifications on Discourse
      git cherry-pick 39a8f2e929c001c6e1bd8884a962180d353937dd  # lxd/network/ovn: Don't use HostPathFollow on OVN configs
      git cherry-pick 51eaa589f799d8814ed3fe0af6b8a6995c3daa2b  # lxd-agent: cleaner shutdown sequence

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"
      export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"

      # Setup the GOPATH
      rm -Rf "${GOPATH}"
      mkdir -p "${GOPATH}/src/github.com/lxc"
      ln -s "$(pwd)" "${GOPATH}/src/github.com/lxc/lxd"

      # Download the dependencies
      go get -d -v ./...

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc" github.com/lxc/lxd/lxc
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc-to-lxd" github.com/lxc/lxd/lxc-to-lxd
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd" -tags=libsqlite3 github.com/lxc/lxd/lxd
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-benchmark" github.com/lxc/lxd/lxd-benchmark
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-user" github.com/lxc/lxd/lxd-user

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      cp scripts/bash/lxd-client ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - lib/*/libidn.so.*

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark
      - bin/lxd-user

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    build-snaps:
      - go
    plugin: nil
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"

      # Download the dependencies
      go get -d -v ./...

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-migrate" -tags=libsqlite3 ./

      # Install bridge script
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    build-snaps:
      - go
    plugin: nil
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/snap-query" snap-query.go
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - ovn
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - zfs-2-0
      - zfs-2-1
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8 zfs-2.0 zfs-2.1; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
      wrappers/editor: bin/
      wrappers/remote-viewer: bin/
      wrappers/sshfs: bin/
