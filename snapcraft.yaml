name: lxd
base: core
version: "3.19"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs: [network]

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - lib/*/libpython2.7.so*
      - -lib/python2.7/sitecustomize.py
      - lib/*/ceph
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libcephfs*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/libibverbs.so*
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so
      - lib/*/libsnappy*

  dqlite:
    after:
      - libco
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    after:
      - qemu
    source: https://github.com/tianocore/edk2
    source-type: git
    plugin: nil
    build-packages:
      - acpica-tools
      - nasm
      - uuid-dev
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM2_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libco:
    source: https://github.com/canonical/libco
    source-type: git
    plugin: make
    organize:
      usr/lib/: lib/
    prime:
      - lib/libco*so*

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
      - libpopt0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate
      - lib/*/libpopt*so*

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.0.6
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      # Supposedly supports x86_64, aarch64 and ppc64le but only x86_64 builds
      [ "$(uname -m)" != "x86_64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  qemu:
    after:
      - libseccomp
    source: https://git.qemu.org/git/qemu.git
    source-type: git
    source-tag: v4.2.0
    plugin: autotools
    configflags:
      - --disable-docs
      - --disable-slirp
      - --disable-user
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-linux-aio
      - --enable-pie
      - --enable-seccomp
      - --enable-system
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --enable-vnc
      - --firmwarepath=/snap/lxd/current/share/qemu/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libcap-ng-dev
      - libglib2.0-dev
      - libpixman-1-dev
      - libaio-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libpixman-1-0
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      # Mangle the configure a bit
      sed -i "s/^unset target_list$/target_list=\"$(uname -m)-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - lib/*/libmagic*so*
      - lib/*/libpixman*so*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*

  sqlite:
    source: https://github.com/canonical/sqlite
    source-type: git
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tclsh
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    plugin: autotools
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ebtables
      - iptables
      - xtables-addons-common
    organize:
      usr/lib/*/xtables/*: lib/xtables/
      lib/ebtables/*: lib/
      sbin/: bin/
    prime:
      - bin/ebtables
      - etc/ethertypes
      - etc/protocols
      - lib/libebt*
      - lib/xtables/*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/xz
      - lib/*/liblzma*so*

  zfs-0-6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.13
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.8.2
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-3.2.1
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --disable-memfd-rexec
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 6453ba565ed7e3be9b3c9fa74ac07cf8e06b9afc  # tree-wide: initialize all auto-cleanup variables
      git cherry-pick 9c579205669cce54944e2c4f115e69ef18475bbe  # pidfds: don't print a scary warning on ENOSYS
      git cherry-pick 3dd7829433f63b2ec1323a1f237efa7d67ea6e2b  # network: restore ability to move nl80211 devices
      git cherry-pick b31d62b847a3ee013613795094cce4acc12345ef  # cgroups: initialize cpuset properly
      git cherry-pick e4103cf63f3e24667680544303e7c7230b3d508c  # lxccontainer: do_lxcapi_detach_interface to support detaching wlan devices
      git cherry-pick 7c3d3976fa4036fe5c260ca3a68376360e98e260  # utils: Fix wrong integer of a function parameter.

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-3.1.2
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.13
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-3.19
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    stage-packages:
      - acl
      - dnsmasq-base
      - netbase
      - pigz
      - rsync
      - squashfs-tools
      - xdelta3
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/canonical/go-dqlite/internal/bindings/server.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 54159ecc9bc523ad087ae7b29dfbcd660d8cdbd9  # lxd/container: Improves error messages in instanceValidDevices
      git cherry-pick db64e3bdbee07808d734ef8ce02ff85465625ba4  # lxd/container: instance.ValidDevices usage
      git cherry-pick 6432867e3d09c80a409023d8d81ef78096634ee2  # lxd/container/lxc: instance.ValidDevices usage
      git cherry-pick a085847c141db8330418f40eb749a5a8d65043db  # lxd/device/config/devices: Improves error messages
      git cherry-pick a28827139be5d7d2ac9f6513d9f02747a85d3eb1  # lxd/device/disk: Adds support for VM disk devices
      git cherry-pick 65238f9388f0f25e4d25da17b21d33d60ad4d98e  # lxd/instance/instance/interface: Comment ending consistency
      git cherry-pick 2f765d04ed7cd97e509e1e7117e940307352fe08  # lxd/instance/qemu/vm/qemu: Fixes driver index loop bug
      git cherry-pick 1772ce40f39bc0af48a8577dad00b5c9dee9cd8a  # lxd/instance/instance/utils: Introduces constant to indicate profile validation in instance name
      git cherry-pick 5fa9a6b0b21129d18749342298bdc81c6daa650c  # lxd/profiles: Switches to use instance.ProfileValidationName during profile validation
      git cherry-pick 0796e5a9bbb65bfc92d223c0366970ae85f732e2  # lxd/device/disk: Updates Stop device to understand VM disks
      git cherry-pick 83304a8a7d29feb1a128b193c86cc4e6f850732c  # lxd/storage/drivers/driver/common: Removes generic vfs functions as not common to all driver types
      git cherry-pick 53a9d95a71101dcff2d4e989ac8375646d4fa4aa  # lxd/storage/drivers/generic/vfs: Moves generic VFS drivers into standalone file
      git cherry-pick 42e9d56040bb7695b6457ba710f01b8fe7c07b3a  # lxd/storage/drivers: Updates usage of generic VFS functions
      git cherry-pick ba732d69ae2a10339ac453b53dcf6d90666b53aa  # lxd/instance: Moves vm qemu pkg into instance/drivers pkg
      git cherry-pick a65f2adbe3499d66b973cf08031245639b8162bc  # lxd/instance/drivers/container/lxc: Adds placeholder for future lxc implementation
      git cherry-pick 1b14fda15482701562d86c3ca860bc0ce9e0e974  # lxd/instance/drivers/load: Adds instance load functions
      git cherry-pick c0cc1473bb70d91a160687ccfb9e76c9d4c84796  # lxd/container: Removes unused functions
      git cherry-pick 17564e4dfebe8698b3f06da327b81ada7d234b9f  # lxd/db/containers: Renames ContainerToArgs to InstanceToArgs
      git cherry-pick 74d2b772154cf977fc9db2d0a04ee366fe6b5cec  # lxd/container: db.InstanceToArgs usage
      git cherry-pick 4dc40512c50580ccce9da64b8b5c5f2f27a65d9b  # lxd/profiles/utils: db.InstanceToArgs usage
      git cherry-pick f858c49d82f092559b2241ca6ca2d4d2f1131ef7  # lxd/profiles/utils: Updates use of containerLXCInstantiate
      git cherry-pick b6c80d117af42537bd70f126a683510aed6403a9  # lxd/container/lxc: Push containerLXC load functions into instance/drivers package
      git cherry-pick 4670444fe9b1e73721d2ad17e0caedd511065bcd  # lxd/container/lxc: containerLXCInstantiate usage
      git cherry-pick 60934a72436ddbec145a2c9ca162534a20927271  # lxd/container/lxc: Makes containerLXCInstantiate compatiable with generic instance load functions
      git cherry-pick dc35aa4ac8c5efaef71fa0d4b60f1efd4c1742d0  # lxd/containers: instance.Load usage
      git cherry-pick 29887077f1a64a1eb6ee786ce9ad70cd5a7d224b  # lxd/containers/post: instance.Load usage
      git cherry-pick 53ecc06b8895164c4110a932a784e88b2bd92286  # lxd/instance/drivers/vm/qemu: Unexport and rename load functions
      git cherry-pick ea5b6e470d0099a5fdc56a80aac55067080d76f6  # lxd/instance/instance/utils: Load function comments
      git cherry-pick 21f349edf95a0357e1745c30345e1716c5fe3a27  # lxd/instance/instance/utils: Adds Create instance function placeholder
      git cherry-pick d40be7fe4352419cf1ff010134c3a72cd16b4344  # lxd/instance/instance/utils: db.InstanceToArgs usage
      git cherry-pick 56e9ca5341bc9a6737c99b8b6e12027baa0bc1a5  # lxd/instance/drivers/vm/qemu: Unexports qemu implementation
      git cherry-pick dd208c34185c680ab9baa48ad5747be926470582  # lxd/exec: Pass full req through
      git cherry-pick 86c70c80d5f6a0665087c54dd7552361efc77f33  # lxd/exec: Forward control messages
      git cherry-pick 565dcb3abd5f26178e3ed5547676d8898718c411  # lxd/containers: Fix error handling on stop
      git cherry-pick 19f3e9b0559f2d37c0e400c334ae061c7793fb0e  # lxd/vm: Fix stop race condition
      git cherry-pick 7d5e22c0cf34f230413c107a751683814f09c63e  # lxd/vm: Add locking for stop and shutdown
      git cherry-pick b19d206ba6a986093aff8ae22caab9dc9b50ce2c  # lxd/vm: Don't crash on vm-initiated reboots
      git cherry-pick bc8b2f20f1054fac6f37ef55ff094221e9195f30  # lxd/storage: Remove legacy volume.size check
      git cherry-pick 10db34f69f9cb75c512f59320b90b28b10efe6a4  # lxc/init: Consider image type for instance type
      git cherry-pick da481b3e7d2f1b1fd8b407a8bb2b666abe750d38  # i18n: Update translation templates
      git cherry-pick 6e8bae55c62d8cbc85aa9490c8e123d5850cca09  # tests: Update volume.size tests
      git cherry-pick c24f0951524502947a383fc9f7cdb164c2c9b787  # lxd/vm: Store qemu log
      git cherry-pick ee3a0d4b14d646b925ed3519c58b9145338e5653  # [Makefiles] Whitelist ldflags in libcap pkgconfig
      git cherry-pick 2801b88e6706a7049abad4063d7ca2d4bdda8c9e  # lxd/vm: Fix incorrect bootindex
      git cherry-pick 6de68015d72290c92aa6abd78a42f8646603dae7  # lxd/vm: Implement snapshot restore
      git cherry-pick 0b8057e551faa27c029a0f104c2f0dd78eb9e819  # lxd/instance: Move LoadAllInternal
      git cherry-pick b231670f59e04d23d30d848e94ee0f1a44e63dd1  # lxd/vm: Implement Snapshots
      git cherry-pick db1887a12e220c3e3b54cd927d91a1cf32df6b37  # lxd/storage/drivers/utils: Updates ensureVolumeBlockFile to use minimum block boundary size of 8192 bytes
      git cherry-pick 9ab9c9cc28e30b3358a5e0fc00f6530b5883cdef  # lxd/storage/drivers/driver/lvm/utils: Avoid repetition of 512 bytes in roundedSizeBytesString
      git cherry-pick 35cefe4c1dc811c9dfdf42771b7cc12b918499bb  # doc: Corrects lvm striping options
      git cherry-pick 1ec4c0d4668d7baaa9efbc7e29e68cb68239ff3f  # lxd/instance: Renames driver files for consistency
      git cherry-pick 7e2fb712273ffdc7c8ffd1e2252b3ba92c09a4f8  # lxd/instance: Comment clarification
      git cherry-pick 641045749556335c355fc385c7f0a47f5ca7f1fc  # lxd-agent: Fixes bug when agent not seen as started if LXD restarted
      git cherry-pick 818c376d3d13b1f410ae033a12d978b485036862  # lxd/device/device/utils/network: Adds host MTU support for VM tap devices
      git cherry-pick 4ab5de8a5a443c70df8bd3ec0033974459a4f94f  # lxd/device/nic/bridged: Makes VM host side TAP interface name prefixed with "tap"
      git cherry-pick 3a18c539e6716dd0977b7b112e1ce42982ccbaef  # lxd/instance/drivers/qemu: Switch to template pkg to generate qemu conf
      git cherry-pick 9fbd01aee9042c2114e5ed81604ab6d81e21b7d5  # doc/api-extensions: Fix syntax
      git cherry-pick 44f6dfe0a43ef89d4b6f457bc4006dceded89796  # api: vm_boot_priority
      git cherry-pick 2e8f4bb22d7023ef79f9a3319c1781584c208230  # lxd/vm: Add boot.priority
      git cherry-pick 273de74a5048c7f8f9bdb2a0cbe5e6d55de090b9  # lxd/container/logs: Makes log file retrieval project aware
      git cherry-pick 2115bb6456a9bc1b5b1db4c7b5e251461bd2744f  # lxd/container/lxc: Adds devName skipping for startCommon
      git cherry-pick 088246c4a70dc0e956d5c3ca50a0774be487c4ca  # lxd/device/config/device/runconfig: Adds DevName to MountEntryItem
      git cherry-pick 03874f8833c757f584526abf93c24b2a28015110  # lxd/device/disk: Adds DevName to MountEntryItem
      git cherry-pick 1670a1abd30908ee82c48d0a6cc006f6e122ec56  # lxd/device: Adds devName property to network interface run config
      git cherry-pick 1ff1c82b40ebdeaba531514259b6fa682bfe311d  # lxd/instance/drivers/driver/qemu: Adds support for Disk and NIC device boot.priority setting
      git cherry-pick 26fd1746c61ce4666f7aec0273d42f8e3207f8ce  # lxd/container/exec: Removes duplication of env map now its being stored back into post data
      git cherry-pick 7fb89f1bc752a979973962ed0cae45b40bdddbb9  # Revert "lxd/exec: Forward control messages"
      git cherry-pick e9bb84db87136e1722a3d696e7a4b968bf4ea04b  # lxd/instance/drivers/driver/qemu/cmd: Makes qemu cmd struct qemu specific
      git cherry-pick 86c50dbd7e070201adc2ef1f7ca9b9019f3cdd5b  # lxd/instance/drivers/driver/qemu: Simplifies Exec with revert
      git cherry-pick 0cf0a786f2431777edb4428732a45b54066e62a0  # lxd/container/exec: Cleaned up logging
      git cherry-pick ca5bc517dfa07be2d2838e06ad58e15f77b2701e  # lxd/container/exec: Switches to use instance command for resizing window
      git cherry-pick b2fffbc4639bfd49611a4abf4584c6e0a26d55f7  # lxd/container/lxc/exec/cmd: Adds WindowResize
      git cherry-pick 9cdf7e0ffde1e893a3dafe6882f41d77d2cc423f  # lxd/instance/instance/exec/cmd: Adds WindowResize function to signature
      git cherry-pick d66eb0555a1e575a61688526a1769fde8d8fe135  # lxd/instance/drivers/driver/qemu: Reworks command control
      git cherry-pick ded68c37f12531bc26572fd861bd73e988e792a5  # lxd/instance/drivers/driver/qemu/cmd: Adds WindowResize support
      git cherry-pick 124a100bd0c6513812418c1d07e5d7b278c9af10  # lxd/instance/drivers/driver/qemu: Sets PID to 0 for VM commands
      git cherry-pick e34e02a62192af2fc1954147fb2dca3ccc70b306  # lxd/instance/drivers/driver/qemu: comment on forwardControlCommand
      git cherry-pick d45e3707d3d550b34e772a4e00af2c0f585d94a8  # lxd/device/nic/p2p: Adds VM support
      git cherry-pick 634c1c96f6b80bffe6e9eed5617a143690fbca66  # Close http transports since they might keep connections around
      git cherry-pick 5f34765f9118f5e36689267b6d66d82195e178b5  # lxd/daemon: Ignore SIGHUP
      git cherry-pick 7b03a1ed45b64990293ec93f8c5dc5926efe5d79  # lxd/instance/drivers/driver/qemu: Switch to unsafe async I/O mode on ZFS pools backed by loop files
      git cherry-pick 5ec5ddc4874de101eaf4488ee97ceb39d8396cee  # lxd/storage: Improves pool init failure messages
      git cherry-pick 66a5e060b08f0a51cf9b5a06d6f45ec04879e5a0  # lxd/storage/drivers: Indicates DirectIO support for most storage drivers
      git cherry-pick bc52a49606925c0b2c8ec00606539ef3390ba170  # lxd/storage/drivers/driver/types: Adds DirectIO indicator to driver info struct
      git cherry-pick e4d8327d518da490165797cb39eb579a9e7d691e  # shared/version/version: Quotes malformed version string in error message
      git cherry-pick f1050af45eddcca053d98292447297263054a474  # lxd/storage/drivers/driver/zfs: Adds DirectIO detection based on version
      git cherry-pick b2024c7911d8179f457b3cf4d72ee0027ba74a1b  # lxd/instance/drivers/driver/qemu: Unmounts volume on start failure if needed
      git cherry-pick 2e4484146b2d6ad039439f4e648dc50fe6c3079b  # lxd/device: Relaxes requirement for name property when not using containers
      git cherry-pick 254921475b1d9837cb1ea20e756131df1c2285b7  # lxd/device/nic/macvlan: Clean up valid fields
      git cherry-pick 860005ce080d1bf0167d36a7f462242103d32fa3  # lxd/device/nic/macvlan: Adds VM support and improves revert
      git cherry-pick 9fc15f83510188df9dfc0031c2d72d262d8b4730  # lxd/instance/drivers/driver/qemu: Adds macvtap support
      git cherry-pick 8e080e82f5b215c43cdc9892c59af776b111a933  # lxd/instance/drivers/driver/qemu/templates: Moves templates to separate file
      git cherry-pick 1a52a71e551957d5432d22a1f27d471787149409  # lxd/instance/drivers/driver/qemu: Updates template usage
      git cherry-pick 4b668a92723290a84256630fea0d7276ff58a179  # lxd/storage/drivers/driver/dir: Adds HostPath support
      git cherry-pick 341b8679fa73f0d35f949d7599058244aecfc398  # storage: Fix xfs_growfs command for older versions
      git cherry-pick 9a19da5dbc6e0cd6d00688751624efa614e78e3c  # shared/simplestreams: Fix architecture filtering
      git cherry-pick 7b0b77b217e5315f3f4d48b7f88af199e0ef3347  # lxd/patches: Reset ZFS mountpoint/canmount
      git cherry-pick 433f0ca1c15174a28cd18492802ae7073142d124  # shared/simplestreams: Fix inconsistent sorting
      git cherry-pick 008309aa61b367284306a01957dfb707f4d7356b  # lxd/instances: Don't rquire type on copy
      git cherry-pick 6e9206df71680cffe416cbf13279cedde241a7aa  # lxc/config: Tweak argument processing
      git cherry-pick 96c3963c40b761170c20287dff8fdff595b09a69  # lxd/vm: Prevent attaching directory as disk
      git cherry-pick 963beaea2312f10c1f3473a73d371c9c3aa0b5e8  # lxd/storage/zfs: Ignore bookmarks
      git cherry-pick 2876dbdec35dc4b0b3e24bd82cba6b62a6c3f9a8  # lxd/storage/btrfs: Skip missing quota
      git cherry-pick 829ed1db659480ab1fe55a132bc564b3024b00cb  # doc/instance: Clarifies disk path not available for VMs
      git cherry-pick b869287f958d4d53f1685a5f85a5d490dee98843  # lxd/instance/drivers/qmp/monitor: Prevent crashes with races closing closed channel
      git cherry-pick a618982604575187f1a592783bfa5002fbbef817  # lxd/instance/drivers/driver/qemu: Improve clean up on start failure
      git cherry-pick 432ac48f1cd0d2d8052b86774eba3396cb6c0aa5  # lxd/storage/backend/lxd: Only detect volume.block.filesystem changes on block backed pool FS volumes
      git cherry-pick 20c6e596b4db9db6affcba441c8d943f947d9ffe  # lxd/migration/migration/volumes: Adds support for pre-bidirectional negotiation targets

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Build the agent (special build tags)
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent github.com/lxc/lxd/lxd-agent

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/unsquashfs
      - bin/xdelta3

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libco
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xtables
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
