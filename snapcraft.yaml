name: lxd
base: core18
assumes:
  - snapd2.39
version: "4.4"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.


 Supported configuration options (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that can interact with LXD [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - lib/*/libpython2.7.so*
      - -lib/python2.7/sitecustomize.py
      - lib/*/ceph
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libcephfs*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/libibverbs.so*
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so
      - lib/*/libsnappy*

  dqlite:
    after:
      - libco
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    after:
      - qemu
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: edk2-stable202005
    plugin: nil
    build-packages:
      - acpica-tools
      - nasm
      - uuid-dev
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM2_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libco:
    source: https://github.com/canonical/libco
    source-type: git
    plugin: make
    organize:
      usr/lib/: lib/
    prime:
      - lib/libco*so*

  libmnl:
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.1.7
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.0
    plugin: autotools
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
      - libpopt0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate
      - lib/*/libpopt*so*

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v0.9.6
    plugin: autotools
    configflags:
      - --with-json
    build-packages:
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.1.1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  spice-protocol:
    source: https://gitlab.freedesktop.org/spice/spice-protocol
    source-type: git
    plugin: meson
    prime: []

  spice-server:
    after:
      - spice-protocol
    source: https://gitlab.freedesktop.org/spice/spice
    source-type: git
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  qemu:
    after:
      - libseccomp
      - spice-protocol
      - spice-server
    source: https://git.qemu.org/git/qemu.git
    source-type: git
    source-tag: v5.0.0
    plugin: autotools
    configflags:
      - --disable-docs
      - --disable-slirp
      - --disable-user
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-linux-aio
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --enable-vnc
      - --firmwarepath=/snap/lxd/current/share/qemu/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*

  sqlite:
    source: https://github.com/canonical/sqlite
    source-type: git
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tcl
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.0.0
    plugin: autotools
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ebtables
      - iptables
      - xtables-addons-common
    organize:
      usr/lib/*/xtables/*: lib/xtables/
      lib/ebtables/*: lib/
      sbin/: bin/
    prime:
      - bin/ebtables
      - etc/ethertypes
      - etc/protocols
      - lib/libebt*
      - lib/xtables/*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/xz
      - lib/*/liblzma*so*

  zfs-0-6:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.4
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.3
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --disable-memfd-rexec
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 3a7f78f9203ab7b01211419476eb469fdacfeb9e  # get the right path in get_cgroup command
      git cherry-pick 65b53096c90b494eb68d17659973cecc276ef789  # lxc: support CLONE_INTO_CGROUP
      git cherry-pick 0e609c17896c135a882a405c4f33fa9a10051837  # start: initialize cgroup_fd
      git cherry-pick 8eb14fa00c8cf316886fd3ffd7b2f24636fb25d1  # start: use __aligned_u64
      git cherry-pick 3e0175ef7c3fc1b478aca4227ed6f486a8fd104a  # attach: set no_new_privs flag after LSM label
      git cherry-pick 2e8b5275531d1c3cb820d4fae169ec7af4f3ae22  # templates/lxc-download.in: fix wrong if condition (use the result of the gpg command, not the result when executing the result of the gpg command)
      git cherry-pick 0404298b33fb3c35dd094d93aca087c976420b6a  # templates/lxc-download.in: make shellcheck happy
      git cherry-pick 04f72d91687fc3c0917b07019c6d8e6abfd50c2d  # templates/lxc-download.in: use GPG option --receive-keys instead of --recv-keys
      git cherry-pick c27f081bd11d125a7b6bc32495d64bfc9b457041  # cgroups: update terminology
      git cherry-pick 59410099422f775ee5eb9a41c8f6baec9e7e71c6  # cgroups: update terminology II
      git cherry-pick 4bc51378189aa626f585a7b3db93d5c45bc88cf4  # seccomp: support allowlist/denylist in profiles
      git cherry-pick f3783d061302cbe9ef320a0ea1e72f6bbfc2b4f5  # cgroups: use empty {} to initialize struct
      git cherry-pick 00a476d2668ed13df0b28d3d80a50a37fd874a09  # cgroup2_devices: fix access rule parsing
      git cherry-pick f19295e886360b2169c3eac2bd6fe5863b613e31  # api-extensions: add seccomp_allow_deny_syntax extension
      git cherry-pick 3b5796aa9525aeec547a7ef2196f3681adc172ad  # cgroups: fix bpf device program generation
      git cherry-pick af5c95175e2242019d187156de4ecfb49c863351  # cgroups: handle empty bpf log buffer
      git cherry-pick 2be8b3653664c40a55c357733946dcee2b8c3dfc  # tree-wide: s/ptmx/ptx/g
      git cherry-pick eed7e91793782a1444994e2de305f1eedc60b4ec  # tree-wide: s/pts/pty/g
      git cherry-pick ed6bc5f9c2c7ec45032e540f93bfa5b4d725022a  # openpty: fix faulty rename
      git cherry-pick 40d5ef1e1267505a7eca673cfaa49af301337906  # openpty: improve implementation and handling of platforms without it
      git cherry-pick 90c94e7925411e35ef2cbe099ad72f06450d9f5e  # checkconfig: Show LXC version in output.
      git cherry-pick f518238a759bd55c9a01472251dc7c791759d735  # autotools: include COPYING file
      git cherry-pick 4b37c92c7e80272c764a472662b4e74ab86210fd  # Improve efficiency of lxc_ifname_alnum_case_sensitive
      git cherry-pick 525f5e4c1904fa265c2548f3985cc100bef52fc7  # network: remove unused variable
      git cherry-pick 0c3978618b525f13d9b1e1d1bfb4324669171462  # compiler: add and use __hidden visbility
      git cherry-pick 931eca75a308a0f58cbefc98ad08bdad1ce15090  # string_utils: make all helpers hidden
      git cherry-pick 09b5e84b9c4d07de3082336c71582f6085d44add  # af_unix: hide unnecessary symbols
      git cherry-pick 60fd6174db0d3f32a10215741686b9e45931c1d3  # attach: hide unnecessary symbols
      git cherry-pick fe880ab271ae30436d41cb5c704c557f6d946774  # caps: hide unnecessary symbols
      git cherry-pick 16c032c57c3860523048e242249279cb4fbea273  # commands: hide unnecessary symbols
      git cherry-pick e0f15d2511d96bf28b63561922f4d7a4369d48c7  # commands_utils: hide unnecessary symbols
      git cherry-pick a841643962a81ccf73db2a956f26136a5e8c7c65  # conf: hide unnecessary symbols
      git cherry-pick a8450455ca65105b548f172ed90aaf7fd4275b07  # Makefile.am: Fix typo
      git cherry-pick 32d8c541dcdf6e7434a1eeae25aebf0c1d96ce50  # start: check correct flags when receiving network devices
      git cherry-pick af13c333d68ec64815859da918e4bd9581e920a9  # lxc-ls: bugfixes
      git cherry-pick 1659da351fee140ba16bbd2510ae8c0eb540358d  # confile: hide unnecessary symbols
      git cherry-pick 5dc06b559854ffd23382b9eab8774457e7ef1b2d  # confile_utils: hide unnecessary symbols
      git cherry-pick 7950a11eb947d98c96c4dfe4c6cd20f62c82033c  # criu: hide unnecessary symbols
      git cherry-pick f2d998c07e308d0c7f728ac0573822f74c98a11a  # error: hide unnecessary symbols
      git cherry-pick 0711e7989431c5a3aa9f7cdedbcc8e404f49a3f2  # file_utils: hide unnecessary symbols
      git cherry-pick 12b47815cfc148ae727c4ba86842cbbc1dbfb0b6  # initutils: hide unnecessary symbols
      git cherry-pick 7cf9ab575f6198f69ea76a6335a9876143bbd462  # log: hide unnecessary symbols
      git cherry-pick 4f6b5266b7b9ff6d32ed1dd56f68259e933667bf  # lxclock: hide unnecessary symbols
      git cherry-pick 66e8f7a88cee3772e411761ebc8f037e387630bd  # lxcseccomp: hide unnecessary symbols
      git cherry-pick 2b1c12c5a9b26efb85821a4e9c45c0e46591f437  # mainloop: hide unnecessary symbols
      git cherry-pick 50b98b68bf3dfe0cb37e0c53e4cac9e0563dff13  # monitor: hide unnecessary symbols
      git cherry-pick 6d95db4c6cfd03e15a2063bae8544bc03e2c610d  # namespace: hide unnecessary symbols
      git cherry-pick 0144cea21b339fd7fed7d3a72fde1886234fdded  # network: hide unnecessary symbols
      git cherry-pick 64bcba9fd71f99aab67efe6f9ea6ac9ac1ae1d1e  # parse: hide unnecessary symbols
      git cherry-pick 56155ad0f8a3f82973bde56dd0d948419b321379  # process_utils: hide unnecessary symbols
      git cherry-pick 95b83e4794245c08701cf2dfcc6d1bd14c91c345  # rexec: hide unnecessary symbols
      git cherry-pick 3819280b96bf2eb136f6dd9760cf21b2da7793db  # ringbuf: hide unnecessary symbols
      git cherry-pick 2e17f1e8550a26e2274aace7adc314b842b2a8d4  # start: hide unnecessary symbols
      git cherry-pick c864bf0463f39d72b999af8c49502f150e48b0a5  # state: hide unnecessary symbols
      git cherry-pick 0e35ab8824fe7ef8b46ad3af9cfa170696ceeea2  # sync: hide unnecessary symbols
      git cherry-pick 3d565ecc2eb7fe521d533d32cf08c264cef09e44  # terminal: hide unnecessary symbols
      git cherry-pick 6b7386e51c920e6dab1fa2f48f28c091fa066ff9  # utils: hide unnecessary symbols
      git cherry-pick 297b04e2823a76fa1b8d3cb660e3ed5297bbf943  # uuid: hide unnecessary symbols
      git cherry-pick 528c2bd8d04d17657e97a8398258b3f743f06a72  # cgroups: hide unnecessary symbols
      git cherry-pick 4f704b76c3a1769d1b4cabf804b0fd6db35755da  # lsm: hide unnecessary symbols
      git cherry-pick 169fec00e696d8f239bcb9bd9657e96421d0eef2  # arguments: hide unnecessary symbols
      git cherry-pick 04c5582a5943220e0acb359f2ecb2bc8e1c464a6  # storage: hide unnecessary symbols
      git cherry-pick f15b126e048dcf198d464174d4dfc7fac5e2b3d1  # tree-wide: hide further unnecessary symbols
      git cherry-pick 5e9c49533529a580b3651dfbbf1339bff5ae4425  # start: simplify gotos
      git cherry-pick 551301fff6ca4a93d1165e6333dd9c91881cc343  # apparmor: Allow ro remount of boot_id
      git cherry-pick befb6f0d1d049dbe960175179c7bb49166967f4a  # syscalls: add fsopen()
      git cherry-pick 30850a5d481cd69d1731af7421c1068c6bca8e5c  # syscalls: add fspick()
      git cherry-pick 2b12bdbf3063f9bb917c9ba764b77683670520dc  # syscalls: add fsconfig()
      git cherry-pick 747ea18991ebfb6e6f366d3381863970919342d1  # syscalls: add fsmount()
      git cherry-pick 827eb586da95f052493c5fa20d040d9bcd84ab2d  # mount_utils: add mount utils
      git cherry-pick 20d81c40215e60b948b09189108c72683f0b8a87  # mount_utils: add mount_filesystem() helper
      git cherry-pick 2e24c98bb56d5d457c5e5a6d9b3c572d138da6c5  # attach: use new mount api
      git cherry-pick aafef73a0f499cb8806206e7c46c1a879daead4f  # log: don't break logging by hiding symbols
      git cherry-pick 42463040f676e7d7dc8c6e28641b946cbc56cf83  # Makefile: fix Makefile
      git cherry-pick 15d82dfe4f7900be54e06b6ca0a79321ee2a9b34  # selinux: remove security_context_t usage as it's deprecated
      git cherry-pick 72ab7aad78600aed7f111fd9ff1732b9b80ee434  # seccomp: remove seccomp fd from event loop after task exited
      git cherry-pick 46e2e322e5230ae1f3675c04d1246d3c3f2bb1ce  # seccomp: add missing header
      git cherry-pick 8bf37e96e687efdeaced817463af377fc34676ba  # syscall: don't fail if __NR_signalfd is not defined

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-4.0.5
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.14
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-4.4
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nogetgo
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxc-to-lxd
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick d4dac5d5a0314fb9c29db90548acb9479bff0f4d  # lxc/move: Allow --target with cluster destination
      git cherry-pick 60307841faaeeeadadea828b3790a8b25d77ca08  # i18n: Update translation templates
      git cherry-pick f93c3b48d5a9f60d89e2863a4e776741c9bad44d  # lxd/networks: Validate network config before starting networks on startup
      git cherry-pick bee6a7abf5fd20f7073012736a319d8dfbfcbfdc  # lxd/network/driver/common: Call init() in update() to consistency apply new internal state
      git cherry-pick aa1095c56ad3dab0dec2ddfb1417a13ee210e1ce  # lxd/device/device/utils/network: Removes networkDHCPValidIP
      git cherry-pick 4b22de6bd2ce9aef5e3b803ff45a0b4812a74cc0  # lxd/dnsmasq/dhcpalloc: Adds static DHCP allocation package for dnsmasq
      git cherry-pick 7eda2360ac4370f959af6edcafbb4b73172f72d1  # lxd/dnsmasq: Renames DHCPStaticIPs to DHCPStaticAllocation
      git cherry-pick 9de084c9f95eae3c8502acfa7fd7a1a9ca79c93b  # lxd/dnsmasq: Renames DHCPAllocatedIPs to DHCPAllAllocations
      git cherry-pick 57b2e75643d97828f9c04e47667b76c2b4c6013c  # lxd/network/network/utils: Removes GetIP
      git cherry-pick b6e2fcc2187ca14d8178a33da7d5c54778c86635  # lxd/network/network/utils: dhcpalloc.GetIP usage
      git cherry-pick 38ff10301fb48a857ad18680501646e3c2d0c50d  # lxd/network/network/utils: dnsmasq.DHCPStaticAllocation usage
      git cherry-pick 51e6ae0e6699f25c1072cda611ed5f124142648e  # lxd/network/network/interface: Changes of functions to accomodate dhcpalloc package
      git cherry-pick 17f2efe9e90c96bbd15408f64177f7cf937cd488  # lxd/network/driver/common: Implements default no-op function for non-dhcp enabled networks
      git cherry-pick 719fa628a9405677ea05c30a5d28cbff49cd13c2  # lxd/network/driver/common: dhcpalloc.DHCPRange usage
      git cherry-pick 9e1ebdd7f31a9b6c987fd00997b13067e400bdef  # lxd/network/driver/bridge: dhcpalloc package function usage
      git cherry-pick 16f7eb6fd10a0a8ba46ae69b6e3e0a84c6214dfb  # lxd/network/driver/bridge: DHCPv4Subnet and DHCPv6Subnet implementations
      git cherry-pick 97a5f954ffa35fc26a2a51bb8cb315399df5f67f  # lxd/device/nic/bridged: Comment correction
      git cherry-pick a278c2b9c1419830a36d78b962ad5ca22783fd64  # lxd/device/nic/bridged: n.DHCPv4Subnet and n.DHCPv6Subnet usage
      git cherry-pick b3dc129a07ccd2656030d66d851160600b1ddbd0  # lxd/device/nic/bridged: dnsmasq.DHCPStaticAllocation usage
      git cherry-pick 28aa611ab6ebbb4168930630aaad9b8c29a58941  # lxd/device/nic/bridged: dhcpalloc.DHCPValidIP usage
      git cherry-pick 0349e1d7fd615502e533bb14bdab8b851f656946  # lxd/device/nic/bridged: Switches static DHCP allocation for IP filtering to dnsmasq/dhcpalloc
      git cherry-pick a29c38430ad6e20eec5138730d8ff76f90bce5f3  # lxd/main_activateifneeded: Clarify 'No DB' debug statements
      git cherry-pick a83d9c97fb9fbb6045a4bc48773968bb0f6628fa  # lxd/cluster: Fix failure domain updates
      git cherry-pick 9644ba8a40e02cec1adb2cacea67be10922e9797  # tests: Fix failure domain test
      git cherry-pick b5dd17a1f4c4763e32cd8b9a7043438dff0c163c  # doc: s/container/instance/g
      git cherry-pick ca0ca07f7faa65619df477d87a7aedf2272b2aea  # doc/backup: Add note about the snap mntns
      git cherry-pick e88d0ea6392fb059a31faedc47c0d3fd77b5deaa  # lxd/apparmor: Don't fail on missing apparmor
      git cherry-pick a573f047f39f03f45a8a1af62716cf69e3e18c35  # shared/validate: Makes IsUint32 non-optional
      git cherry-pick faa11bdadb31ce900e453a2a6fb55230584ac88f  # lxd: Wraps validate.IsUint32 in validate.Optional
      git cherry-pick 5b1320ad82804759b223c20ab45a31dbe4ba9c86  # shared/instance: Wraps validate.IsUint32 in validate.Optional
      git cherry-pick f6bbb88c5ce216d22dba32e01996be10169b0171  # shared/validate: Makes IsUint8 non-optional
      git cherry-pick a96a34a715b27c69df173ac2d3738c81d75dbea5  # lxd/network/driver/bridge: Wraps validate.IsUint8 in validate.Optional
      git cherry-pick 0a2316a0b4d3d8530504f87d3714278efa96e28f  # shared/validate: Makes IsPriority non-optional
      git cherry-pick de8ae02f9189b234816aa98d6e08d33f07853f14  # shared/instance: Wraps validate.IsPriority in validate.Optional
      git cherry-pick 52ce0d90f816f0bee4b99ed993b9dc4e1772b60c  # shared/validate: Makes IsBool non-optional
      git cherry-pick c7b46cd66149b0cb4d8e6091fff8bcb3b33eea7b  # lxd: Wraps validate.IsBool in validate.Optional
      git cherry-pick 9c934239621ef9fc921a45e38768533fc03b573e  # shared/instance: Wraps validate.IsBool in validate.Optional
      git cherry-pick 377e61db55761f763a3589883cb7ac4fb51596f1  # shared/validate: Makes IsSize non-optional
      git cherry-pick ab374f269c961531ca6a722b4374b4a07de6301d  # lxd: Wraps validate.IsSize in validate.Optional
      git cherry-pick d1adf48d8ff7760048bcfdf933c8d0b59cb7d0af  # shared/instance: Wraps validate.IsSize in validate.Optional
      git cherry-pick 8176f505dec5950f196d3024615c1d30ba4792bf  # shared/validate: Makes IsNetworkAddress non-optional
      git cherry-pick 4b9bc47c7c5f4a2a7ebed30a58ed20260118507a  # lxd: Wraps validate.IsNetworkAddress in validate.Optional
      git cherry-pick ad0ab8ef7566506bcda34a44faccb5705997eaa2  # shared/validate: Makes IsNetworkV4 non-optional
      git cherry-pick 3e56783e8b79e7d1e899b5abb04dd8e066976476  # lxd/network/driver/bridge: Wraps validate.IsNetworkV4 in shared.Optional
      git cherry-pick d0c933c0c2d44f1e554b227a46da3a1921c57168  # shared/validate: Makes IsNetworkAddressV4 non-optional
      git cherry-pick 081b4978f0ecd07bcec3dacad6a6560aadbee502  # lxd/device/nic: Wraps validate.IsNetworkAddressV4 in validate.Optional
      git cherry-pick 80a844dcc933e2158d6aa2811b318fde0a8c142b  # lxd/device/nic/ipvlan: Wraps validate.IsNetworkAddressV4 in validate.Optional
      git cherry-pick b0627a1ed6fb4e903d56a327cfe6863990f1a293  # lxd/device/nic/ipvlan: Fixes incorrect IPv4 address check in IPv6 context
      git cherry-pick c2222650f985d46f91301f52b380357d28c9df18  # lxd/network/driver/bridge: Wraps validate.IsNetworkAddressV4 in validate.Optional
      git cherry-pick 89d24cc7cfadd0d13b0bbc714456eb293b62ccf0  # shared/validate: Makes IsNetworkAddressCIDRV4 non-optional
      git cherry-pick 9d7cbcfb1bae3ce034c137a9f9874944d1eb4b52  # lxd: Wraps validate.IsNetworkAddressCIDRV4 in validate.Optional
      git cherry-pick e42294f120d937cc5c8561f522cb64c1309976d9  # shared/validate: Makes IsDeviceID non-optional
      git cherry-pick d4db2fcf21b10c70b481ecbb2bbe7a3ee6fde88a  # lxd/device: Wraps validate.IsDeviceID in validate.Optional
      git cherry-pick bfcc6f46c80de99ff5f1cc3234d8075231a80ad8  # shared/validate: Makes IsNetworkV6 non-optional
      git cherry-pick d4b7ba6670e405332e180cba9e173c6fd16b34ba  # shared/validate: Makes IsNetworkAddressCIDRV6 non-optional
      git cherry-pick 700814bca20f130120c0d38df7e0e989146b6a7b  # lxd: Wraps validate.IsNetworkAddressCIDRV6 in validate.Optional
      git cherry-pick 21105454d80ea8e3ddf39c3a685e95ff945ed474  # shared/validate: Makes IsNetworkAddressV6 non-optional
      git cherry-pick 71598156852bc60ea0a5b83466af1b84bf2112ed  # lxd: Wraps validate.IsNetworkAddressV6 in validate.Optional
      git cherry-pick 6b04417d5ee3dcc45e685f3a6723a5cecb3bec44  # lxd/device/nic/ipvlan: validate.IsNetworkAddressVX tweaks
      git cherry-pick 017d47ba0f00ed2bf3d69bdd4d385620547d27fb  # lxd/device/nic/routed: Wraps validate.IsNetworkAddressV4List in validate.Optional
      git cherry-pick e7bd928659883102ef3737cd46f3e6420a2ecc5f  # lxd: Wraps validate.IsNetworkV4List and validate.IsNetworkV6List in validate.Optional
      git cherry-pick 26d5de4e76875cd3ed79f75ee5cb32135683d384  # shared/validate: Tweaks IsNetworkVLAN error message ordering
      git cherry-pick e5b5e98ff36bc8807e6009c22420794cc12a972d  # shared/validate: comment spacing
      git cherry-pick f6b0234c2b2c91538c7a5bd03039561411bc61b3  # daemon: check whether shiftfs is useable
      git cherry-pick e7a9a0c7c1b1ca3d50926ff1b41b1330d10669a3  # lxd/network/network/utils: Renames ValidNetworkName to validInterfaceName
      git cherry-pick 03b627dac9e19680182736d24e2f73cddaa3debc  # lxd/network/network/utils: Adds validVirtualNetworkName
      git cherry-pick bcd32986275e3a0f4d442754c5da077488106a66  # lxd/network/network/interfaces: Adds ValidateName
      git cherry-pick a901bf418a999a8243633d597d0d8982faad5bf6  # lxd/network/driver/bridge: Implements ValidateName
      git cherry-pick 2cadfdc8f910461bb3a4f04a3c4a0ffff57a3c3d  # lxd/network/driver/macvlan: Implements ValidateName
      git cherry-pick 0ca49ed49ffde73fc192d99266f0ef6a4b7b5bfb  # lxd/network/driver/sriov: Implements ValidateName
      git cherry-pick d0122c8c61ea9cd8443d34bcc48b8d8ebed839bc  # lxd/network/network/load: Adds ValidateName helper function
      git cherry-pick 4abd2013b40e9bd56084784ab48756145a418ef6  # lxd/main/init/interactive: Switches to network.ValidateName for bridge validation
      git cherry-pick 6479adf8651d1dbd1047fef1317d8a2a4c84a9f6  # lxd/networks: Switches to network.ValidateName
      git cherry-pick 0aaa8307e8ab2e223fbfa345a7943065b6d85545  # lxd/storage/utils: Simplifies error message from ValidName

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/canonical/go-dqlite/internal/bindings/server.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Build the agent (special build tags)
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libco
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xtables
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
