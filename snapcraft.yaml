name: lxd
base: core18
assumes:
  - snapd2.39
version: "4.8"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.


 Supported configuration options (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that can interact with LXD [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - lib/*/libpython2.7.so*
      - -lib/python2.7/sitecustomize.py
      - lib/*/ceph
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libcephfs*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/libibverbs.so*
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so
      - lib/*/libsnappy*

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.15
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  dqlite:
    after:
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: edk2-stable202008
    source-depth: 1
    plugin: nil
    build-packages:
      - acpica-tools
      - nasm
      - uuid-dev
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0003-boot-delay.patch"

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM2_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libmnl:
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.1.8
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.1
    source-depth: 1
    plugin: autotools
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  libtpms:
    source: https://github.com/stefanberger/libtpms
    source-type: git
    source-tag: v0.7.4
    source-depth: 1
    plugin: autotools
    configflags:
      - --with-tpm2
      - --with-openssl
    organize:
      usr/lib/: lib/
    prime:
      - lib/libtpms*so*

  libusb:
    source: https://github.com/libusb/libusb
    source-type: git
    source-tag: v1.0.23
    source-depth: 1
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libusb*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
      - libpopt0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate
      - lib/*/libpopt*so*

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v0.9.7
    plugin: autotools
    configflags:
      - --with-json
    build-packages:
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.3.0
    source-depth: 1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: https://github.com/openvswitch/ovs
    source-type: git
    source-tag: v2.14.0
    source-depth: 1
    plugin: autotools
    stage-packages:
      - uuid-runtime
    organize:
      sbin/: bin/
      usr/bin/: bin/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  ovn:
    after:
      - openvswitch
    source: https://github.com/ovn-org/ovn
    source-type: git
    source-tag: v20.09.0
    source-depth: 1
    configflags:
      - --with-ovs-source=../../openvswitch/build/
    plugin: autotools
    prime:
      - bin/ovn-nbctl

  spice-protocol:
    source: https://gitlab.freedesktop.org/spice/spice-protocol
    source-type: git
    source-tag: v0.14.3
    source-depth: 1
    plugin: meson
    prime: []

  spice-server:
    after:
      - spice-protocol
    source: https://gitlab.freedesktop.org/spice/spice
    source-type: git
    source-tag: v0.14.3
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  swtpm:
    after:
      - libseccomp
      - libtpms
    source: https://github.com/stefanberger/swtpm
    source-type: git
    source-tag: v0.5.0
    source-depth: 1
    plugin: autotools
    build-packages:
      - expect
      - gawk
      - iproute2
      - python3-cryptography
      - python3-setuptools
      - socat
    configflags:
      - --with-seccomp
      - --with-openssl
      - --without-cuse
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      lib/swtpm/: lib/
    prime:
      - bin/swtpm
      - lib/libswtpm*so*

  qemu:
    after:
      - libseccomp
      - libusb
      - spice-protocol
      - spice-server
    source: IRRELEVANT
    source-type: git
    plugin: autotools
    configflags:
      - --disable-bochs
      - --disable-cloop
      - --disable-dmg
      - --disable-docs
      - --disable-guest-agent
      - --disable-parallels
      - --disable-qed
      - --disable-sheepdog
      - --disable-slirp
      - --disable-user
      - --disable-vdi
      - --disable-vnc
      - --disable-xen
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-libusb
      - --enable-usb-redir
      - --enable-linux-aio
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tcg
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --firmwarepath=/snap/lxd/current/share/qemu/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
      - libusbredirhost-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
      - libusbredirhost1
      - libusbredirparser1
    override-pull: |-
      set -ex
      git clone https://github.com/qemu/qemu . -b v5.1.0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 202d69a715a4b1824dcd7ec1683d027ed2bae6d3  # usb-host: workaround libusb bug
      git cherry-pick 4969e697c15ac536d5c0700381d5d026ef7f0588  # usb-host: restrict workaround to new libusb versions
      git cherry-pick ebf101955ce8f8d72fba103b5151115a4335de2c  # virtiofsd: avoid /proc/self/fd tempdir
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure
      sed -i "s#https://git.qemu.org/git#https://github.com/qemu#g" .gitmodules

      set +ex
      snapcraftctl build
    organize:
      libexec/: bin/
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - bin/virtiofsd*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - lib/*/libusbredir*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    source-depth: 1
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*

  sqlite:
    source: https://github.com/sqlite/sqlite
    source-type: git
    source-depth: 1
    source-tag: version-3.33.0
    plugin: autotools
    build-packages:
      - tcl
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.0.3
    source-depth: 1
    plugin: autotools
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ebtables
      - iptables
      - xtables-addons-common
    organize:
      usr/lib/*/xtables/*: lib/xtables/
      lib/ebtables/*: lib/
      sbin/: bin/
    prime:
      - bin/ebtables
      - etc/ethertypes
      - etc/protocols
      - lib/libebt*
      - lib/xtables/*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/lzma
      - bin/xz
      - lib/*/liblzma*so*
    override-build: |
      snapcraftctl build

      # Include the lzma symlink
      ln -s xz "${SNAPCRAFT_PART_INSTALL}/usr/bin/lzma"

  zfs-0-6:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    source-depth: 1
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.5
    source-depth: 1
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.5
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-api-docs
      - --disable-bash
      - --disable-doc
      - --disable-examples
      - --disable-memfd-rexec
      - --disable-tests
      - --disable-tools
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-4.0.6
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 8a0e1fd9d0c8866af5947ab2acee0c28e8827573  # meminfo: show host swap values when no limit or equal limits are set
      git cherry-pick 22ba5818484aa5ffaa26967d5d2ab228b2789205  # README: clarify SWAP
      git cherry-pick 5fb18e7b8ab9ee0b1af375aa13135cf0dfe30874  # cgroups: Add get_memory_swappiness
      git cherry-pick 205df44462530825ded3ffe3e2d6d68cb716287d  # swap: Fix usage reporting
      git cherry-pick 4538af183c2f48563681f303c54cef0430741b83  # swap: Only report usage when swappiness is 0
      git cherry-pick 1e92c18e409f37f79a24f61623b9d9c4d84e3280  # swap: Tweak meminfo logic
      git cherry-pick a46b7b6978867101e79db1e1a51d30f2a02176ec  # swap: Make /proc/swaps match /proc/meminfo
      git cherry-pick 1d3a4a0dd7411d34f10e47c1d850213a63a3581e  # swap: Remove now unused variable

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-4.8
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nogetgo
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxc-to-lxd
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 4288422d191c7b47e268464f383903c7f4c953e5  # lxd/api/project: Reject quotes in project names
      git cherry-pick d9d2a053653613b8ad593fbcbacd93dbecb3ec19  # lxd/instance/drivers/driver/lxc: Updates initLXC to use project and instance name in callhook hook commands
      git cherry-pick 25bf93b31a892f662de892f6c4b4c0ef86e8f468  # lxd/instance/drivers/driver/lxc: Updates startCommon to quote hook command arguments
      git cherry-pick 63351b856b3ddefc4b7bb12631731b19cfb0c2f5  # lxd/main/callhook: Updates cmdCallhook to support using project name and instance name in arguments
      git cherry-pick 67b7c35ac82086b304945f3b3c663d5b953e4067  # lxd/api/internal: Adds support for using instance name and project name in container hook routes
      git cherry-pick 62ddd106c7c439f1da44846a175363e91ee10cd7  # lxd/storage: Apply rename template
      git cherry-pick 62a6d400960cb1df43867fc75141f1e70c607e60  # lxd/patches: Adds patchVMRenameUUIDKey patch to rename config key from volatile.vm.uuid to volatile.uuid
      git cherry-pick 77f2287655c65e823ee0c6dca4b5b7fc758aaa4f  # shared/validate: Adds IsUUID function
      git cherry-pick 85e644a03d158bad5dc5d2edab3a4ae389ef830d  # shared/instance: Adds volatile.uuid key to instance validation
      git cherry-pick fed8ee82b70c26d60d502be2d0337110fbcf9253  # shared/instance: Removes vm.uuid from instance validation in ConfigKeyChecker
      git cherry-pick ff8cfdbe6f61d109c528929a3386cf78c02cb530  # doc/instances: Replaces volatile.vm.uuid with volatile.uuid
      git cherry-pick 5dae4e615f90811decc2666e178370ac737842e7  # lxd/instance/drivers/driver/qemu: Updates Start to use and populate volatile.uuid instead of volatile.vm.uuid
      git cherry-pick f3993756c0f11452dee5ff084d14d28e325877ce  # lxd/instance/drivers/driver/lxc: Generate instance UUID if not set in startCommon
      git cherry-pick 05efc37a696c99392c47b9325d0fa81c6f98ce96  # lxd/instance/drivers/driver/qemu: Makes UUID generation terminology consistent with container
      git cherry-pick 7f3741d8c6d6dcf5a9536e7845824799d4b65a6f  # lxc/list: Fix typo in help
      git cherry-pick 0ba9d6475fe5961906f6ff0ac16085a1a6fba037  # doc: fix typos in instances.md
      git cherry-pick 1efa5d803b8c8865ee2962322ac26b68694cad9a  # lxd/storage/backend/lxd: Detect unsupported live copy of VMs and fail with clear message
      git cherry-pick 8358159f533e3a83b0c72ce3e18757370df281d3  # lxd/instance/lxc: Add extra check for devpts_fd

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/canonical/go-dqlite/internal/bindings/server.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Build the agent (special build tags)
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      cp scripts/bash/lxd-client ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - ovn
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xtables
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
