name: lxd
base: core20
assumes:
  - snapd2.39
version: "5.3"
grade: stable
summary: LXD - container and VM manager
description: |-
 LXD is a system container and virtual machine manager.

 It offers a simple CLI and REST API to manage local or remote instances,
 uses an image based workflow and support for a variety of advanced features.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions. Existing
 integrations with many deployment and operation tools, makes it work
 just like a public cloud, except everything is under your control.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines when running Linux on Linux.

 LXD virtual machines are modern and secure, using UEFI and secure-boot
 by default and a great choice when a different kernel or operating
 system is needed.

 With clustering, up to 50 LXD servers can be easily joined and managed
 together with the same tools and APIs and without needing any external
 dependencies.


 Supported configuration options for the snap (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that have full control over LXD [default=lxd]
   - daemon.user.group: Set group of users that have restricted LXD access [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - daemon.verbose: Increase logging to verbose level [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - openvswitch.external: Use the system's OVS tools (ignores openvswitch.builtin) [default=false]
   - ovn.builtin: Use snap-specific OVN configuration [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

 For system-wide configuration of the CLI, place your configuration in
 /var/snap/lxd/common/global-conf/ (config.yml and servercerts)

contact: lxc-devel@lists.linuxcontainers.org
issues: https://github.com/lxc/lxd/issues
source-code: https://github.com/lxc/lxd
website: https://linuxcontainers.org/lxd
confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots:
      - lxd
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  user-daemon:
    command: commands/lxd-user
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd-user/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - lxd-support
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Workarounds
  pull-meson-early:
    source: snapcraft/empty
    override-build: |
      # No-op
      true
    override-stage: |
      # No-op
      true
    plugin: nil
    override-pull: |
      # Fetch meson early to cause all downloads at the beginning of the build.
      python3 -m pip install -U meson

  # Dependencies
  btrfs:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-progs
    organize:
      sbin/: bin/
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/rbd
      - lib/*/ceph
      - lib/*/libatomic.so*
      - lib/*/libboost_iostreams.so*
      - lib/*/libboost_program_options.so*
      - lib/*/libboost_thread.so*
      - lib/*/libcephfs*
      - lib/*/libibverbs.so*
      - lib/*/librados.so*
      - lib/*/librbd.so*
      - lib/*/librdmacm.so*
      - lib/*/libsnappy.so*
      - lib/python3

  criu:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.17.1
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  dqlite:
    build-attributes: [core22-step-dependencies]
    after:
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: nil
    build-packages:
      - on amd64:
        - acpica-tools
        - nasm
        - uuid-dev
      - on arm64:
        - acpica-tools
        - nasm
        - uuid-dev
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0
      set -ex
      git clone https://github.com/tianocore/edk2 . -b edk2-stable202205

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Fix submodules
      sed -i "s#https://git.cryptomilk.org/projects/cmocka#https://gitlab.com/cmocka/cmocka#g" .gitmodules
      git submodule update --init --recursive

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0003-boot-delay.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0004-gcc-errors.patch"

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM_ENABLE=TRUE \
            -DTPM_CONFIG_ENABLE=TRUE \
            -DTPM2_ENABLE=TRUE \
            -DTPM2_CONFIG_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libmnl:
    build-attributes: [core22-step-dependencies]
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.5
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    build-attributes: [core22-step-dependencies]
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.2.2
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*
    override-build: |
      snapcraftctl build

      sed -i "s# /lib/libmnl.la# ${SNAPCRAFT_STAGE}/lib/libmnl.la#g" "${SNAPCRAFT_PART_INSTALL}/lib/libnftnl.la"

  libseccomp:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.4
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  libtpms:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/stefanberger/libtpms
    source-type: git
    source-tag: v0.9.5
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-tpm2
      - --with-openssl
    organize:
      usr/lib/: lib/
    prime:
      - lib/libtpms*so*

  liburing:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/axboe/liburing
    source-type: git
    source-tag: liburing-2.2
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0
      snapcraftctl build
    organize:
      usr/lib/: lib/
    prime:
      - lib/liburing*so*

  libusb:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/libusb/libusb
    source-type: git
    source-tag: v1.0.26
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libusb*so*

  logrotate:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate

  lvm:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    build-attributes: [core22-step-dependencies]
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v1.0.4
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-json
    build-packages:
      - libedit-dev
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.10.0
    source-depth: 1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container*.so*

  openvswitch:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openvswitch/ovs
    source-type: git
    source-tag: v2.17.2
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
    stage-packages:
      - uuid-runtime
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/bin/: bin/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  ovn:
    build-attributes: [core22-step-dependencies]
    after:
      - openvswitch
    source: https://github.com/ovn-org/ovn
    source-type: git
    source-tag: v22.06.0
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
      - --with-ovs-source=../../openvswitch/build/
    prime:
      - bin/ovn-nbctl
      - bin/ovn-sbctl

  spice-protocol:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/freedesktop/spice-protocol
    source-type: git
    source-tag: v0.14.4
    source-depth: 1
    plugin: meson
    prime: []

  spice-server:
    build-attributes: [core22-step-dependencies]
    after:
      - spice-protocol
    source: https://github.com/freedesktop/spice
    source-type: git
    source-tag: v0.15.0
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  swtpm:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
      - libtpms
    source: https://github.com/stefanberger/swtpm
    source-type: git
    source-tag: v0.7.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-seccomp
      - --with-openssl
      - --without-cuse
    build-packages:
      - expect
      - gawk
      - iproute2
      - libjson-glib-dev
      - python3-cryptography
      - python3-setuptools
      - socat
    stage-packages:
      - libjson-glib-1.0-0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      lib/swtpm/: lib/
    prime:
      - bin/swtpm
      - lib/libswtpm*so*
      - lib/*/libjson-glib-1.0.so*

  qemu:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
      - liburing
      - libusb
      - spice-protocol
      - spice-server
    source: IRRELEVANT
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --disable-bochs
      - --disable-cloop
      - --disable-dmg
      - --disable-docs
      - --disable-guest-agent
      - --disable-parallels
      - --disable-qed
      - --disable-slirp
      - --disable-user
      - --disable-vdi
      - --disable-vnc
      - --disable-xen
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-libusb
      - --enable-usb-redir
      - --enable-linux-aio
      - --enable-linux-io-uring
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tcg
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --firmwarepath=/snap/lxd/current/share/qemu/
      - --localstatedir=/var/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
      - libusbredirhost-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
      - libusbredirhost1
      - libusbredirparser1
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0
      set -ex
      git clone https://gitlab.com/qemu/qemu . -b v7.0.0
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/local/bin/: bin/
      usr/local/lib/: lib/
      usr/local/libexec/: bin/
      usr/local/share/: share/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - bin/virtiofsd*
      - lib/*/libatomic.so*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - lib/*/libusbredir*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    build-attributes: [core22-step-dependencies]
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      export ARCH="$(basename $(readlink -f ${SNAPCRAFT_STAGE}/lib/*-linux-gnu*/))"
      export LD_LIBRARY_PATH="${SNAPCRAFT_STAGE}/lib:${SNAPCRAFT_STAGE}/lib/${ARCH}"

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/canonical/raft
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
      - liblz4-1
    build-packages:
      - libuv1-dev
      - liblz4-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*
      - lib/*/libuv.so*

  sqlite:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/sqlite/sqlite
    source-type: git
    source-depth: 1
    source-tag: version-3.39.0
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - tcl
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.1.4
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-common
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - arptables
      - ebtables
    organize:
      usr/lib/ebtables/: lib/
      usr/sbin/: bin/
    prime:
      - bin/arptables-legacy
      - bin/ebtables-legacy
      - etc/ethertypes
      - etc/protocols
      - lib/libebtc.so.*

  xz:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/lzma
      - bin/xz
      - lib/*/liblzma*so*
    override-build: |
      snapcraftctl build

      # Include the lzma symlink
      ln -s xz "${SNAPCRAFT_PART_INSTALL}/usr/bin/lzma"

  zfs-0-6:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.6
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-0:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.0.7
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-1:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.1.5
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"


  zstd:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - zstd
    organize:
      usr/bin/: bin/
    prime:
      - bin/pzstd
      - bin/zstd

  # Core components
  lxc:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-5.0.0
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dexamples=false
      - -Dman=false
      - -Dtools=false
      - -Dtests=false
      - -Dmemfd-rexec=false
      - -Dapparmor=true
      - -Dseccomp=true
      - -Dselinux=true
      - -Dcapabilities=true
      - -Drootfs-mount-path=/var/snap/lxd/common/lxc/
      - -Dlibexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/*/liblxc.so.1
      - lib/*/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 289d6413ebac8b34394a9f5dbffdb6a70e7f145f  # meson: Generate compile commands by iterating over an array
      git cherry-pick c55353f84a8c171d0ccb911e1d34a5ed5577def1  # use systemd dbus StartTransientUnit for unpriv cgroup2
      git cherry-pick 26de6cbc8d8c765877c8e55cf2d84b0ceec5fad1  # fix for issue 4026: set broadcast to 0.0.0.0 for /31 and /32
      git cherry-pick fc133a9f37a62f4f35d66ee309d28d4953920b4a  # conf: log file descriptors on error during idmapped mount setup
      git cherry-pick 7317d2a8a7d81a6208c64446b47f09748d406ecc  # start: don't overwrite file descriptors during namespace preservation
      git cherry-pick 6c50e09f2cd59d60aa3d60d87c8e6442ad062c48  # start: record inherited namespaces earlier to make it available for idmapped rootfs setup
      git cherry-pick eae44ce1993160508dc7155318f6cc9c18bfaf3f  # conf: fix append_ttyname()
      git cherry-pick 07a00b78f0142ee2098a30b792c80eb578765d39  # start: fix namespace sharing
      git cherry-pick 8ee615c27d4e646b13a767ffc59823262b38427d  # add check for statvfs

      cd ../build

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-5.0.0
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
      - python3-jinja2
    stage-packages:
      - fuse
    plugin: meson
    meson-parameters:
      - --prefix=/
      - --datadir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
      - -Ddocs=false
      - -Dtests=false
    organize:
      lib/*/lxcfs/liblxcfs.so: lib/
      snap/lxd/current/lxc/config/common.conf.d/*: lxc/config/common.conf.d/
      snap/lxd/current/lxcfs/: lxcfs/
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc/config/common.conf.d/00-lxcfs.conf
      - lxcfs/
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 42c155d1df92d8bbabdb1de3433048584bb05d47  # lxcfs_fuse: ensure lxcfs_fuse_compat.h is included after including fuse header
      git cherry-pick e297458cb0d2a5c7f91ddacc771d4cf9efe301f8  # tree-wide: remove struct stat argument from DIR_FILLER and make it static inline
      git cherry-pick d58528f752aaa532eb3871899a27d66996a2a798  # tree-wide: ensure that file information is set even with legacy fuse
      git cherry-pick 02beb5d4e1b82e3416988af2341142518c804bd3  # tests: add test for issue #522
      git cherry-pick 112f0b9ca720b8f0da4d4a39153c16f55e3294e1  # meson: Include documentation
      git cherry-pick 1ef15e0d1f345ebb851f1bab8835cace5279e392  # workflows: disable documentation generation
      git cherry-pick 9d6cded612483cfb31919f306d1975ce801d8e25  # sysfs: Don't incorrectly filter entries
      git cherry-pick dcc13128a03b8af4e975e65b32afc841074bedb8  # tests: Fix sysfs test
      git cherry-pick 5daf75dbed117c75198e104f852fd170cac766de  # utils: add and use opathdir()
      git cherry-pick 2e3a6f5d8240695bd13a7a6da75de895b9407492  # sysfs_fuse: fix indendation
      git cherry-pick 2e13f0be3ad903adf870e7a3032c3356c0c9e4eb  # sysfs_fuse: generate file info for cpu<nr> entries as well
      git cherry-pick 75395f89cf6de91695562a0a47e36acbba879c1e  # meson: bump fuse version
      git cherry-pick 35bf60d4eed08e703180c1f6ec505c7c91442915  # github: add fuse3 tests
      git cherry-pick 006db260b1202761a6661085f7af2fd3cd7083f3  # meson: handle fuse versions with buggy dt_type handling
      git cherry-pick b997ce418919137df7a4552b2b8e0d8207edbaa5  # init/meson: Use libdir instead of hardcoded /lib path
      git cherry-pick a08da8d7e63a023679603a93c18b6bfc443f9471  # Query systemd system unit dir.

      set +ex
      snapcraftctl build
      set -ex

      patch -p1 $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook < "${SNAPCRAFT_PROJECT_DIR}/patches/lxcfs-0001-hook.patch"

  lxd:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-5.3
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    build-snaps:
      - go
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nil
    override-pull: |
      snapcraftctl pull
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Setup the GOPATH
      rm -Rf "${GOPATH}"
      mkdir -p "${GOPATH}/src/github.com/lxc"
      ln -s "$(pwd)" "${GOPATH}/src/github.com/lxc/lxd"

      # Download the dependencies
      go get -d -v ./...
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick c88d99ac40a7b5d1354e412c71e17a9e458bccbb  # doc: storage: clarify moving of storage volumes
      git cherry-pick daa9d2e54dae7417f251721f4b11d3ef6f8ac7de  # doc: fix version switcher to work for latest
      git cherry-pick 668eef85f6c72f221aa70170663134d081a45a4e  # lxd/network/openvswitch: Use %s so that delimiting quotes are not escaped.
      git cherry-pick a12dd42338eb902864e9a59cc86ee2d0ffe2a309  # shared/subprocess/manager: Improve errors in ImportProcess
      git cherry-pick bc0a92d22296dd12161bef3a74e068d9a6e413cf  # doc: storage: clarify that most docs are about custom volumes
      git cherry-pick 52b19f85e10f2b5f23d06469f7ed904ec0b9f9af  # doc: fix typo
      git cherry-pick 56698411a64eae2fead79e9fcda8fd1156569d94  # gomod: Switch to github for go-lxc
      git cherry-pick e6ba6b5541d5da126bac6968abc72a962b37b2f1  # gomod: Update dependencies
      git cherry-pick ef045d7c82a440929d83f9b66d6fc8e9e91512f2  # lxd: Update to github path for go-lxc
      git cherry-pick d4f0050320acdae31f9257998febff94b7d71c66  # lxc-to-lxd: Update to github path for go-lxc
      git cherry-pick e24abf7ca14b152b53153e1373cfbead57ccf853  # lxd: Use liblxc's RuntimeLiblxcVersionAtLeast
      git cherry-pick cc9fc98e33075efa33050af50f1db7bd9d62c4af  # shared/api: Fix typo in event name
      git cherry-pick cbfb1c63a7bc8bb01d66decf707596ee279fa99d  # shared/api: Add missing events
      git cherry-pick 00e5f2f598fe42f08ff7c5df996ed827c2bcb125  # shared/api: Sort events
      git cherry-pick b7fcd7c321e20220c6846c612d9e637a62120b34  # doc/events: Add missing events
      git cherry-pick 690d45b483d58f127ecd3a375fe468c9322a5197  # doc/events: Sort entries
      git cherry-pick 82b19fba2501db82f1d68f663a6f2918f5c6c775  # lxd/lifecycle: Use event names from api package
      git cherry-pick 10b7695c590829fe4c0ca09dffb9b6f9bb1229d1  # client: End all function comments with a full-stop.
      git cherry-pick fbb4d54ea9ac2199fd2608a89bf9a03497ba3e8f  # client: Fixes imports.
      git cherry-pick ff3f373c570afab7bd68f683698a1157cec6fdfb  # lxc/config: End comments with a full-stop.
      git cherry-pick 98a57d757752a39d494ccf05f34d35adca80943a  # lxc/utils: End comments with a full-stop.
      git cherry-pick bcb7223b32857ed5dd90924d29efeb19e9fb801d  # lxc/utils: Fix import order.
      git cherry-pick 5196a6092cbea5b425a9eb85aecc254bed7fb50d  # lxc: End comments with a full-stop.
      git cherry-pick 005e40259c0c35caaeaaa17cde38a158046b6a31  # lxc: Fixes import order.
      git cherry-pick 5b9ad3c01f17d1f2459eacec351aa43e9ad08b00  # lxc: Removes unnecessary whitespace.
      git cherry-pick c038ab4cccc5fdd8dd45f5399e4808ac9e9cf7b5  # lxc-to-lxd: Ends all comments with a full-stop.
      git cherry-pick c61e5c3497df165a313ce27264903b10c6a689e8  # lxd/apparmor: Ends all comments with a full-stop.
      git cherry-pick ae7c30c4df2629ebe57f9a99abfa55dc876bdea9  # lxd/cgroup: Ends all comments with a full-stop.
      git cherry-pick a6c042a54061171e9677c446bffc964f1d32be52  # lxd/bgp: Fixes import order.
      git cherry-pick f8490ef830f4796bdf3381eb3c0c1f6234ceecaa  # lxd/cluster/config: Ends all comments with a full-stop.
      git cherry-pick 1e4077dae6fcd4328cef2be4cb96cb717172e93f  # lxd/cluster/config: Removes unnecessary whitespace.
      git cherry-pick 624e6091feca1f5ea27a6791af7da783a9cacca9  # lxd/cluster/config: Fixes imports.
      git cherry-pick 4aedca94783af31989ba3aebdd872f6b288bd00e  # lxd/cluster: Ends all comments with a full-stop.
      git cherry-pick 32dbcdce578333079e879a7b9c37c6141e232b1a  # lxd/cluster: Removes unnecessary whitespace.
      git cherry-pick bf92d1b953d03621a682e4c7522075d1b828a3f7  # lxd/cluster: Fixes imports.
      git cherry-pick 2f54e8adfdec43eaf48b0753a8be03be8b05d0d1  # lxd/config: Fixes imports.
      git cherry-pick ff3b4a46dbe17e6dbacd2bb0dabf3e026848ea7c  # lxd/config: Ends all comments with a full-stop.
      git cherry-pick e4634a287e5386c33123c5f99f231ef0c69dc822  # lxd-generate: Ensure generated comments end with a full-stop.
      git cherry-pick def294214a0cb1a5009f402c865832f9ffdef4b7  # lxd/db/cluster: Ends all comments with a full-stop.
      git cherry-pick d0451bf98c0ef36b11b5d866ba879bb949ad8e44  # lxd/db/cluster: Fixes imports.
      git cherry-pick eae950294e60c00a344843acd1835c7157cf7435  # lxd/db/generate/db: Removes unnecessary whitespace.
      git cherry-pick 110cc9ce8f8b0a62f947b818fbf0dcd8e38f5cce  # lxd/db/generate/db: Fixes imports.
      git cherry-pick 1a0c8586ad58c27bc2f3fdb30dbee118079d24d5  # lxd/db/generate/db: Ends all comments with a full-stop.
      git cherry-pick 51cdfa81d415e6794fcb9c24e6c6c9e5dc02c0ee  # lxd/db/generate/lex: Ends all comments with a full-stop.
      git cherry-pick 411bcbe38f57e626aec739f80fbbe531a56e2a29  # lxd/db/generate/lex: Fixes imports.
      git cherry-pick c80e43aa7c0239afaadc29ca8a045a63cfec14a7  # lxd/db/generate: Removes unnecessary whitespace.
      git cherry-pick 83ef91546a2dcbab31c12e4746a9263f72d76b7b  # lxd/db/generate: Fixes imports.
      git cherry-pick 0ce61951226f6c42bb558a3c9fb08fac136544f3  # lxd/db/operationtype: Ends all comments with a full-stop.
      git cherry-pick bd06998a8b2a211d3f3def1b54453e7e5a622704  # lxd/db/query: Fixes imports.
      git cherry-pick 2f746ce6f9e6f53355694781a02edff1bc39853c  # lxd/db/schema: Ends all comments with a full-stop.
      git cherry-pick 3cf5f4f947caa83809dc93ba43e66a119aa7444a  # lxd/db: Removes unnecessary whitespace.
      git cherry-pick 5da8bb09cf5a76b2a8117be49b7aac2138bdcd75  # lxd/db: Fixes imports.
      git cherry-pick 430e5f33e44d211e084126adf4bf99d42e97cc0d  # lxd/db: Ends all comments with a full-stop.
      git cherry-pick 985cff66bd758f991516b5aa270c123797cee894  # lxd/device/nictype: Removes unnecessary whitespace.
      git cherry-pick da2f34a76c1e09fe54ae3bc0b70fc3f8f3ea00cc  # lxd/device: Ends all comments with a full-stop.
      git cherry-pick ed130a774f4765ff22fb1d1da239ed3d2693184f  # lxd/device: Removes unnecessary whitespace.
      git cherry-pick 5df5204829ab6f35c9df54d6c11a1fe3b9268a69  # lxd/device: Fixes imports.
      git cherry-pick 5cb3f2ea7d5d829de998263ec5900057d45edd1c  # lxd/dnsmasq: Removes unnecessary whitespace.
      git cherry-pick 57cdef4893c801efdb6612c4e848eb7824c9fbc4  # lxd/endpoints: Fixes imports.
      git cherry-pick 9d512020865b884e6c015fa1609f543f4e3fc7e8  # lxd/endpoints: Ends all comments with a full-stop.
      git cherry-pick db8460e7355161a1a5b67450b7291354aaa9e941  # lxd/filter: Fixes imports.
      git cherry-pick 3f360058af2b4b9ce6b12d51ab9601bdb5429928  # lxd/filter: Removes unnecessary whitespace.
      git cherry-pick 1a2519aeb3b5532eed11e244e50a575ff4ceb89b  # lxd/firewall/drivers: Ends all comments with a full-stop.
      git cherry-pick 8977e8625e5e9791e893e1bc2cab640522ad5acf  # lxd/firewall/drivers: Removes unnecessary whitespace.
      git cherry-pick 12c45f4208be8e103ce9820e8d7a3722ec1b253c  # lxd/fsmonitor/drivers: Ends all comments with a full-stop.
      git cherry-pick 4261f0ddad704689d96c6f199ac74e63a1e5851a  # lxd/instance/drivers/qmp: Ends all comments with a full-stop.
      git cherry-pick 5f68a1f20584dd2a0c0ac46ca22d76d7e02fc5ee  # lxd/instance/drivers/qmp: Removes unnecessary whitespace.
      git cherry-pick 2a6704c60bf3ff9880b7e58a9ddc91c952331992  # lxd/instance/drivers: Removes unnecessary whitespace.
      git cherry-pick 93a0c6f9a05fc7af9ef568143a5e896ce89d909b  # lxd/instance/drivers: Fixes imports.
      git cherry-pick 2649467a6b345c532c233bc0d6e7b0810d0b40ad  # lxd/instance/drivers: Ends all comments with a full-stop.
      git cherry-pick f5461fdb69af70c60ffa30125a61ccd33257c055  # lxd/instance: Ends all comments with a full-stop.
      git cherry-pick 829bbf6e6aadd6980a979fadc747d8f1c1e0b41e  # lxd/ip: Ends all comments with a full-stop.
      git cherry-pick b3faf566ef0f971e67b519eefbf2a98271dfab8f  # lxd/lifecycle: Ends all comments with a full-stop.
      git cherry-pick 67cfe002e6dd7a91049d4f2b5fb3bc90799b5ac4  # lxd/maas: Ends all comments with a full-stop.
      git cherry-pick e0262f1959366e45bdb2ad191304f370c3e17606  # lxd/metrics: Ends all comments with a full-stop.
      git cherry-pick e68567a1a10c96d30bf5975e1dc942ac0b71380c  # lxd/migration: Ends all comments with a full-stop.
      git cherry-pick 4c9afa6cc73de1c0295e15feac23f2425b0b2c04  # lxd/network/acl: Removes unnecessary whitespace.
      git cherry-pick fca7d75d004c247f002319749249b36a1494d54b  # lxd/network/openvswitch: Removes unnecessary whitespace.
      git cherry-pick 12776e481d636b7a2f6811dc4fcca3c441d9a808  # lxd/network/zone: Fixes imports.
      git cherry-pick 447da2f295838bba4e67ff3f4b4f6d14c7ec5cc4  # lxd/network: Removes unnecessary whitespace.
      git cherry-pick eca9bb46cc91e3930f4b5ad82c621fb332f0a5e6  # lxd/network: Ends all comments with a full-stop.
      git cherry-pick 19df1d523357d90f073c9838472fa28048c80dc1  # lxd/node: Ends all comments with a full-stop.
      git cherry-pick 5613a15a08750e306d2c7fa34342b38541b47622  # lxd/node: Fixes imports.
      git cherry-pick f38c1c04f60a23075ef68545110a2ccc58e5cdac  # lxd/operations: Ends all comments with a full-stop.
      git cherry-pick cfd1cd9f496d0e890f2303005bc8547e2295f91c  # lxd/operations: Removes unnecessary whitespace.
      git cherry-pick 7a4394331a2dbd13336b68d6325c2ab2b2281fa9  # lxd/project: Removes unnecessary whitespace.
      git cherry-pick 12e18fe320e0f7a955b1a133f270bcbfa0381394  # lxd/project: Ends all comments with a full-stop.
      git cherry-pick 4a4aaf9d4ec4e41b78dce9f595f5ed4497cc37f0  # lxd/rbac: Ends all comments with a full-stop.
      git cherry-pick c52be7e5cf9cf5d6b76f5fe60236d97d709a2587  # lxd/request: Ends all comments with a full-stop.
      git cherry-pick 4964e9d3f5a7d99709b2cbeb180d4deb1c99ecf4  # lxd/resources: Ends all comments with a full-stop.
      git cherry-pick fcd174451d927cdb4fa7a1f351f12efbc9fe61ef  # lxd/response: Ends all comments with a full-stop.
      git cherry-pick cb5c3e306febd3dc4a0a3739354b02a935de452d  # lxd/seccomp: Removes unnecessary whitespace.
      git cherry-pick 3fb9ca33bf053fa16f4cd76b3ca637fdb5381e93  # lxd/seccomp: Fixes imports.
      git cherry-pick 8e7789a3411bf5cc4fd525f30166b31a69f01c8e  # lxd/storage/drivers: Ends all comments with a full-stop.
      git cherry-pick 4cd8637f2c4d337247644e0fa7b4467b8777e0fe  # lxd/storage/drivers: Removes unnecessary whitespace.
      git cherry-pick 909804be80a05f562f44ff89485edb87ef478e8e  # lxd/storage/memorypipe: Ends all comments with a full-stop.
      git cherry-pick f22e3ace251bd7cb00968a1a627257098b304f08  # lxd/storage: Removes unnecessary whitespace.
      git cherry-pick 4dd46b41ed4c5dbdfc25fba8bafa860c4d4b5b4c  # lxd/storage: Ends all comments with a full-stop.
      git cherry-pick 117be9f823e15683e14521bca87cba6a7d0aabb3  # lxd/sys: Ends all comments with a full-stop.
      git cherry-pick e4209c0d22102849ad2c5b8f8066f5b12443a155  # lxd/sys: Fixes imports.
      git cherry-pick 291ac58fd76b0148008521bc7fa7c45d71fb181a  # lxd/task: Removes unnecessary whitespace.
      git cherry-pick 19ec7ce9947bf6ce8567c85c0474b5b1d13b7712  # lxd/task: Fixes imports.
      git cherry-pick f5fe65f34324ba523c725b9480f2970f471506b3  # lxd/template: Ends all comments with a full-stop.
      git cherry-pick 571bef781bd6e200ff5600f37f1eb8080b048ad5  # lxd/util: Fixes imports.
      git cherry-pick c6989127a21c3ee4f58acfdd3d2e134982b30a6f  # lxd/util: Ends all comments with a full-stop.
      git cherry-pick 10be58bf556d338fea5847fd932d6620a588d574  # lxd/util: Removes unnecessary whitespace.
      git cherry-pick 5bdbd01225cdc99c0d6da6e2221f1b9c5c87b3f4  # lxd: Fixes imports.
      git cherry-pick fd0826367446da585bbb7b2278a4861e0586cb6b  # lxd: Removes unnecessary whitespace.
      git cherry-pick f293dfad129102a3a3e5fee3ee0870df11059a63  # lxd: Ends all comments with a full-stop.
      git cherry-pick af3a781cd196973a8974cadbad4d5b1aeb8df54b  # lxd: Fixes misspelling.
      git cherry-pick 57751104fa663cd44811c1ad77d472f308e75853  # lxd-agent: Fixes imports.
      git cherry-pick dd0642b96e91e43165e0a6c0247b000392928726  # lxd-agent: Removes unnecessary whitespace.
      git cherry-pick 221d29f45d8099a5ed6e1e262cc8949e32229291  # lxd-agent: Ends all comments with a full-stop.
      git cherry-pick dbeb86fd440ff8019447b93abc3cc7bc28d046a0  # lxd-benchmark/benchmark: Removes unnecessary whitespace.
      git cherry-pick e6f52575237b1e00c4976f1cf6ca31916c2079a6  # lxd-migrate: Ends all comments with a full-stop.
      git cherry-pick 771a8d71f83089fcef179a37b8f3cdea0835f599  # shared/api: Ends all comments with a full-stop.
      git cherry-pick 302ffe733ea3fad8b3e516a08ce592ea148437e8  # shared/cancel: Ends all comments with a full-stop.
      git cherry-pick d615655752718a7f260daee08b38023c82be8a75  # shared/cmd: Ends all comments with a full-stop.
      git cherry-pick dc8f59cc67482a3ab6ee42769c245ec2dcd6f83c  # shared/dnsutil: Ends all comments with a full-stop.
      git cherry-pick 56539fc57f24715e828a8283149cbf97624d1101  # shared/eagain: Ends all comments with a full-stop.
      git cherry-pick 86168d680b22e25affa7849137a7a72a216371cb  # shared/i18n: Ends all comments with a full-stop.
      git cherry-pick c29731cc89f9a8cf82867c40ce1da32596c68eb8  # shared/idmap: Ends all comments with a full-stop.
      git cherry-pick 9e31f12c275a6443bc4bbe2e88aa6f0e8bd95731  # shared/idmap: Fixes imports.
      git cherry-pick 257da00a2145d83711580c943fb5803a4e06554d  # shared/ioprogress: Ends all comments with a full-stop.
      git cherry-pick d3a2d79fb5309a138689a476e662879899ad8222  # shared/logger: Ends all comments with a full-stop.
      git cherry-pick d1ada744c59be5cc46893d541c3b3080956e9921  # shared/osarch: Ends all comments with a full-stop.
      git cherry-pick 87299a4f08629438079e0448575ca14ded0c6ec2  # shared/simplestreams: Ends all comments with a full-stop.
      git cherry-pick f45832c4a9cc384ac2564d687052ec4b6c6e2117  # shared/subprocess: Ends all comments with a full-stop.
      git cherry-pick ff509220adec6df57a31e5f5284e5fb09facccc0  # shared/subprocess: Fixes imports.
      git cherry-pick ac05429b4118598c8b1bdf8094b1b482cd8dda73  # shared/units: Ends all comments with a full-stop.
      git cherry-pick ed3a0ada91245922a6a4454e2404456b94d3fc47  # shared/version: Ends all comments with a full-stop.
      git cherry-pick 4fb531f030aa2b37dee3c10595e9fd04012bcc08  # shared: Ends all comments with a full-stop.
      git cherry-pick 0ed95b963306359bd4d06acb053846eb0afa28ed  # shared: Fixes imports.
      git cherry-pick 89628cab5ad6b5cd93b0a2cc138eea33c908d0ce  # shared: Removes unnecessary whitespace.
      git cherry-pick 317ce571c748d9344de6ed3dc8c8424cc7ced871  # test/macaroon-identity: Fixes imports.
      git cherry-pick 506a2d5ea98f7834c80a60403bf39687d2fbf5ff  # test/macaroon-identity: Ends all comments with a full-stop.
      git cherry-pick 71e0e90a43b605126899f89b5fd8d5a10ca33bde  # golangci: Adds golangci-lint configuration file.
      git cherry-pick c4036bdb15b6553af5ef55e807e45abad6aa7dc6  # doc: add link to YouTube video about image handling
      git cherry-pick 2a5bc5226768d864cb6cb375cb85f06cc084017e  # lxd/instance/lxc: Don't fail on missing apparmor
      git cherry-pick f5a72636488beb7c0af694cafe06c8a6c3734ae2  # client: Inserts newlines after blocks.
      git cherry-pick 7b83979ade8d847ce5273f72d68ce42f953875cf  # fuidshift: Inserts newlines after blocks.
      git cherry-pick 03ad970527d123fa461ffe381003a2efc528ef10  # lxc: Inserts newlines after blocks.
      git cherry-pick c93a61bbbfad0aff7753e061c1c6e6063b8fd08e  # lxc-to-lxd: Inserts newlines after blocks.
      git cherry-pick dbc735501268cefec7c06ec9e54aa86818ad316c  # lxd-agent: Inserts newlines after blocks.
      git cherry-pick 9783475d3913f255861b186d560d5d6ec36d5012  # lxd-benchmark: Inserts newlines after blocks.
      git cherry-pick 0a0c2db0009197eb207cab23278fbe3c232ffacf  # lxd-migrate: Inserts newlines after blocks.
      git cherry-pick 50f5ef39c794608ddc6534a65dee0721976affa4  # lxd-user: Inserts newlines after blocks.
      git cherry-pick b0ca5d91e92a90d2a080eb83b71e1e3735bb73f0  # shared: Inserts newlines after blocks.
      git cherry-pick 2af8ae9d551ddf332fa351b1194b21951829a6aa  # test: Inserts newlines after blocks.
      git cherry-pick fe1745c17f97f5eb4f576cf0301af32fb935f0e5  # lxd/archive: Inserts newlines after blocks.
      git cherry-pick 09070a980e47a77d7fe2bc62f71047fd0aa7b8cc  # lxd/backup: Inserts newlines after blocks.
      git cherry-pick 14da51608c20df40291d438981370bd0d7929929  # lxd/bgp: Inserts newlines after blocks.
      git cherry-pick 270a29ec3e93e67796992ac0f8b36084205c196d  # lxd/cgroup: Inserts newlines after blocks.
      git cherry-pick 700d845f2c3f7b492d45fe66f87c0771dedbe895  # lxd/cluster: Inserts newlines after blocks.
      git cherry-pick cd1c225973c2d6658e999f534f1bdded9f683e42  # lxd/config: Inserts newlines after blocks.
      git cherry-pick 6be73fe475d3366c82711360a153131b0c5961a4  # lxd/db: Inserts newlines after blocks.
      git cherry-pick 7a803cfe6996947bd4108273c400f9448118a270  # lxd/device: Inserts newlines after blocks.
      git cherry-pick f3de0fa91bebf9ab73eda004f228193225caaebf  # lxd/dns: Inserts newlines after blocks.
      git cherry-pick 1a6661bcd92ed02062e354d48c81335e88ddf52c  # lxd/dnsmasq: Inserts newlines after blocks.
      git cherry-pick 7125fdfa0cc4ea44b74773c7466f34ac03777605  # lxd/endpoints: Inserts newlines after blocks.
      git cherry-pick d545b7cbe0d62416778e862e2e9eab91be76862a  # lxd/events: Inserts newlines after blocks.
      git cherry-pick 70ffc541ec48ecacb61538e84ddb35d352a1b2f6  # lxd/filter: Inserts newlines after blocks.
      git cherry-pick e3cd28719cac8a98139bd93bc5af7871fd86249a  # lxd/firewall/drivers: Inserts newlines after blocks.
      git cherry-pick d6392bf398836bf33ef6a53b97ee39a72ec0033b  # lxd/fsmonitor/drivers: Inserts newlines after blocks.
      git cherry-pick c63135efc6c6555049f7ca7bd8a0e872f0d15b87  # lxd/instance: Inserts newlines after blocks.
      git cherry-pick adda1131d151d2360364762a56256e2409b8034b  # lxd/ip: Inserts newlines after blocks.
      git cherry-pick 4a4b2849c19a9871c3c843ad8eaf86f6dab4125a  # lxd/maas: Inserts newlines after blocks.
      git cherry-pick 99b400c8a3be1dd6b45239a9303bebfc1e360c37  # lxd/metrics: Inserts newlines after blocks.
      git cherry-pick 3aa1463ab77bb5c07fe81cdb2dcf3707220abb8c  # lxd/migration: Inserts newlines after blocks.
      git cherry-pick 8653f426dea5a1060d2b93d067d36e8d197a09a8  # lxd/network: Inserts newlines after blocks.
      git cherry-pick 741357dd7e87de8e17ebef25c0b4a994558e164d  # lxd/operations: Inserts newlines after blocks.
      git cherry-pick 59dfff4295a4b245f6016edf757726e8b20f839d  # lxd/project: Inserts newlines after blocks.
      git cherry-pick a8b359c70645ef40bf88276db89910bbf3014d60  # lxd/rbac: Inserts newlines after blocks.
      git cherry-pick 8cebb64ec796e6181b1cd71c3e8490add894bb6a  # lxd/request: Inserts newlines after blocks.
      git cherry-pick 1c6348b9c4e7879aa0abc1e00e17a61f70835abd  # lxd/resources: Inserts newlines after blocks.
      git cherry-pick 13a924e40d6e04f0abcb0520335a58d7235dcf1d  # lxd/response: Inserts newlines after blocks.
      git cherry-pick 3221d0b2ccf7a2bda27227d9d15fc13f55f05ed8  # lxd/rsync: Inserts newlines after blocks.
      git cherry-pick f4d89c33d2006b7a2ba6a23902e1c079d8e36487  # lxd/seccomp: Inserts newlines after blocks.
      git cherry-pick 37e28bbe4056b6101ae79aa49a4a1137a040c2d4  # lxd/storage: Inserts newlines after blocks.
      git cherry-pick d230ca24beba69c0c535fc4e57a7b4dc6a19dbf3  # lxd/sys: Inserts newlines after blocks.
      git cherry-pick 4b48d37de207fefb779471171e3e72e31235a95e  # lxd/task: Inserts newlines after blocks.
      git cherry-pick 4b63c97308a9534a5ecd988f26b82746a8216102  # lxd/util: Inserts newlines after blocks.
      git cherry-pick c8facd1ecf3fa73b3d4079593752524143310df0  # lxd/vsock: Inserts newlines after blocks.
      git cherry-pick 6ee951c4789d3c815cd0932c262419cc4f3d91b2  # lxd: Inserts newlines after blocks.
      git cherry-pick 92c7a8dd17276c3bc73cdab94321012673a817fc  # lxc: Removes all one-line assign and check statements.
      git cherry-pick 76d2b097b4275bd76b6b00a97149bf90992b3e02  # lxc-to-lxd: Removes all one-line assign and check statements.
      git cherry-pick eab91b9feee35ca479d1b6ef667fb8f85cdde843  # lxd/backup: Removes all one-line assign and check statements.
      git cherry-pick 93118381c224f1bce8953e93c86c879fa7447d59  # lxd/cluster: Removes all one-line assign and check statements.
      git cherry-pick 8d91218bad70a6e4534d79b0298de92ef9bd9cf3  # lxd-generate: One-line assign and check statements.
      git cherry-pick 7fd15cc044d2724a626b8983ff658d2dc27857fd  # lxd/db/generate: Removes all one-line assign and check statements.
      git cherry-pick 03a394ffd6810e69ef6633b05398df9986182496  # lxd/db/generate: Use multiline import syntax.
      git cherry-pick 9c177f831fbb2ff9239763785ed5c071803f4678  # lxd/db: Removes all one-line assign and check statements.
      git cherry-pick 8268334958078dc644054d38e6ff952f14182066  # lxd/db: Use multiline import syntax.
      git cherry-pick f86993ba08a140dae2d4b75e14abadc4b4196c16  # lxd/config: Use multiline import syntax.
      git cherry-pick ec4d340b295144275aed4303a3e323ce2474aaab  # lxd/device: Removes all one-line assign and check statements.
      git cherry-pick bc4109754f3bfc5987bcc6113f64b42a1c625ab6  # lxd/device: Use multiline import syntax.
      git cherry-pick edfaac651dc02ae0afa113904ee9dd36528769eb  # lxd/dnsmasq: Removes all one-line assign and check statements.
      git cherry-pick 85c35e39ae2d52a1b5738c9ae40a15ca33841e46  # lxd/firewall/drivers: Removes all one-line assign and check statements.
      git cherry-pick 94e000e4f7d378d356dd4d8288f073515a438cb2  # lxd/firewall/drivers: Use multiline import syntax.
      git cherry-pick 00e3ddc55a470beaff18306613c842edfa77a620  # lxd/fsmonitor/drivers: Use multiline import syntax.
      git cherry-pick 77216559f7e2a6b84f24e17e0aea7037b0b19611  # lxd/instance/drivers: Removes all one-line assign and check statements.
      git cherry-pick 446db5793fed7d98f168c711cd1aa06f0d1cd769  # lxd/network/acl: Removes all one-line assign and check statements.
      git cherry-pick 339969beb29b6c71f0e8bad73ffd7fa766ea1013  # lxd/network/openvswitch: Removes all one-line assign and check statements.
      git cherry-pick a7ed8d86b45267c839b701c7395a0a8c45fec048  # lxd/network: Removes all one-line assign and check statements.
      git cherry-pick b46690ffe099474b70f0b800a77f5b730779ccd6  # lxd/refcount: Removes all one-line assign and check statements.
      git cherry-pick ffb2106a8fc3de736272f817d6817477ff70817c  # lxd/resources: Removes all one-line assign and check statements.
      git cherry-pick cba6f2d9792300b9825e42704d64137a2d8ae84c  # lxd/response: Removes all one-line assign and check statements.
      git cherry-pick f2a76004f9941cbb5496195587c9f3848bf6c88e  # lxd/rsync: Removes all one-line assign and check statements.
      git cherry-pick 185dbbe3c79b480d9b983de4151314dddeb6f0ce  # lxd/seccomp: Removes all one-line assign and check statements.
      git cherry-pick d3df8b60bf385a0f0323e983542a2ddf5ab68d48  # lxd/storage/drivers: Removes all one-line assign and check statements.
      git cherry-pick dbf4f9f23081990be1565f4f1e41a938bfa319b6  # lxd/storage: Removes all one-line assign and check statements.
      git cherry-pick 0cf3179104b486fe160f7e15a9833badf05bb90e  # lxd/util: Removes all one-line assign and check statements.
      git cherry-pick 5d3c66f6dac1e568b6b267135245f283c65eb3a0  # lxd/util: Use multiline import syntax.
      git cherry-pick ad9099636f9a728d6d4a863273585eefe55c0b92  # lxd: Removes all one-line assign and check statements.
      git cherry-pick 980570ca0a0eaac7995327271f8bf3cf221add83  # lxd-agent: Removes all one-line assign and check statements.
      git cherry-pick d1c586bf0688fb2270af7daf7ec24ae08463dc79  # lxd-migrate: Removes all one-line assign and check statements.
      git cherry-pick ffec5fedc5c2d029766420fb3b681e282548236e  # shared/api: Use multiline import syntax.
      git cherry-pick 52b3f462cc903647eaa2e2e5133063e161c018f9  # shared/cancel: Use multiline import syntax.
      git cherry-pick 25951e28bc49338a6c91cfa4f6961055714878da  # shared/idmap: Removes all one-line assign and check statements.
      git cherry-pick 745941cad27815df82aa97c07573d1e4fdb6f538  # shared/instancewriter: Removes all one-line assign and check statements.
      git cherry-pick 40532b8e972794031482fb056ac001850bc41266  # shared/termios: Removes all one-line assign and check statements.
      git cherry-pick 5457726d305802ceca5dbb39209116b0691c9e01  # shared/usbid: Removes all one-line assign and check statements.
      git cherry-pick f4a4716be084e3549c4cbc76ea509363ceaa0303  # shared: Removes all one-line assign and check statements.
      git cherry-pick 559179a332fc67b54c59106ac03d11073d3c96d8  # test: Removes all one-line assign and check statements.
      git cherry-pick 7b04f45ed5c517ab2082ad7c6bb86cb472d0acd2  # test/lint: Adds shell based linters.
      git cherry-pick 4f85c8e1757fcb833d46d6f80d8d093ce1068dd8  # Makefile: Updates static-analysis target.
      git cherry-pick 338929ab94733c834c465a101a3378861eb6469b  # test/suites: Removes static analysis suite.
      git cherry-pick c3a72d76efa068a7f98e61e475e85fcdbd30281b  # workflows: Adds static analysis job.
      git cherry-pick 70d645f13440d4bc2bacbd9cdc4779d6151502fc  # lxd/network/driver/common: Fix comment typos
      git cherry-pick 656941f50c0364b965dcbe14b3e6a6da549c7f99  # lxd/db/network/forwards: Fix error handling in GetNetworkForward
      git cherry-pick 08f0a509646e78a47d9776df5cfd9bfa24ec0f76  # lxd/network/driver/common: Adds forwardTarget type
      git cherry-pick f4ded3b978662c59fdd05b0e1ca75095630cc74b  # lxd/network/driver/bridge: Update forwardConvertToFirewallForwards to support new forward target type
      git cherry-pick a14ace9b8b2c4edde8139441d8490acb9907b35e  # lxd/network/driver/common: Adds usageType field to externalSubnetUsage
      git cherry-pick 1fdf2b2b37682196d2baa6fc350dc4212687fc06  # lxd/network/driver/common: Update forwardValidate to use forwardTarget type
      git cherry-pick 8061f724ced13de438669bda5f772cc6a1afdc54  # lxd/network/driver/bridge: Update subnet usage to use usageType
      git cherry-pick c6ccb46d85e7d441d53c78b9a0266499e25fe5f6  # lxd/network/driver/ovn: Updates to support subnet use usageType field
      git cherry-pick cd59152b809515a4a2a05f8d6fc946fad99b8421  # lxd/network/openvswitch/ovn: Updates LoadBalancerApply to support multiple targets via OVNLoadBalancerTarget
      git cherry-pick 8e7a9b59802953bca5e3d41f1ddd21e94aa16ab6  # lxd/network/driver/ovn: Update forwardFlattenVIPs to support updated openvswitch.OVNLoadBalancerVIP
      git cherry-pick d7df4f0988de19d3b3e9625bc1b59a047e53c80e  # lxd/network/driver/ovn: Fix network ForwardUpdate revert
      git cherry-pick 28d42906588fab494748d88692ac869cf0801554  # test/lint/client-imports: grep for fixed string before sorting
      git cherry-pick f4e1207dfd7a3a284f5fe4823af4eebad66f63d4  # test/lint/i18n-up-to-date: move lxd.pot instead of copying it
      git cherry-pick a7fa16a0036d7fd08f8d58cb785339af4abe2188  # test/lint/mixed-whitespace: only process files with .sh extention
      git cherry-pick 9d1409f2709b097facaa9c6c397668acfb16668c  # test/lint/mixed-whitespace: only process files with .sh extention
      git cherry-pick 339912483ce98c84557ac73a68239507a318f325  # test/lint/negated-is-bool: use git grep and only check .go files
      git cherry-pick 9d29b6c89bb342f636f39751d026dd46c77d741d  # test/lint/newline-after-block: use git ls-files instead of find
      git cherry-pick 3b317ea12c21b2a18e711c3ed0eb7815304a74a4  # test/lint/no-short-form-imports: use git grep and avoid early exit
      git cherry-pick d1d229f521781eea9505672f5e96444ad64c3b78  # test/lint/trailing-space: use git grep and only check .sh files
      git cherry-pick a99fadb76f043ad1d30a438076aea6ec713a8316  # Makefile: use run-parts to run test/lint
      git cherry-pick 36b7b4ca7d251905b831e9ff5f4d301d386438ba  # test/lint: tell git grep to consider tracked and untracked files
      git cherry-pick cb3a4459818b763879f49e13453cecad29a7bd33  # test/lint: tell git ls-files to consider tracked and untracked files
      git cherry-pick 90e69ba01ac9c05e07c65415cd8b7d3e24b09c0c  # lxd/network/driver/ovn: Inserts newlines after blocks.
      git cherry-pick 11303ad6fb0fcf4e0258801f9acb7665be75e29a  # i18n: Update translation templates
      git cherry-pick e0230547c5c7023a1772984c208905abdc14f01f  # test/lint/i18n-up-to-date: don't leave dirty .po files behind
      git cherry-pick da77266e81eaa63e0ff8c0e0e9fed4163bfc7109  # workflows: Removes unit tests and reinstates ubuntu client tests.
      git cherry-pick ee366db61780294f6d8940f6ab792ebfec4d3f97  # lxd/db/generate/lex: Use cases.Title instead of deprecated strings.Title.
      git cherry-pick 00d50dfa6cd25a1926e82631866f6db0d5d0d435  # lxd/db/generate/db/method/v2: Fix config error handling
      git cherry-pick 04705e4877f98c499da33a1636798f6f9017ca17  # lxd/db/cluster/mapper: Update generated code
      git cherry-pick d23cd5c9c1523bce2ed18f9a784526b28f7f7aed  # doc/ovn: fix steps for OVN cluster setup
      git cherry-pick 819ae8b3727d6f686a59b86e908610d21dc83604  # doc: fix nested ordered lists
      git cherry-pick 59f0514c91fb727181b634e46221a94083c34e01  # test: Update test_container_devices_disk_socket to test both start time and hotplug
      git cherry-pick c025da0a6bf26cc291e7dbf3b3c9ac3cc05a0fa7  # test: Adds test_container_devices_disk_char to check passing char devices as disks
      git cherry-pick 15cfa024f2104e6594d68efd392258781ea62b67  # workflows/static-analysis: Download but do not update dependencies.

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"
      export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc" github.com/lxc/lxd/lxc
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc-to-lxd" github.com/lxc/lxd/lxc-to-lxd
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd" -tags=libsqlite3 github.com/lxc/lxd/lxd
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-benchmark" github.com/lxc/lxd/lxd-benchmark
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-user" github.com/lxc/lxd/lxd-user

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      cp scripts/bash/lxd-client ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - lib/*/libidn.so.*

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark
      - bin/lxd-user

  lxd-migrate:
    build-attributes: [core22-step-dependencies]
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    build-snaps:
      - go
    plugin: nil
    override-pull: |
      snapcraftctl pull
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Download the dependencies
      go get -d -v ./...
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-migrate" -tags=libsqlite3 ./

      # Install bridge script
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    build-attributes: [core22-step-dependencies]
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    build-attributes: [core22-step-dependencies]
    source: snap-query/
    build-snaps:
      - go
    plugin: nil
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/snap-query" snap-query.go
    prime:
      - bin/snap-query

  strip:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - ovn
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - zfs-2-0
      - zfs-2-1
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8 zfs-2.0 zfs-2.1; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    build-attributes: [core22-step-dependencies]
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
      wrappers/editor: bin/
      wrappers/remote-viewer: bin/
      wrappers/sshfs: bin/
