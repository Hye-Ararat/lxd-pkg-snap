name: lxd
version: "3.2"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - waitready.timeout: How long to wait for LXD to be ready [default=600]

confinement: strict

apps:
  # Main commands
  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: always
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - system-observe
  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe
  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs: [network]

parts:
  # Dependencies
  btrfs:
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/mkfs.btrfs

  ceph:
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - -lib/python2.7/sitecustomize.py
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so

  go:
    source-tag: go1.10.3

  lvm:
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nvidia-container:
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    plugin: make
    build-packages:
      - bmake
      - curl
      - libseccomp-dev
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git am ../../../patches/nvc-0001-no-headers.patch
      git am ../../../patches/nvc-0002-preload-libraries.patch

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ../../../snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-*
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  sqlite:
    source: https://github.com/CanonicalLTD/sqlite
    source-type: git
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tclsh
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  vim:
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim74/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_*
      - bin/mkfs.xfs

  zfs-0.6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0.7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.9
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-3.0.1
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libseccomp-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 200e6f5bda89e79dc69c08ca15991f454c004646  # parse: fix memory leak
      git cherry-pick 8d6ee0ca9df061d998c2496501481b9914e23119  # autodev: adapt to changes in Linux 4.18

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-3.0.1
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.10
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-3.2
    after:
      - go
      - lxc
      - sqlite
    build-packages:
      - libacl1-dev
      - pkg-config
    stage-packages:
      - acl
      - dnsmasq-base
      - ebtables
      - iptables
      - rsync
      - squashfs-tools
      - xdelta3
      - xtables-addons-common
    plugin: go
    go-buildtags:
      - libsqlite2
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Build using our own sqlite
      sed -i "/#ifndef USE_LIBSQLITE3/i #cgo pkg-config: sqlite3" ../go/src/github.com/CanonicalLtd/go-sqlite3/sqlite3.go

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 03e624533b7166f7622a6e3154e82ac8696d3e42  # lxd/certificates: Log password failures
      git cherry-pick def6d1f09fa47d364fb365270b60991307424021  # test: Fix static analysis
      git cherry-pick b753839304025313966aa9ce6d22b1962e6cf830  # proxy: handle full socket buffer
      git cherry-pick 0a3569da4e3894fa9e297f74cffe2a0d914c8e19  # gpu: special case passing all GPUs
      git cherry-pick 2e2499317a6431efc1c03f334e51553af39a9f0a  # gpu: don't fail during parse
      git cherry-pick 6cb20bfcb2631d7379ba922ba970b03c27fe6feb  # Allow identity mappings for unprivileged containers
      git cherry-pick 0f84d27f7ccb7f94f9fe56db120e8f8a8260012f  # container: adapt allowedUnprivilegedOnlyMap()
      git cherry-pick 8a0e9a4004c82dbc21f6616e0ec7b053611acb98  # gpu: handle cards among Nvidia devices
      git cherry-pick b91025325780f1e9ff683c516e6ba43604f799da  # shared: Dereference directory symlinks
      git cherry-pick 7eaec9877c074e721b72e21f5d9eb5ae1aabb8f1  # lxd,shared: Move parseNumberFromFile to shared
      git cherry-pick a33e14c0f30847a261f61145a73abf678b8e0587  # gpu: fix Nvidia minor index parsing
      git cherry-pick 2e942e632fa23e2eab2668e9ec58f7200c6b7d7e  # lxd/db: Don't hang after bad request
      git cherry-pick ff536dad2a3a68dd8deae0343ed335a0fdde8df1  # lxd/apparmor: Allow ro bind-mounts and remounts
      git cherry-pick da7504a92d2146718f206439f1588fc57ef1862d  # lxd/containers: Fix removing NVIDIA containers
      git cherry-pick 7d707d6cbe27e00a5f4ba5d8a733945e0071c464  # idmap: support skipping directories
      git cherry-pick 9220d724963769132d3e1375c847fd8db92a459c  # lxd: Properly set containerArgs in all cases
      git cherry-pick c77ff001b16e480c8918da591b745c786f7900eb  # lxd/storage: Fix PATCH on storage pools
      git cherry-pick 0011d2b5d05797b91df6d302c53f3a80f82364f0  # container: use lxcSetConfigItem() for lxc.log.file
      git cherry-pick dd82f404a5728d69cbc6de375f8f7b8e55e09fd8  # lxc/cluster: Remove bad alias
      git cherry-pick 4fe32c14dba37d872712cc27138f5edd3266509b  # doc: Fix storage volume examples
      git cherry-pick c87dac872d473d1b03e442d923693835dc877136  # lxd/storage: Fix volume creation API
      git cherry-pick 3024992f0bcfd7337f811efd4489954cafe769d5  # tests: Add alternative TCP port finder
      git cherry-pick 16a174bab0743287a283f920d49aadecdd4389cf  # doc: Document hostname requirements
      git cherry-pick 0bcc715939dfd864a010f28c255c3c033f25e921  # networks: Support stateful DHCPv6 with prefixes longer than /64
      git cherry-pick 8de1c2ec39ad3bb12f9a478f08913a953fb9f161  # lxd/networks: Skip DHCP mangle if firewall off
      git cherry-pick 69e842e1193e59908451b19d5d1673cc3891852d  # network: do not print writer struct on error
      git cherry-pick 622a9e908572ca61db5696bcc9290ed1c7023c7e  # lxd/patches: Force a one-time config re-gen
      git cherry-pick ad91ca03164c5d9b7c758ceb0e88933eb8eff30d  # storage pools: move structs
      git cherry-pick 5e7ffb62a77358c069fa3310115de441db7513b9  # storage volumes: move structs
      git cherry-pick 84768bee368eeea853a2133cbf5d943c0c09683e  # images: move structs
      git cherry-pick 3a341e9aadc5be669dac2f4717ab2f978efeefab  # client: Export OperationWait
      git cherry-pick 024c71f8655f6f0a0629eda00b8d8119e147dbeb  # lxd/operations: Forward to right cluster node
      git cherry-pick 0b8790f5fc4e4163d134681c6bbef348d7af355b  # lxd/cluster: Only restart local containers
      git cherry-pick 41c9100c82ee18c21c23e6f21d28c270485be12f  # images: consistenly name command structs
      git cherry-pick ee4dfd0b0306f8421a1cebdeaea3003e396d0804  # cluster: move structs
      git cherry-pick 721d7c2bbd4fe7567d8be794e0f484de25198ef3  # api 1.0: move struct
      git cherry-pick 5aa3736d541e00e726637e60448a9e0dbfab138f  # api internal: move structs
      git cherry-pick 19e4780e5c4727e53a53436392aee8aea4f86e37  # certificates: move structs
      git cherry-pick 2f087ffdd6612a5bd606b2628f85bdd25c7ec333  # events: move structs
      git cherry-pick e5ceed16f43370f1814cfb03449b87fc44902528  # operations: move structs
      git cherry-pick 7dc6509fe5c27bf3547004a2eb70264fb2bbe122  # profiles: move structs
      git cherry-pick 10baa2015541e394f7c740d67ff50274fb9973ca  # resources: move structs
      git cherry-pick 9441c4dfe8b7a10cd2ed194926e7d534f5319e91  # container logs: move structs
      git cherry-pick bf34856722d938fdca8e0e687beef601fb834762  # container post: move structs
      git cherry-pick 866f48b8ee239366770b5e1cd45e56978d4da49d  # lxd/storage/btrfs: Fix recursive snapshots
      git cherry-pick 53ab47de6670e6140003f4ae8d30bedcda47e887  # lxd/cluster: Fix attaching CEPH custom volumes
      git cherry-pick df662310e1a2a08c86ac4f74ec7ae54f8442591e  # lxd/storage: Fix double quoting
      git cherry-pick 95c4c6472c5698f137d92f5e0b5854254b5e3732  # doc: Fix missing escaping in api-extensions
      git cherry-pick 02689d2c19563893bc10904d7026b18281f1f02c  # Reduce the frequency of raft snapshots
      git cherry-pick f3f3c7a72a81cdecc129e5d814531acd6b967b0c  # lxd/storage/ceph: Don't keep snapshots mounted

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
      lib/ebtables: lib/
    prime:
      - bin/dnsmasq
      - bin/ebtables
      - bin/rsync
      - bin/setfacl
      - bin/unsquashfs
      - bin/xdelta3
      - lib/libebt*
      - lib/xtables/*

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - go
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Build using our own sqlite
      sed -i "/#ifndef USE_LIBSQLITE3/i #cgo pkg-config: sqlite3" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
