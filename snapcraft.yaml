name: lxd
version: "2.21"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - waitready.timeout: How long to wait for LXD to be ready [default=600]

confinement: strict

apps:
  # Main commands
  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: always
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - system-observe
  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe
  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  database:
    command: commands/lxd-database
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs: [network]

parts:
  # Dependencies
  btrfs:
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/mkfs.btrfs

  ceph:
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - -lib/python2.7/sitecustomize.py
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so

  go:
    source-tag: go1.10

  lvm:
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  openvswitch:
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-*
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  sqlite:
    source: https://github.com/CanonicalLTD/sqlite
    source-type: git
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tclsh
    prepare: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  vim:
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim74/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_*
      - bin/mkfs.xfs

  zfs-0.6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    prepare: |-
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el
    install: |
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0.7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.5
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    install: |
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-2.1.1
    prepare: |-
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick a37f8ab2b1b171202a56ba5b4d3320cffc570a33  # console: non-functional changes
      git cherry-pick ae1aaf5a3a4565e6ce676858fce3c72f334e7c38  # console: non-functional changes
      git cherry-pick c62e51c253613749bc685f934622445caefe81d1  # console: fix console info message
      git cherry-pick 7982b83356527b0eb20dca7c972fe2a50fd1c0fa  # console: report detach message on demand
      git cherry-pick 8a01a32f641b9a279e1d84a3d36aa4e7ca6a6b7f  # console: use correct escape sequence check
      git cherry-pick 8de44ef8ea7636cea93fa542297bd1e3ad4020b0  # console: prepare for generic signal handler
      git cherry-pick 94b9b79499271a496447805b135482e7bae946fc  # console: exit mainloop on SIGTERM
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libseccomp-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
    install: |-
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-2.0.8
    prepare: |-
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    install: |-
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.7
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    build: |-
      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
    install: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-2.21
    prepare: |-
      set -ex

      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
      git cherry-pick ccb9b42a926fb67d66cda94ad0e3abb145a230ce  # lxc/exec: Fix typo
      git cherry-pick a6eaf97fde1c8392c7cd6f8ecbafa11a9db00395  # lxd/containers: Fix tc egress rules
      git cherry-pick e975a1f82df132bf149fe67dce8fc8dbb59e6bf8  # lxd/events: Cleanup event listener setup
      git cherry-pick 419fa4c39bbe0f12a35520fe22afecb791a252d8  # Fix device names containing slashes
      git cherry-pick cda347dc94a24cd10717c981d79e175a5c944f8e  # Update issue template
      git cherry-pick a1a0475defb8b051ccbcd3eb3967f1a28f61136b  # storage/btrfs: Fix handling of UUID-based mounts
      git cherry-pick 444808c3e492ca0d3e0e88a165119ca739058590  # doc: Add /images/<fingerprint>/secret to API list
      git cherry-pick c7a011e6723689bdd82e20f8cdd0312cffcc9125  # doc: List /1.0/storage-pools API endpoints
      git cherry-pick 51ea2cefdf5cd98fb54c3c60c9a030fe3be5e9e2  # lxd/containers: No slahses in snapshot names
      git cherry-pick a0b4721a8bba360d7ef3a791bb49439547ab54e0  # lxd/storage: Don't allow slashes in pool or volume names
      git cherry-pick 1f932668fa7d0b1192d8df8c343f30ae17b5f521  # lxd/init: Strip leading and trailing spaces
      git cherry-pick fcbbe21c0efc3eb8bb60c03232975a18e5651fe4  # change “your first time using LXD” to something less confusing
      git cherry-pick 5c438fda3c9455a64c6ae48b78f375dafa727702  # doc/README: Update source build instructions
      git cherry-pick 62efb7b9e0af3068c1dba25e88619df3806e3ffe  # doc/containers: Document CPU limits
      git cherry-pick a53fe55976f10bcaee9c279542b91400b27cf93e  # console: Don't prevent setting lxc.console.logfile
      git cherry-pick c160898722dd9293690f5cfb4da50d981218aaa4  # console: Fix version check in log API
      git cherry-pick 8a888cb9d2ff3b9f0ab1c604d410585c3f90d4ea  # lxd/containers: Don't drop the description
      git cherry-pick b894f2709b41cb4001b4b96a8696415b449619af  # scripts/vagrant: The LXD PPA is gone
      git cherry-pick f0751d938ed8c11b2aa3b234984ae006da55f286  # allow arbitrary users to read idmaps
      git cherry-pick 422751d77dfa13363552caac756de46910ae780c  # drop \n from IdmapSet's ToLxcString
      git cherry-pick d840004886b702b3bea15d4a1d6e4f32717a6b62  # network: Serialize network creation
      git cherry-pick 7be50c3b81311db6a7c9e3c9b7605885c5cffca4  # storage: Serialize storage pool creation
      git cherry-pick a5e117873d926a8d14b4bcdad07de3be9d07060e  # lxd/containers: Fix container shutdown on exit
      git cherry-pick 479d024f0b22d006679e47a7496c987f4d2cd62a  # fix parsing for container name tab-completion
      git cherry-pick 747d70aeee6cf567b4d1d54cf2cf044e1ce6fa47  # lxc/file: Fix edit in a snap environment
      git cherry-pick 77c5385ddc4e1880abd880af4c3ea83b54b050ca  # tests/basic: Pass -f on stop/restart
      git cherry-pick 82ccced4702f7736970fc3ff6ca72311f4d4faa3  # correct mistake in help
      git cherry-pick 52ec2495b807483f3a72c86136bcd76a8ab48414  # shared/idmap:DefaultIdmapSet(): take a user argument
      git cherry-pick c950b4a06f525b100d681883e6909fb407a608eb  # lxc client: return errArgs on empty pool
      git cherry-pick 4a064e2f70595a30aef9bf1407aba34ad7792884  # networks: Drop all firewall rules when disabled
      git cherry-pick 7feb4e533e8589f2e5b38ff7bd5312647212abf2  # test: fix shellcheck complaints
      git cherry-pick 441aedc10ca4ce88f2d4f1c9678cb707b2ffa3dc  # lxd,shared: move archive functions to shared
      git cherry-pick bc853cf3fc3f6a7d7782b652114bc2bd864fb980  # *: move download function to shared
      git cherry-pick 107beb0369b672f184dfe1483dabbde57d9af2c5  # container_lxc: ensure container is initialized
      git cherry-pick 3e02c0389476dfc927458c053f45394d8c4f0061  # migrate: check pre-dump only on live migration
      git cherry-pick f0c5e424d37bea46101bd65881afe2aed496eae4  # shared/hostpath: Also check SNAP_NAME
      git cherry-pick 78e7e887d6bf10027f26233a5535aec2e8946d0c  # shared/hostpath: Properly handle prefix check
      git cherry-pick 8f02215ae6f1dbc9f184a833796763bb65a4c6f8  # termios: Workaround vet on go tip
      git cherry-pick a4ae2539454cf794dec5b2dbeef90fbbb339c333  # lxc/config: Fix metadata edit
      git cherry-pick 959b822027b16cba6d47aaf222dd0a7eb07a3b9b  # containers: Default to pids cgroup for fork bomb mitigation
      git cherry-pick 8cf30e6f16ef15a74431a514161159a060e936dc  # tests: Check for mixed tabs/spaces and trailing whitespaces
      git cherry-pick fcf824a1a31b4b3e7d98314c540956c3e3c0a5f2  # lxc/storage: Added missing quote in comment
      git cherry-pick f591046a0622a19cd4aaf333510809502d4bed59  # api: Include message format for events
      git cherry-pick 0401a14987dbe9a9cf330dcf6e38a60b6c5cccc6  # events: Use api message type
      git cherry-pick 54e445a82b7782d76b58b527f5de59d74548c05a  # shared/version: Include storage backends in agent
      git cherry-pick 69525b10f228b6599d02c603415e2faeed05c368  # api: Add NetworkLease struct
      git cherry-pick 727d8b92ba6d1e565e0dca83e754c7069ff9580c  # client: Add network leases handling
      git cherry-pick aba8eeaec65b2f972944872bca4a3e5ddad578e4  # tests: Drop leftover ls in pki test
      git cherry-pick 5b98ce0354c07eb367078b3508d5c87538f1d753  # lxc: Properly handle the --version flag
      git cherry-pick e3629486fdb29cc74b457de1390bf0064d3e478f  # Make the test suite use lxc.apparmor.profile instead of lxc.aa_profile
      git cherry-pick 13e07959c3c6f1a1446373dd158f49faa3e43e46  # Check for LXC version to decide which apparmor profile config key to use
      git cherry-pick 91b70ff5f43adc588ed292b028eba45cab50b1cd  # lxd-benchmark: Fix new go vet warnings
      git cherry-pick e4f374659f0dd9c935c86548b83d486579112b4f  # lxc: Make the <remote>/<alias> syntax work
      git cherry-pick a32f083d562f4981204d7c8a624281390cfec90e  # shared/cancel: Properly lock map
      git cherry-pick c4ef9a68cb62dbc70cacf440708bd9096197ce5e  # shared/cancel: Make the cancel code golint clean
      git cherry-pick b0bbe25d99c72860464e25dd8accd54847a0ee1f  # lxd: Rework listening logic
      git cherry-pick 979a7dedc7dfcdc97ca5e81355fee2bf5afd4973  # lxd: Make pongo2 look inside the container
      git cherry-pick 5e40c98e1679523cfb936b93a7eedcc72bbe2d49  # vagrant: Remove vagrant integration (outdated)
      git cherry-pick d717267dfd3474db053de09e68b5b0ee6d4afcb4  # Move bash completion under scripts
      git cherry-pick 2cdda9f00d9b083da18cc834bfc0927c2eea68dd  # lxc: Fix golint
      git cherry-pick d31c4894aaeefe0188569dcdd7a89a6cbcef7f10  # lxd-benchmark: Fix golint
      git cherry-pick 73df413351946f4e3b686775a905f1d579d02a67  # lxd/types: Make golint clean
      git cherry-pick 96715c32aa937c9a6c7c922bf9dc5f6e16fc4d1b  # lxd/util: Fix golint
      git cherry-pick 5bc1159834697ebd05d1535bc9c80182cb3cbccd  # test/macaroon-identity: Fix golint
      git cherry-pick 5f92b6469da921e2f07697c95666c9cbfe73be06  # tests: Update list of golint clean packages
      git cherry-pick 241400755458169b2a1b2b1d96f80ead6a6dc7ad  # shared: Remove dead code
      git cherry-pick 31b98d61feca19097c1738caad059d6d8eb8e819  # zfs: Don't fail on missing image snapshot
      git cherry-pick c98fa014a83955cb72e6be984483e7367e76be5a  # client: Check API extension for storage
      git cherry-pick d54e6eeb9c06dc217ef1c94d367d34e403835025  # client: Check API extension for network
      git cherry-pick 40c18267366d37f09e6292fa45627e8c7c331116  # doc: s/zfs/ceph/
      git cherry-pick 4d867b566405d13c45f359da2ddd5d1d611e9836  # shared/api: add local storage volume {copy,move}
      git cherry-pick 10522e96e849637f38284d0a4817dacb017eff9f  # client: add {Copy,Move}StoragePoolVolume()
      git cherry-pick 46a6f734577562374f6cd9321823500c42284a08  # storage volumes: non-functional changes
      git cherry-pick 2dac27d426fa215c6947069f7fbe93457e31f093  # tests: Drop lxd/sqlite golint test

      export GOPATH=$(realpath ../go)
      go get -t -d ./...
    after:
      - go
      - lxc
      - sqlite
    build-packages:
      - pkg-config
      - libacl1-dev
    stage-packages:
      - acl
      - dnsmasq-base
      - ebtables
      - rsync
      - squashfs-tools
      - xdelta3
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    prepare: |-
      set -ex

      # Build using our own sqlite
      sed -i "/#ifndef USE_LIBSQLITE3/i #cgo pkg-config: sqlite3" ../go/src/github.com/CanonicalLtd/go-sqlite3/sqlite3.go
    install: |-
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat ../src/scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
      lib/ebtables: lib/
    prime:
      - bin/dnsmasq
      - bin/ebtables
      - bin/rsync
      - bin/setfacl
      - bin/unsquashfs
      - bin/xdelta3
      - lib/libebt*

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - go
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    prepare: |-
      set -ex

      # Build using our own sqlite
      sed -i "/#ifndef USE_LIBSQLITE3/i #cgo pkg-config: sqlite3" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go
    install: |-
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
