name: lxd
base: core
version: "3.18"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs: [network]

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - -lib/python2.7/sitecustomize.py
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so

  dqlite:
    after:
      - libco
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    after:
      - qemu
    source: https://github.com/tianocore/edk2
    source-type: git
    plugin: nil
    build-packages:
      - acpica-tools
      - nasm
      - uuid-dev
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM2_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libco:
    source: https://github.com/canonical/libco
    source-type: git
    plugin: make
    organize:
      usr/lib/: lib/
    prime:
      - lib/libco*so*

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
      - libpopt0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate
      - lib/*/libpopt*so*

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.0.6
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      # Supposedly supports x86_64, aarch64 and ppc64le but only x86_64 builds
      [ "$(uname -m)" != "x86_64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  qemu:
    after:
      - libseccomp
    source: https://git.qemu.org/git/qemu.git
    source-type: git
    plugin: autotools
    configflags:
      - --disable-docs
      - --disable-slirp
      - --disable-user
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-linux-aio
      - --enable-pie
      - --enable-seccomp
      - --enable-system
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --enable-vnc
    build-packages:
      - bison
      - flex
      - pkg-config
      - libcap-ng-dev
      - libglib2.0-dev
      - libpixman-1-dev
      - libaio-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libpixman-1-0
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      # Mangle the configure a bit
      sed -i "s/^unset target_list$/target_list=\"$(uname -m)-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - lib/*/libmagic*so*
      - lib/*/libpixman*so*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*

  sqlite:
    source: https://github.com/canonical/sqlite
    source-type: git
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tclsh
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    plugin: autotools
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ebtables
      - iptables
      - xtables-addons-common
    organize:
      usr/lib/*/xtables/*: lib/xtables/
      lib/ebtables/*: lib/
      sbin/: bin/
    prime:
      - bin/ebtables
      - etc/ethertypes
      - etc/protocols
      - lib/libebt*
      - lib/xtables/*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/xz
      - lib/*/liblzma*so*

  zfs-0-6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.13
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.8.2
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-3.2.1
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --disable-memfd-rexec
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 6453ba565ed7e3be9b3c9fa74ac07cf8e06b9afc  # tree-wide: initialize all auto-cleanup variables
      git cherry-pick 9c579205669cce54944e2c4f115e69ef18475bbe  # pidfds: don't print a scary warning on ENOSYS
      git cherry-pick 3dd7829433f63b2ec1323a1f237efa7d67ea6e2b  # network: restore ability to move nl80211 devices
      git cherry-pick b31d62b847a3ee013613795094cce4acc12345ef  # cgroups: initialize cpuset properly
      git cherry-pick e4103cf63f3e24667680544303e7c7230b3d508c  # lxccontainer: do_lxcapi_detach_interface to support detaching wlan devices
      git cherry-pick 7c3d3976fa4036fe5c260ca3a68376360e98e260  # utils: Fix wrong integer of a function parameter.

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-3.1.2
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.13
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-3.18
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    stage-packages:
      - acl
      - dnsmasq-base
      - netbase
      - pigz
      - rsync
      - squashfs-tools
      - xdelta3
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/canonical/go-dqlite/internal/bindings/server.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick e2f18530b7bd634386ca7b039d4b083bec15edd4  # lxd/device/disk: Apply limits through post hook
      git cherry-pick 5221d43df530131f2c6e06369cdda8122f10eee1  # lxd/main_migratedumpsuccess: Use fast connection
      git cherry-pick d64888338f82547220f3b9524d0968600cf1fbe7  # lxd/main_sql: Use fast connection
      git cherry-pick 68da729c3ae989616db1751d2adeacceb27a9de1  # lxd/daemon: Allow internal queries during startup
      git cherry-pick a05563b8ad929137ccdc046573520e804352faaf  # test: Adds host-side MTU veth checks
      git cherry-pick ca60fe5de03ac9d1bb9d47f7f516151f06ad259d  # lxd/device/disk: Improvements in disk limits
      git cherry-pick 2a1d40ba25915c18baf839aeb0bd784a11de1255  # lxd: Fix backup expiry
      git cherry-pick 1e9ae9c234ef76f93dcb3da691104d7bdb5e6b09  # lxd: Fix backup expiry check
      git cherry-pick 00d060491c9745d52afb31b7a86427106d7e4ae8  # lxd: Fix container restore with projects in Ceph
      git cherry-pick 07a2ab7215d62459be98180a4561b077a0023506  # test: Add container restore with projects
      git cherry-pick 3e07561990b233e816311bfe36c424db8ad19873  # doc: Add commit structure to contributing.md
      git cherry-pick 52e0b4d19e0fd7ffe38dbc86d55a9ec989547897  # lxd/cluster: Process upgrade notifications on all members
      git cherry-pick 5026fd2b0b49f31a8360e77137f81a7570d556f6  # lxd/cluster: Relax upgrade notification target
      git cherry-pick 3fc077345762837a430a84740a1fed0109d41dd4  # lxd/db: Export GetNodeID
      git cherry-pick 7010eb2f19a58fda9accb7e59ade1cc6f18ee320  # lxd/daemon: Skip heartbeat processing during startup
      git cherry-pick 3d217085e614f5c74ae043c8b55bee85b18f262c  # lxd/db: Backward compat code for Nodes()
      git cherry-pick ff87139a5e1c34ae08fc5ca02c41d26d19dc21e2  # lxd/daemon: Set gateway.Cluster during WaitUpgradeNotification
      git cherry-pick 9eda4e5446d23644cd1f4243f8108a4baf3bdda2  # lxd/device/nic: Pass --concurrent to ebtables
      git cherry-pick e29155d15f7036d332b031592f354c3d40fc9b61  # tests: Update ebtables calls
      git cherry-pick 13c4bf70fad13b970f82b5054a7729ad5d60ae28  # fix debugging.md rendering
      git cherry-pick 34dc242bee815daf687953da3cccf332534266db  # lxd/sys: Enforce directory permissions
      git cherry-pick c993b36cd3d682c2f55225c2c606e885d9d98769  # lxd/daemon: Bump NOFILE to max on startup
      git cherry-pick 525235e2609a8d0605b0c03709559771c8cffcb3  # lxd/cluster: Tweak joining error messages
      git cherry-pick 530dc5e54a2a2cad98c515f19cb04806f5b305eb  # lxd/cluster: Fix already-clustered test
      git cherry-pick 9b3a8998daa65d79d5aa261dfa3983856d48112b  # lxc/storage/volume: Fix panic when invalid snapshot rename argument supplied
      git cherry-pick df86dc05542417eb39d389db66548180b60ed150  # Makefile: Switch to tsenart/deadcode
      git cherry-pick de2bf1faa5c1186113ffb0c9064fa3e01afdf2b7  # lxd/include: Don't include missing file
      git cherry-pick c4e1f0f9a4a333c293447f7021c4f05c24fd590a  # Add step to trigger reread on loopback device when resizing BTRFS storage pool.
      git cherry-pick a649f33d16927c261bf5003d60db0a0c36e36b8b  # seccomp: protect against syscall supervision override
      git cherry-pick c0201c6cb97ba33713375b23ec56f3da79ccddf8  # client/lxd/storage/volumes: Fixes bug where migration errors were ignored
      git cherry-pick 316e1f0847b2ca3b7dd5774f5cd3929db39cd449  # lxc/storage/volume: Adds volume snapshot rename check for same parent volume
      git cherry-pick cc2aa806307cb700606d0786208d60ccea7cfd3f  # lxd/storage/quota: Fix bad typing
      git cherry-pick 6de77ab73b4f1243a224f50099aea8c9f88400be  # lxd/containers: Return disk usage when stopped
      git cherry-pick d76e3ff4c3d1ca0fa2d5d8618a7b5aede198f239  # lxc/config: Handle config/profile in examples
      git cherry-pick 473fb518b10a0e76ecedfcc1d71d9746dc81cb07  # client: Ignore unresolvable addresses
      git cherry-pick ce0941213ff55ff5381b6f98e0ac1848fb612c4b  # lxd/networks: Nicer error on misisng IPv6
      git cherry-pick 55677a60c25ce9e920dd02743d72a0d850484ad8  # lxd/device/nic/bridged: Allow MAC filtering on unmanaged bridges
      git cherry-pick a1614f24bbfd2e20e96fabfa0090b3e426c3e13f  # doc: fix link to security.md from README.md
      git cherry-pick 5fc3fcc0d769201c16985eba5755d2c1b7a366b0  # doc: use HTTPS links for criu and #lxcontainers (they have STS preload)
      git cherry-pick 46f59d366984f9593c9e2456402cf363e934d753  # lxd/devlxd: Fixes event socket close on client disconnect during wait
      git cherry-pick 7a337d9c02384fe1dd452ef9fb9e09095a879b47  # lxd/events/events: Adds context to event listener Wait() function
      git cherry-pick e8036c0e019bd577c65d37bf968f1258f8262ebb  # lxd/events: Fixes event socket close on client disconnect during wait
      git cherry-pick 48af12669ba2ee5b91819e099e143baad3221dc4  # lxd/migrate: Close control web socket on disconnect()
      git cherry-pick 48883732f6c0bec8a10f5143e7bac5d33a7de787  # lxd/migrate/storage/volunes: Always close web socket after migration
      git cherry-pick db5b8bbe74d2d1976fb817e3a097fcbe5b60e93d  # lxd/containers: Push MAAS entry after dev creation
      git cherry-pick bbcd863dd6d09310dd861fc597af1dbd9cdfff4b  # lxd/resources/storage: Improve cdrom handling
      git cherry-pick 7bb8667755b75c70ff78eea42d84b2355cc7d6ac  # Bring Go current in Travis
      git cherry-pick f7dc93dc26fe0072c22f37fb9485ca041f9c1392  # lxd/devices/nic: Handle recent ebtables
      git cherry-pick 2f09cb029f8dfce5bd45325ab3b9e549dd2aadc0  # lxd/container: Fix apply_quota
      git cherry-pick 6647f4185a08a6b3f24e6a9122183e6853ede980  # lxd/storage/lvm: Fix version parsing
      git cherry-pick d3e1893e2aa030d9c39c66defd9ff8e5421918c1  # lxc/init: Properly handle errors with --empty
      git cherry-pick 4aaaed70e2e81b1d8dfbaabf4186a576ba9a9c6c  # lxd/operations: Fix remote Wait
      git cherry-pick b7838e4c81eda1ecbaa23d9d24ee99061c1e832c  # lxc/query: Fix handling of ?project=
      git cherry-pick fbf60fe7adda57adb3b11619e1613eef03b64fe4  # lxd/db: Cover all combinations of instance filters
      git cherry-pick 93c12f57bbd2f0bc9c0175d22eff8d353304d992  # lxd/db: Re-generate DB code
      git cherry-pick 383c2ba86cb726f19d49637bfc312e2d2c87ca8f  # lxc/move: Fixes instance snapshot rename validation and crash
      git cherry-pick 03c42aaaabf173b7eea7a371a71795bcefea30f6  # lxd/operations: Support nil state
      git cherry-pick 1212321a20284c6bce1529dc2fd03191a08c1957  # lxd/device/nic: Fix race in vlan creation
      git cherry-pick aa63c8164029348466c479d3305e53c7e1697804  # lxd/device/nic: Fix handling of shared vlans
      git cherry-pick b218cc5fd0dbcaeda011606273de12cb4e7b2d98  # Makefile: Have default build static lxd-p2c
      git cherry-pick 1810dc02bf5e68e031200337132b07bd4852d048  # lxc/image: Truncate image files down to size
      git cherry-pick 9fa99bcb5d646dc8ee315e4f0642b1ca4e526273  # lxd/images: Truncate image files down to size
      git cherry-pick f64b60bb3fb2692b5c3210daa220e21bc397b661  # lxd/device/nic/ipvlan: removes unused optional "host_name" config field.
      git cherry-pick cc24425828bdaa51ca6b93eaeed5aa624e23c418  # shared/simplestreams: Support disk-kvm.img
      git cherry-pick 8d20dd379ef380b104da89746fdc836ce92a637f  # client/lxd: log websocket URL
      git cherry-pick 2ede91be708c8deb4e8601a006885c97cc4e488b  # client/lxd/events: Fixes /events connect bug
      git cherry-pick d082fd4b2ffd426c10a405370e6bb137b8c50ab3  # scripts/bash: Refresh list of commands
      git cherry-pick 2ec85e4f9b9ec95556ee050ee5be93f82d7faaad  # lxd/storage/zfs: Fix migration on zfs 0.6
      git cherry-pick 2b34663ebefc9c48170e25df0ceea3d00ddfc68a  # Use the node ID from the nodes ID table, not the raft one
      git cherry-pick ad3856d180836a3f10b7b0a7943953bd76b8adbc  # lxd/patches: Fix database roles
      git cherry-pick e7a0a723c0806a94e2d8dd81d4267c45ff248ab5  # lxd/networks: Merge clsuter config on create
      git cherry-pick 26098589643d83c72bb915a06da9603d913eab06  # lxd/networks: Forward config updates
      git cherry-pick 41bffa597fd03bd884ae8d4e8eec28bcf9eca285  # lxd/images: Fix image pruning with projects
      git cherry-pick 6a94f9138562102626680363fcc000c4b702e2d0  # lxd/storage/zfs: Fix pool import
      git cherry-pick c14d02abe3565fc41f82cd04920d3f5f6fee06be  # lxd/daemon: Don't block on RBAC

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Build the agent (special build tags)
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent github.com/lxc/lxd/lxd-agent

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/unsquashfs
      - bin/xdelta3

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libco
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xtables
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
