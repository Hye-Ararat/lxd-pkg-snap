name: lxd
base: core18
assumes:
  - snapd2.39
version: "4.0.4"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.


 Supported configuration options (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that can interact with LXD [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - lib/*/libpython2.7.so*
      - -lib/python2.7/sitecustomize.py
      - lib/*/ceph
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libcephfs*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/libibverbs.so*
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so
      - lib/*/libsnappy*

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.15
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  dqlite:
    after:
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: edk2-stable202008
    source-depth: 1
    plugin: nil
    build-packages:
      - acpica-tools
      - nasm
      - uuid-dev
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0003-boot-delay.patch"

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM2_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libmnl:
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.1.8
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.0
    source-depth: 1
    plugin: autotools
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  libusb:
    source: https://github.com/libusb/libusb
    source-type: git
    source-tag: v1.0.23
    source-depth: 1
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libusb*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
      - libpopt0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate
      - lib/*/libpopt*so*

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v0.9.7
    plugin: autotools
    configflags:
      - --with-json
    build-packages:
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.3.0
    source-depth: 1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: https://github.com/openvswitch/ovs
    source-type: git
    source-tag: v2.14.0
    source-depth: 1
    plugin: autotools
    stage-packages:
      - uuid-runtime
    organize:
      sbin/: bin/
      usr/bin/: bin/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  spice-protocol:
    source: https://gitlab.freedesktop.org/spice/spice-protocol
    source-type: git
    source-tag: v0.14.2
    source-depth: 1
    plugin: meson
    prime: []

  spice-server:
    after:
      - spice-protocol
    source: https://gitlab.freedesktop.org/spice/spice
    source-type: git
    source-tag: v0.14.3
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  qemu:
    after:
      - libseccomp
      - libusb
      - spice-protocol
      - spice-server
    source: IRRELEVANT
    source-type: git
    plugin: autotools
    configflags:
      - --disable-bochs
      - --disable-cloop
      - --disable-dmg
      - --disable-docs
      - --disable-guest-agent
      - --disable-parallels
      - --disable-qed
      - --disable-sheepdog
      - --disable-slirp
      - --disable-user
      - --disable-vdi
      - --disable-vnc
      - --disable-xen
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-libusb
      - --enable-usb-redir
      - --enable-linux-aio
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tcg
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --firmwarepath=/snap/lxd/current/share/qemu/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
      - libusbredirhost-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
      - libusbredirhost1
      - libusbredirparser1
    override-pull: |-
      set -ex
      git clone https://github.com/qemu/qemu . -b v5.1.0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 202d69a715a4b1824dcd7ec1683d027ed2bae6d3  # usb-host: workaround libusb bug
      git cherry-pick 4969e697c15ac536d5c0700381d5d026ef7f0588  # usb-host: restrict workaround to new libusb versions
      git cherry-pick ebf101955ce8f8d72fba103b5151115a4335de2c  # virtiofsd: avoid /proc/self/fd tempdir
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure
      sed -i "s#https://git.qemu.org/git#https://github.com/qemu#g" .gitmodules

      set +ex
      snapcraftctl build
    organize:
      libexec/: bin/
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - bin/virtiofsd*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - lib/*/libusbredir*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    source-depth: 1
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*

  sqlite:
    source: https://github.com/sqlite/sqlite
    source-type: git
    source-depth: 1
    source-tag: version-3.33.0
    plugin: autotools
    build-packages:
      - tcl
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.0.3
    source-depth: 1
    plugin: autotools
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ebtables
      - iptables
      - xtables-addons-common
    organize:
      usr/lib/*/xtables/*: lib/xtables/
      lib/ebtables/*: lib/
      sbin/: bin/
    prime:
      - bin/ebtables
      - etc/ethertypes
      - etc/protocols
      - lib/libebt*
      - lib/xtables/*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/lzma
      - bin/xz
      - lib/*/liblzma*so*
    override-build: |
      snapcraftctl build

      # Include the lzma symlink
      ln -s xz "${SNAPCRAFT_PART_INSTALL}/usr/bin/lzma"

  zfs-0-6:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    source-depth: 1
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.5
    source-depth: 1
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.5
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-api-docs
      - --disable-bash
      - --disable-doc
      - --disable-examples
      - --disable-memfd-rexec
      - --disable-tests
      - --disable-tools
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-4.0.6
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 8a0e1fd9d0c8866af5947ab2acee0c28e8827573  # meminfo: show host swap values when no limit or equal limits are set

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-4.0.4
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nogetgo
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxc-to-lxd
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick f9842458b7018fed6402a0fdaf92a7b147842829  # extract restart logic to new instance interface function of lxc and qemu
      git cherry-pick b7d33f245302e12faa976519e51e263b862a3130  # scripts/bash: Fix snap handling
      git cherry-pick 53f6d0c1c2dffcf606f3b3d2a1ff38cb3b39cd65  # extract common restart code to driver_common.go
      git cherry-pick 93c3e740c665c5df6d49fae84936d8d05a0a8838  # lxd/storage: Rename RunningSnapshotFreeze to RunningCopyFreeze
      git cherry-pick 1194dd672b3f06935be1e254d30436f78d4d3c00  # lxd/storage: Ensure source is frozen during copy
      git cherry-pick 2e4048e8c2c7febd50f54726e0c5e86da26f66a8  # lxd/instance/drivers: Write out updated backup.yaml after rename
      git cherry-pick 0d365ba4ba548e827bedb1f8408d403ff085f848  # lxd: Switch to new candid URL
      git cherry-pick 390c25c428f89752e30bb60b1533b2bb46c5da30  # lxd/storage/zfs: No need to remove dashes from UUID
      git cherry-pick ef41ec6a2fc22af4a115f61e55f422341701102b  # shared: Drop GroupId and UserId
      git cherry-pick 1cadd8d1aad9ce186b4385135d739dbb3d3e1471  # lxd: Port to os/user
      git cherry-pick f8a53fe0341f3d4379f6bc96a945eecd30e698c4  # lxd/daemon: Log protocol
      git cherry-pick aa2b3785e48914c8261bb2ae57947c9265dc7888  # lxd/daemon: Pass writer to Authenticate
      git cherry-pick 16677f08cfe18770b64de4fc46a9e74cbf18d6ae  # lxd/daemon: Record username on unix queries
      git cherry-pick 7fab1c0ed77527e53a42a57a449958442786b04b  # lxd/storage: Lock during the whole image replace
      git cherry-pick 9450467f3f3430c3cea8d466c07cccdfcf0784c1  # lxd/db/errors: Adds ErrNoClusterMember var used to indicate no cluster member has been found for a resource
      git cherry-pick bab5552de8eed541bd9498364f83adca3078db75  # lxd/db/storage/volumes: Modifies GetStorageVolumeNodeAddresses to detect volumes that are not bound to a single node
      git cherry-pick c1d427c1de342a3b70d8a556b2436b582d28ad72  # lxd/db/storage/volumes: Removes StorageVolumeIsAvailable
      git cherry-pick 98c14efb1a99e545aae9ce13e8b459b40664dffe  # lxd/response: Updates forwardedResponseIfVolumeIsRemote to accept poolName rather than poolID
      git cherry-pick 081276e738af19e1b9192ec09a038b81f10bf0c0  # lxd/storage/volumes: forwardedResponseIfVolumeIsRemote usage
      git cherry-pick 8d3fe5b056e4db97c86efcc0ec9522df5fcc5241  # lxd/storage/volumes/snapshot: forwardedResponseIfVolumeIsRemote usage
      git cherry-pick 1c40c7174956d90728a17e1a8c0f484d68fa962e  # lxd/project/project: Adds StorageVolumeProjectFromRecord function
      git cherry-pick 51b1223bb1bce0fe1646685a807d92294bf73aec  # lxd/db/instances: Renames and reworks instanceListExpanded to InstanceList
      git cherry-pick e2bdc4630d5a0313c53be3017e7bb071f38a0a22  # lxd/db/instances/export/test: Removes unused file
      git cherry-pick 4d8b04d51b7a8d5dedba340d3f0408fc3eba88db  # lxd/db/instances/test: Renames TestInstanceListExpanded to TestInstanceList
      git cherry-pick 48f9003de07db4fc386f6cc82a1833190bfedc4f  # lxd/patches: driver.VolumeTypeNameToDBType usage
      git cherry-pick 3c78065aa932e418760712a6e67ffcc43b071546  # lxd/profiles/utils: Comment on doProfileUpdateContainer for clarity
      git cherry-pick bae49b68a39212f4ccf5bec45ea8a219a35363b9  # lxd/response: cluster.ConnectIfVolumeIsRemote usage
      git cherry-pick 3ec4f42bb75587dc575fed3e9b82df67722a0e99  # lxd/storage/drivers/driver/types: Adds VolumeMultiNode field to Info
      git cherry-pick 907c8d677ca3bae6800187aaecf89674a9ba2e5f  # lxd/storage/drivers/driver/cephfs: Adds VolumeMultiNode=true to Info struct
      git cherry-pick e9a3f61cfa30ee7a41e504504b48c83d631672a7  # lxd/storage/utils: Renames VolumeTypeNameToType to VolumeTypeNameToDBType
      git cherry-pick fc0721fc39a46d0aa482591db1f8a5af7286bdc7  # lxd/storage/utils: Adds VolumeDBTypeToTypeName function
      git cherry-pick ebc4eadadd07f03184ce35cb91d495a11c1e5778  # lxd/storage/utils: Comment consistency
      git cherry-pick 11d26650340b22921a415587224c210f8d29a081  # lxd/storage/utils: Renames and reworks VolumeUsedByRunningInstancesWithProfilesGet to VolumeUsedByInstances
      git cherry-pick 738099d45c0e916092d7cc673a23f1b0087d90ae  # lxd/storage/utils: Adds VolumeUsedByExclusiveRemoteInstancesWithProfiles function
      git cherry-pick 0debb5b83eb873268653046fd8c8f49cef0c5583  # lxd/cluster/connect: Reworks ConnectIfVolumeIsRemote to use storagePools.VolumeUsedByExclusiveRemoteInstancesWithProfiles
      git cherry-pick 7cd5bd9d48cb676d800557b468538df065e556b3  # lxd/storage/volumes: storagePools.VolumeTypeNameToDBType usage
      git cherry-pick 00c57adef425d368d8da49a88722d91b539b490c  # lxd/storage/volumes: Updates storagePoolVolumeTypePost to use updated storagePools.VolumeUsedByInstances
      git cherry-pick b7e3eb29275aade98e7afb06a94ec36b685d9e15  # lxd/storage/backend/lxd: Updates RestoreCustomVolume with VolumeUsedByInstances
      git cherry-pick 65784c1be49c8ee17b83285d561148f0e7bc5ebe  # lxd/storage/utils: Removes VolumeUsedByInstancesGet function as not properly project compliant
      git cherry-pick e832a47de4403f721c6449f50dc9559fbfd0d2ff  # lxd/storage/volumes/utils: Replaces storagePools.VolumeUsedByInstancesGet usage with storagePools.VolumeUsedByInstances in storagePoolVolumeUsedByGet
      git cherry-pick 805488b92cce70bcc47711f0a083eca9ca7536b0  # lxd/device/disk: Replace storagePools.VolumeUsedByInstancesGet usage with storagePools.VolumeUsedByInstances in storagePoolVolumeAttachShift
      git cherry-pick 23f88b98d2e70a0404b046c702119c7abdd01dd0  # lxd/endpoints: Update error string in test
      git cherry-pick 9fd0f326eba5c4f8880250981e4d4be124f8f59f  # shared/simplestreams: Record variant
      git cherry-pick 339a89ef0ce3f82b135fcb7c5e9779c7d5df9949  # shared/simplestreams: Fix sorting of images
      git cherry-pick 36f1b9bdcb346b760b306661634b7e6223da2b7f  # lxd/project/project: Updates StorageVolumeProjectFromRecord to not return error (as never populated)
      git cherry-pick 6c801f23a24b00fd600d684807f4d89e05512312  # lxd/storage/utils: project.StorageVolumeProjectFromRecord usage
      git cherry-pick d3a9516f2ecf7100f75c4d43a69d70200f6e890f  # lxd/instance/qmp: Merge Go routines
      git cherry-pick 331844ad86fcb0fda66a5b2fd7986bcc93eb7a4e  # shared/cancel: Close chDone on failure
      git cherry-pick 19e2e947c8fea2b2432bbc42ec59e886c4ae3904  # lxd: Only close doneCh on success
      git cherry-pick df5b8578ffb65b369aa6c91fb980af5c9b67cb0d  # exec: make sure to only use TIOCGPTPEER if available
      git cherry-pick b308dc97e5ae418f139a9ae4da2974ff39dd04f4  # lxd/instance/drivers: Change memory backend
      git cherry-pick 71ee80ac61f7b23a9c1b5447911dbcaa76a987dd  # lxd/instance/drivers: Add virtio-fs config drive template
      git cherry-pick fbacbe1778a12fe343cd89f107addeb1b67e4405  # lxd/instance/drivers: Handle virtio-fs config drive
      git cherry-pick d48d68e590150d694df84450f7e085811c3d5d47  # lxd/instance/drivers: Add system unit file for virtio-fs config drive
      git cherry-pick fb0ce7dbb1aa3947c2d77b5c5c1387b421826c88  # lxd/device/disk: Support virtio-fs
      git cherry-pick 58c8c5597bc5b51931ec8e8a990008d9b007fa83  # lxd/device/disk: Handle alternative virtfs-proxy-helper location
      git cherry-pick dcd95dcf8bcca943da859e66b237b34b62c5f358  # lxd-agent: Prefer virtio-fs over 9p
      git cherry-pick 6c7c9f58825fc118413997ccf97de6f7498c3522  # lxd: Replace use of tx.GetProject with cluster.GetProject
      git cherry-pick 06a9c3b48b2787bf071d2ae2d008c277adfa51a5  # lxd/storage: VolumeTypeNameToDBType usage
      git cherry-pick fbc8815efc5166e7b4d2c41cd1210316e15faa83  # lxd/device/disk: storagePools.VolumeUsedByExclusiveRemoteInstancesWithProfiles usage
      git cherry-pick 1193690fcf182d0ae138c73aadba0c9a27161f0b  # lxd/storage/backend/lxd: Updates UpdateCustomVolume to check for online resize support when resizing
      git cherry-pick 70e90df230ad8fc672f276d4bedbbab2e0032a35  # lxd/db/storage/volumes: Adds workaround for old remote volume schema in GetStorageVolumeNodeAddresses
      git cherry-pick 450b95750e939632966c58c50640fb4c26dbdd0e  # lxd/instances: Fix virtiofsd for config drive
      git cherry-pick 6d26be2050bc23bf8c28bdfd94ce4828eb67a71f  # lxd/instance/drivers: Issue warning if virtiofsd is missing
      git cherry-pick 87dfdd4daac937e7bb58e73973bc5c06a02d3ec2  # lxd/device: Issue warning if virtiofsd is missing
      git cherry-pick d295e7a19391fbc270d466365c58e0649455c88d  # lxd/instance/drivers: Fix lxd-agent systemd unit conditions
      git cherry-pick 7b5a22da3e865efa36409fca2ab867749cfa4e1a  # lxd/storage: Only freeze if not frozen
      git cherry-pick 74990efc3cb663e4e47856186d6b06bf5f2b21eb  # lxd/device/sriov: Harden calls to ip link vf
      git cherry-pick b1ef6a87249b402fde43b9d7fd5f5d7eab1429d8  # lxd/storage/zfs: Add support for clone_copy rebase
      git cherry-pick 300d5b76bfefde5fbe085a0db748d046b7f11409  # lxd/qmp: Ensure checkbuffer is called
      git cherry-pick 01f0ca1c0e9e6abb9ed657b464db287570a2c9aa  # lxd/virtiofs: Fix handling of config drive

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/canonical/go-dqlite/internal/bindings/server.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Build the agent (special build tags)
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      cp scripts/bash/lxd-client ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xtables
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
