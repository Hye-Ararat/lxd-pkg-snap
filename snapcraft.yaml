name: lxd
base: core20
assumes:
  - snapd2.39
version: "4.21"
grade: stable
summary: LXD - container and VM manager
description: |-
 LXD is a system container and virtual machine manager.

 It offers a simple CLI and REST API to manage local or remote instances,
 uses an image based workflow and support for a variety of advanced features.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions. Existing
 integrations with many deployment and operation tools, makes it work
 just like a public cloud, except everything is under your control.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines when running Linux on Linux.

 LXD virtual machines are modern and secure, using UEFI and secure-boot
 by default and a great choice when a different kernel or operating
 system is needed.

 With clustering, up to 50 LXD servers can be easily joined and managed
 together with the same tools and APIs and without needing any external
 dependencies.


 Supported configuration options for the snap (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that can interact with LXD [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - ovn.builtin: Use snap-specific OVN configuration [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

 For system-wide configuration of the CLI, place your configuration in
 /var/snap/lxd/common/global-conf/ (config.yml and servercerts)

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots:
      - lxd
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-progs
    organize:
      sbin/: bin/
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/rbd
      - lib/*/ceph
      - lib/*/libatomic.so*
      - lib/*/libboost_iostreams.so*
      - lib/*/libboost_program_options.so*
      - lib/*/libboost_thread.so*
      - lib/*/libcephfs*
      - lib/*/libibverbs.so*
      - lib/*/librados.so*
      - lib/*/librbd.so*
      - lib/*/librdmacm.so*
      - lib/*/libsnappy.so*
      - lib/python3

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.16.1
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  dqlite:
    after:
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: nil
    build-packages:
      - on amd64:
        - acpica-tools
        - nasm
        - uuid-dev
      - on arm64:
        - acpica-tools
        - nasm
        - uuid-dev
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0
      set -ex
      git clone https://github.com/tianocore/edk2 . -b edk2-stable202111

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Fix submodules
      sed -i "s#https://git.cryptomilk.org/projects/cmocka#https://gitlab.com/cmocka/cmocka#g" .gitmodules
      git submodule update --init --recursive

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0003-boot-delay.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0004-gcc-errors.patch"

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM_ENABLE=TRUE \
            -DTPM_CONFIG_ENABLE=TRUE \
            -DTPM2_ENABLE=TRUE \
            -DTPM2_CONFIG_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libmnl:
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.2.1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*
    override-build: |
      snapcraftctl build

      sed -i "s# /lib/libmnl.la# ${SNAPCRAFT_STAGE}/lib/libmnl.la#g" "${SNAPCRAFT_PART_INSTALL}/lib/libnftnl.la"

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  libtpms:
    source: https://github.com/stefanberger/libtpms
    source-type: git
    source-tag: v0.9.1
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-tpm2
      - --with-openssl
    organize:
      usr/lib/: lib/
    prime:
      - lib/libtpms*so*

  libusb:
    source: https://github.com/libusb/libusb
    source-type: git
    source-tag: v1.0.24
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libusb*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v1.0.1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-json
    build-packages:
      - libedit-dev
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.7.0
    source-depth: 1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: https://github.com/openvswitch/ovs
    source-type: git
    source-tag: v2.16.2
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
    stage-packages:
      - uuid-runtime
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 7502849e9581a1dabe53eac51fd34521126c7b3f  # ovsdb-idl: Add APIs to query if a table and a column is present.

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/bin/: bin/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  ovn:
    after:
      - openvswitch
    source: https://github.com/ovn-org/ovn
    source-type: git
    source-tag: v21.09.1
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
      - --with-ovs-source=../../openvswitch/build/
    prime:
      - bin/ovn-nbctl

  spice-protocol:
    source: https://gitlab.freedesktop.org/spice/spice-protocol
    source-type: git
    source-tag: v0.14.3
    source-depth: 1
    plugin: meson
    prime: []

  spice-server:
    after:
      - spice-protocol
    source: https://gitlab.freedesktop.org/spice/spice
    source-type: git
    source-tag: v0.15.0
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  swtpm:
    after:
      - libseccomp
      - libtpms
    source: https://github.com/stefanberger/swtpm
    source-type: git
    source-tag: v0.7.0
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-seccomp
      - --with-openssl
      - --without-cuse
    build-packages:
      - expect
      - gawk
      - iproute2
      - libjson-glib-dev
      - python3-cryptography
      - python3-setuptools
      - socat
    stage-packages:
      - libjson-glib-1.0-0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      lib/swtpm/: lib/
    prime:
      - bin/swtpm
      - lib/libswtpm*so*
      - lib/*/libjson-glib-1.0.so*

  qemu:
    after:
      - libseccomp
      - libusb
      - spice-protocol
      - spice-server
    source: IRRELEVANT
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --disable-bochs
      - --disable-cloop
      - --disable-dmg
      - --disable-docs
      - --disable-guest-agent
      - --disable-parallels
      - --disable-qed
      - --disable-slirp
      - --disable-user
      - --disable-vdi
      - --disable-vnc
      - --disable-xen
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-libusb
      - --enable-usb-redir
      - --enable-linux-aio
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tcg
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --firmwarepath=/snap/lxd/current/share/qemu/
      - --localstatedir=/var/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
      - libusbredirhost-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
      - libusbredirhost1
      - libusbredirparser1
    override-pull: |-
      set -ex
      git clone https://gitlab.com/qemu/qemu . -b v6.2.0
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/local/bin/: bin/
      usr/local/lib/: lib/
      usr/local/libexec/: bin/
      usr/local/share/: share/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - bin/virtiofsd*
      - lib/*/libatomic.so*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - lib/*/libusbredir*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      export ARCH="$(basename $(readlink -f ${SNAPCRAFT_STAGE}/lib/*-linux-gnu*/))"
      export LD_LIBRARY_PATH="${SNAPCRAFT_STAGE}/lib:${SNAPCRAFT_STAGE}/lib/${ARCH}"

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
      - liblz4-1
    build-packages:
      - libuv1-dev
      - liblz4-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*
      - lib/*/libuv.so*

  sqlite:
    source: https://github.com/sqlite/sqlite
    source-type: git
    source-depth: 1
    source-tag: version-3.37.0
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - tcl
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.1.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-common
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - arptables
      - ebtables
    organize:
      usr/lib/ebtables/: lib/
      usr/sbin/: bin/
    prime:
      - bin/arptables-legacy
      - bin/ebtables-legacy
      - etc/ethertypes
      - etc/protocols
      - lib/libebtc.so.*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/lzma
      - bin/xz
      - lib/*/liblzma*so*
    override-build: |
      snapcraftctl build

      # Include the lzma symlink
      ln -s xz "${SNAPCRAFT_PART_INSTALL}/usr/bin/lzma"

  zfs-0-6:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.6
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-0:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.0.7
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-1:
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.1.2
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"


  zstd:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - zstd
    organize:
      usr/bin/: bin/
    prime:
      - bin/pzstd
      - bin/zstd

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.11
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --disable-api-docs
      - --disable-bash
      - --disable-doc
      - --disable-examples
      - --disable-memfd-rexec
      - --disable-tests
      - --disable-tools
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 429233cf0e942e6f8109311fa0237358330b229b  # criu: support restoring containers with pre-created veth devices
      git cherry-pick 1505f0780573f28d33f540884ba420293c1144a6  # conf: make it more obvious how auto-mount flags are defined
      git cherry-pick 1ad1cab805b5a97cff9d0c5612a1eacbb187f091  # doc: add loglevels to ja and ko common options
      git cherry-pick 49fab27fc58f12d49c720bf83412d2092cf0e724  # doc: Add lxc.sched.core to Japanese lxc.container.conf(5)
      git cherry-pick d40b0deb45e35ba6f1996a0a48c265271b30ce6e  # doc: fix typo in English lxc.container.conf(5)
      git cherry-pick e328a988e038724450dd64d8510dd16e5fda8ea5  # conf: handle kernels without or not using SMT
      git cherry-pick 4d3aad49d6e6017ca53591339c9fe916836b87c7  # AUTHORS: Update to point to git history
      git cherry-pick 48728e9880f50c4e354eadb7b9836b63276e3eda  # conf: add cgroup2, cgroup2:ro, cgroup2:force, cgroup2:ro:force options
      git cherry-pick bc51048b7918b5c28ef104811e9f21d80e331f84  # confile: don't use path_simplify() on lxc.{execute,init}.cmd
      git cherry-pick d04eb166c64ca8185119d502bf84a66a04dc3fd9  # build: add static libcap to output
      git cherry-pick 9219277cc6627654adf03628b84d15eb0a545138  # build: add io-uring-event-loop option
      git cherry-pick 1a8895855e9f3d7afded64fca74f4d9fc7974984  # Replace 'which' with 'command -v'
      git cherry-pick f69e6b4d3f7d614de190e72d610705272ee36909  # mainloop: make sure that descr->ring is allocated
      git cherry-pick 71743e8111738bd70b0b126f6500b95c0db2e806  # start: check event loop type before closing fd
      git cherry-pick fdfb4a13dec5d23f0c87b64064b092dee5583531  # Replace 'which' with 'command -v' in tests too
      git cherry-pick 1ec5939b4aae696f1109875a6ff57e85bda37b25  # Replace deprecated backticks with $() construct
      git cherry-pick cf931928f1998fc8404376d215aa151d574d95ca  # Replace last occurence of 'which' with 'command -v'
      git cherry-pick 1a102b310fc20b7c814c92e78c3664eb75186826  # mainloop: make ifdefs easier to follow
      git cherry-pick 78baec37d69969d4b4275239040c6ee5719cab9e  # build: improve liburing support detection
      git cherry-pick 4915c91128c8609805c06f438cdb8f3502dea044  # process_utils: add signal_name() helper
      git cherry-pick f24c234ee901e79029ecc111693d8ac1e9a95995  # start: log signal name and number
      git cherry-pick c3637943195146cab00b4e6b74e5978a089cd4a4  # build: move _FILE_OFFSET_BITS to common option
      git cherry-pick 1b74e01add8e8ca0a887d25fd74d330f11ce8235  # tests: include config.h
      git cherry-pick 334cf7beba5a27e27c958c3d71d6f5cf421367d7  # conf: apply /proc/sys and /proc/<pid>/ parameters
      git cherry-pick a10ff341883a3d2079253288734b2505819a5e51  # conf: improve logging setting sysctl and /proc/<pid>/ parameters
      git cherry-pick 6f580343e5d82544043b8cce5c7541acba2837d0  # test: improve logging helpers
      git cherry-pick d8027e49c334aa5fa14e11cf61c73ee477badd52  # tests: add lxc.sysctls.* test
      git cherry-pick 93be4e51210714922dff2829d2e00d55a83dceea  # tests: add lxc.proc.* test
      git cherry-pick a616a311a328bab86dd6022d41437db3554bab46  # build: refuse to compile with unsupported liburing version

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-4.0.11
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-4.21
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    build-snaps:
      - go
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nil
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 6b197ccb4c38c02dfbb716c4a9770c6836b5a392  # tests: Bump pg_num to 16
      git cherry-pick c5ab68dc6e97299c91a14573c864600a8c77eea6  # lxd/events/events: Don't mention node in user facing error
      git cherry-pick 708664347ac5b639181327e97855467559bb4314  # lxd/events/event: Error quoting
      git cherry-pick d1b9c8ffb0494eb1932f7dde4f9458ea75bc30ce  # lxd/cluster/events: Adds EventListenerWait to allow waiting for a event listener to connect
      git cherry-pick 3a744951f1b86b86662d29cbc29df211d3ecd901  # lxd/cluster/connect: Switch Connect to use EventListenerWait
      git cherry-pick 5c9a67454532a8966df9f51da9c8370a4856b275  # lxd/cluster/heartbeat: Removes deprecated Raft field from heartbeat
      git cherry-pick 9bb889fdda8350874fd3e7100179bc6c5828f1c0  # test: Add 1s between running non-interactive exec and checking for exit status in operation
      git cherry-pick 19ef38b3d9beb725fa165fb197dd519be1834d56  # lxd/cluster/membership: Move notifyNodesUpdate call out of transaction in Join
      git cherry-pick 951e58d212f8f6ed64875a4e1d4f6dd0e099877e  # lxc/list: Better handle --all-projects
      git cherry-pick 4eeadf5029b990237a2b6400952fdc48742b7497  # doc: Fixed incorrect type of ceph.rbd.clone_copy.
      git cherry-pick 68c98f1cbfeee2fcaaa2128a456e355f5b6cd4fa  # lxd/cluster: Update not clustered error
      git cherry-pick 1fc16a44320c193f12ea99840817ca413603fa4d  # lxd/db: Update comments
      git cherry-pick dc995e7e70501aea98badb2cb37e465189ddde30  # lxd/cluster: Handle no available migration target
      git cherry-pick 4d535014c0c9bf2a773168b8bad873ca9a14db53  # fuidshift: Remove accidental binary build
      git cherry-pick 9ff7f8ba681b85c133fc48420e2395d9e21afd45  # lxd/device/nic/routed: Enable IP forwarding on veth host_name interface
      git cherry-pick 9d3d43b08031bd9f9014f3accd480e905b0cbe9a  # test: Restores old routed NIC IPv4 forwarding behaviour
      git cherry-pick 50aefa97fa90820bd64510daa41f105129626887  # lxd/cluster/upgrade: Don't panic in UpgradeMembersWithoutRole in raft ID not found
      git cherry-pick 0d9ab20689f751959c14213c99e521ee59898cd7  # lxd/cluster/upgrade: Comment clean up in UpgradeMembersWithoutRole
      git cherry-pick 847ae972bfb664160a1b5b2a35e69f2df37e87fe  # lxd/cluster/upgrade: Removes empty line in UpgradeMembersWithoutRole
      git cherry-pick 9db2b5c5ba99afbd40cbcb821593391824d53e3b  # lxd/cluster/upgrade: Improve variable naming in UpgradeMembersWithoutRole
      git cherry-pick adbcc63b789bca1d905f5c2634aa02feb837e4c1  # lxd/cluster/upgrade: Error wrapping and dont use node term in user facing errors
      git cherry-pick e694a996c733605ed4d527dd0586adbe52716e03  # lxd/cluster/upgrade: Adds additional logging to UpgradeMembersWithoutRole
      git cherry-pick 9ac74919e0b3afa422c0bcfe5607d252b963cdfb  # gitignore: Ignore potential binaries
      git cherry-pick 9c5821034d874007d097da2a64481937fb8dbc62  # lxd/network/driver/bridge: Adds UsesDNSMasq function
      git cherry-pick c0b72616718684c8d580cad8acc351e0176a09b8  # lxd/network/driver/bridge: Improve comments
      git cherry-pick f0a8d297b9a4caa5a4a570d341613d0629dfc11c  # lxd/device/nic/bridged: Don't depend on dnsmasq pid file existence to write static allocation file
      git cherry-pick 574a1204f546394928636a2d9669978cef6b3b29  # lxd/device/nic/bridged: Removes duplicated pid check when killing dnsmasq
      git cherry-pick 75d431748275d8a701ab05ecf46abc2ec089c50b  # lxc/utils: Make byName sort all columns
      git cherry-pick cd117d7074e1f636d3748c89761bb159cfb2cb46  # lxd/db/node: Fix handling of groups
      git cherry-pick f4d77aeb3b634140778ffcdb9ff9f7364358f62d  # lxd/db/node: Support limiting to set of groups
      git cherry-pick c264fca82233465838d19cb7e0eaacf306486c4e  # lxd: Update GetNodeWithLeastInstances usage
      git cherry-pick c62463e44763f6f849e21a8e1f1635cdbd1407d8  # lxd/instances: Rework cluster group handling
      git cherry-pick 02bc9cbe9f1ae1ea969f139ea1b2dfa8c18c3ab7  # tests: Fix clustering_groups tests
      git cherry-pick a45ddc92da8b0013fef0f6f6bb66b2735b9baa10  # lxd/api/cluster: Only take clusterMembershipMutex on leader
      git cherry-pick 7993fb21347397ca20ff7a92da69dbda80955adc  # doc: use customized Furo theme
      git cherry-pick 3d16e9e931abe0842bef56b8e71700a5d0cc7fb3  # doc: customize footer
      git cherry-pick 303751921ad5eacc0497e78c812e3eeec3b62317  # doc: add a header
      git cherry-pick ca14fcc676e169efe67a2c35cb246fd86940a68d  # doc: remove Vanilla theme from Makefile
      git cherry-pick c2a1e2a1bd85983000ea984fed96b7cc4cfa7526  # lxd/endpoints: Make socketUnixListen return a UnixListener
      git cherry-pick ea40b11943e412e28d2c80de373509be885afd46  # lxd/db/node: nodeIsOffline should always use UTC
      git cherry-pick 7be14f22f2b1c3016b68368a5f04cc93e4ee4788  # lxd/api/cluster: Improve logging
      git cherry-pick 50caff703c42c05b3d7a35a63fb79cd433967023  # lxd/cluster/heartbeat: Adds NewAPIHearbeat function
      git cherry-pick 9f084d07207cec7935ce237b1899077421a26142  # lxd/cluster/heartbeat: Adds HearbeatCancelFunc
      git cherry-pick 35fd2c3b34d6e623c94c0ea00462377cc236bc78  # lxd/cluster/heartbeat: Export HeartbeatRestart
      git cherry-pick d65a1bb5ab4f42d3c28e21e3a5a8a1abe63c546c  # lxd/cluster/membership: Set tx.SetNodeHeartbeat in Join
      git cherry-pick 39350280771799eb0d4431872510589e5ce092e3  # lxd/cluster/membership: Renames notifyNodesUpdate to NotifyHeartbeat
      git cherry-pick 2e63e7f81f30296e297251176932a10c4bdcc8c6  # lxd/cluster/gateway: Moves heartbeatLock to other heartbeat related variables
      git cherry-pick 1f3742a051e0ac552afdbdccd76cf910cacc54cd  # lxd/daemon: Use contextual logging with local address in NodeRefreshTask
      git cherry-pick ddcb587db96c20922e5eccd2b2505eb976b416aa  # lxd/daemon: Adds heartbeatHandler function
      git cherry-pick 7960c27042ba0832ff99d759b97cbea84c262a64  # lxd/daemon: Update nodeRefreshTask to only perform role changes if called from leader heartbeat send
      git cherry-pick ac8dd32154ea3e98e0e64ebc8ead754a68737802  # lxd/cluster/gateway: Pass HeartbeatHandler into HandlerFuncs
      git cherry-pick 13276a3f4a0f02a7e3a06e4fd8ab9301391de9a0  # lxd/cluster/gateway: Error message and log improvements
      git cherry-pick 8ba75e2b67c92d0f97d6ba0c3cf5a4e74aa22531  # lxd/api: d.gateway.HandlerFuncs usage
      git cherry-pick 4977ec40dfa1654b401f553dac4ce6901fc4d227  # lxd/cluster/heartbeat: Initialise unavailableMembers as empty slice in heartbeat
      git cherry-pick 24e6e63343f0dda59bf86a5ca16f9223f159350e  # lxd/cluster/heartbeat: Updates HeartbeatTask to skip starting new heartbeat if already running
      git cherry-pick 14c8db24fadd70cfc1bf3e34a9f1bab23d3661b5  # lxd/device/nic/routed: Don't setup auto gateway if IP family not in use
      git cherry-pick 996e06f6c0a84b3b908fb205e09c43b72175f23f  # test: Adds test for single family routed NIC operation
      git cherry-pick 19f5da4c125a71e423522fddf079f97621985934  # lxd/db: Updates GetInstanceNamesByNodeAddress to also return project name.
      git cherry-pick 8a7d7e44a53f0e47c6dbdd401fe268ff48d87105  # lxd: Prevents overwriting instances with same name but different project.
      git cherry-pick b2a6f1093c0e3bba3f9d367a156caab7dbbce8c1  # test: Adds tests for passing through unix socket with disk device
      git cherry-pick 328a4e015935a66701b2627489cc23b3d2a7ec3b  # lxd/device/disk: Open source with O_PATH to support directories and unix sockets
      git cherry-pick 92b1190bbee34895b7337980c4192ffde669383d  # lxd/events/events: Renames noForward to localOnly
      git cherry-pick 064ca3fee27d7133972148c8da1dcd1f8460b0b0  # lxd/cluster/membership: Call EventsUpdateListeners locally from NotifyHeartbeat
      git cherry-pick d00ab1b601fcd663543af1e02570a36f7b2fb7b6  # lxd/cluster/heartbeat: Improve logging
      git cherry-pick b1ca1caf613d25150bd33bd27534bd0867516da1  # lxd: Uses api.NewURL and sets project when querying other nodes.
      git cherry-pick e3605110ecbf59ea5e741166e6328e380c7c8dad  # doc: reuse content from the repo README in the doc index
      git cherry-pick 0e369f0278c76bd86f18d28d663357b73b184854  # doc: move relevant files out of .github folder
      git cherry-pick 67a83cf5ee397bf98f171c7a834c4c59121b54c1  # lxd/bgp: Port to v3 of gobgp
      git cherry-pick 1fa5da0b48d8df2b552bf9064e9364260d2d1a12  # gomod: Update dependencies
      git cherry-pick 8af5b7609a67cd83c2629d27a6333ea7c9ff66e5  # doc: fix link in README
      git cherry-pick 781f3b67b2378410128e6739a4cc3cf57ee2e227  # lxd/clustert/heartbeat: Logging improvements in Send
      git cherry-pick 28fdc468b34a934ffa5b020415154b61cb575d0c  # lxd/cluster/info: Logging improvement in loadInfo
      git cherry-pick daf63d1f1666b10ae3a6abafe49123a0eb468c00  # lxd/cluster/membership: Logging improvement
      git cherry-pick 3a4417ad26977b10870f46ad07949fe8c130ad73  # lxd/api/cluster: No need to call cluster.EventsUpdateListeners in internalClusterPostRebalance
      git cherry-pick 62dec024088d37175fb2273cbf1f398f8dc918a3  # test: Add short sleep for clustering rebalance to allow raft nodes to settle after join
      git cherry-pick 4866b6c00266edb7072eef9e730aa7d3758ec608  # lxd/migrate: Change allConnected channel in migrationSourceWs to be struct{}
      git cherry-pick 381dbcff997d57367726745ddadf4922ea63fcf1  # lxd/migrate: Change allConnected channel in migrationSink to be struct{}
      git cherry-pick 00f28ad53768f8ce75878002dc5e1b5221c45eb1  # lxd/util/net: Adds SetTCPTimeouts and ExtractTCPConn functions
      git cherry-pick 0ee1428792d9c4d4fedb76e96947a6b3efea80fe  # lxd/cluster/gateway: Updates dqliteProxy to use util.ExtractTCPConn and util.SetTCPTimeouts
      git cherry-pick 89a6ec69def2f8fefeb3c87fca8a576d9c2df8a6  # lxd/migrate: Updates migrationSourceWs to use util.ExtractTCPConn and util.SetTCPTimeouts
      git cherry-pick c534d69fd496a8e4f011c7da51d169df1ab125e9  # lxd/migrate/instance: Defers a call to disconnect in migrationSourceWs Do
      git cherry-pick 29dbb6b371ca1f093d06dd8401b56783a8de5181  # lxd/daemon: Introduce daemonStorageSplitVolume
      git cherry-pick bef6d7b96a341787c3407a71523c6c1a3c722cb5  # lxd/images: Don't cleanup unknown images from shared volume
      git cherry-pick d715e85702b86820b2e4e9f105a5e018041ed27b  # lxd: Checks that the host node is clustered before editing.
      git cherry-pick da1141dc22e9bce5dc8969bbf41aa574645f6394  # lxd/cluster/heartbeat: Cancel APIHeartbeat Send during spread sleep if context is cancelled
      git cherry-pick c9ad351a17518cfd9a2f35696e238be9c981f3dc  # lxd/cluster/heartbeat: Detect aborted heartbeat round quicker
      git cherry-pick 4b0c15846c676e8d5b8e4d9a9265adebf3f2ce9c  # lxd/cluster/heartbeat: Move defer setup to after lock is released
      git cherry-pick 3bd587677a49a5aed0d678f82b84c7d4745e3049  # lxd/cluster/heartbeat: Move clustered check before locking and context setup
      git cherry-pick de06be5709816b2d654f71d8298dc8b280cbd852  # lxd/cluster/events: Rework listener connect notification to support multiple addresses
      git cherry-pick cbc21bf4ff627556254fd60ceeaba07a1d762481  # lxd/cluster/connect: EventListenerWait usage in Connect
      git cherry-pick a39969d3433004d8cc3b5970d7e538a660a37a51  # client/events: Get lock before checking e.disconnected in Disconnect
      git cherry-pick c70e607799f0419cd564f141af62d73230ec5ff1  # client/lxd: Adds eventConn to store events websocket connection
      git cherry-pick d41f299e7a2215a09c5ef2c68e139f7c5f65909d  # client/lxd/events: Store events websocket connection in getEvents
      git cherry-pick 231f5abc81d1a5337100ab32aeeb5da834ccb312  # lxd/cluster/membership: Update NotifyHeartbeat to have access to gateway so it can cancel ongoing heartbeat
      git cherry-pick 130c928255699cc2d038dd6883a85cdabb1f1b5c  # lxd/cluster/events: Close client connection on events get failure in eventsConnect
      git cherry-pick b3ff92ee38c6feee9fd0991e80534e128f0257ff  # lxd/cluster/events: Use looked up listener rather than doing another map retrieval
      git cherry-pick 68e379119234e521f38d81382988a40c66ee3d01  # client/events: Replace chActive and disconnected with context
      git cherry-pick 110e862bbaa945ab56310f61c39ca48008d9cef3  # lxd/events/events: Improve logging in Listener
      git cherry-pick 17110f4170644bd7679a8a486fce5e23bfa0841e  # lxd/events: Removes duplicate event connection logging
      git cherry-pick 4af04bb83f18febde5c19f15a89d450d6b3b1e5a  # lxd-agent/events: Removes unnecessary logging in eventsSocket
      git cherry-pick 90d229c7655a48ca279aa3b7a91962930a137928  # lxd/cluster/events: Clarify event connections are clients to another server
      git cherry-pick 0347b0621a0902c1572755b9766b268621b69a00  # lxd/cluster/recover: Return separate error if no raft role found
      git cherry-pick 4c7bcc1773f2a6c96f6e3c2d10c7c570842d8715  # lxd: Fix progress indicator for 'lxc export'
      git cherry-pick 2a8d4cc07a6f7f9072966ffbc41dd613901bae6e  # gomod: Update dependencies
      git cherry-pick 4d313bc15e16acaf1bf700101b1fe54728630b8e  # shared/network: Differentiate websocket network errors
      git cherry-pick d792241fca0aacb47360b33ada7c9094c33bc847  # lxd/instance/exec: Simplify websocket error handling
      git cherry-pick 9e7ab44242f0bbae1ab9b947e2df2eda8227f6b2  # lxd/instance/drivers/driver/qemu/cmd: Don't attempt to send signal to lxd-agent exec process if finished
      git cherry-pick c521f24b1b0b270149bab5a76267b989691b7398  # lxd/instance/drivers/driver/qemu/cmd: Run cleanup function after command has finished in Wait
      git cherry-pick 2216896b8aa77425a28114d6aba5afa2b8754523  # lxd/instance/exec: Close attachedChildIsDead channel first in finisher
      git cherry-pick 4ac8bdcbb9ff286eff9f299c48c2229b47bd262f  # lxd/instance/exec: Only attempt to kill process if still running when a control connection error occurs
      git cherry-pick 3bd9bce434ff6b0a172f6ed3ce4494043304c095  # lxd-agent/exec: Close attachedChildIsDead channel first in finisher
      git cherry-pick 6908066e8b790b988bf0f36d115319ab2c87e462  # lxd-agent/exec:  Only attempt to kill process if still running when a control connection error occurs

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"
      export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"

      # Setup the GOPATH
      rm -Rf "${GOPATH}"
      mkdir -p "${GOPATH}/src/github.com/lxc"
      ln -s "$(pwd)" "${GOPATH}/src/github.com/lxc/lxd"

      # Download the dependencies
      go get -d -v ./...

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc" github.com/lxc/lxd/lxc
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc-to-lxd" github.com/lxc/lxd/lxc-to-lxd
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd" -tags=libsqlite3 github.com/lxc/lxd/lxd
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-benchmark" github.com/lxc/lxd/lxd-benchmark

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      cp scripts/bash/lxd-client ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - lib/*/libidn.so.*

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    build-snaps:
      - go
    plugin: nil
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"

      # Download the dependencies
      go get -d -v ./...

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-migrate" -tags=libsqlite3 ./

      # Install bridge script
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    build-snaps:
      - go
    plugin: nil
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/snap-query" snap-query.go
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - ovn
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8 zfs-2.0 zfs-2.1; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
      wrappers/editor: bin/
      wrappers/remote-viewer: bin/
