name: lxd
base: core
version: "4.0.0"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - daemon.preseed: A YAML configuration to feed `lxd init` on initial start
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - lib/*/libpython2.7.so*
      - -lib/python2.7/sitecustomize.py
      - lib/*/ceph
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libcephfs*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/libibverbs.so*
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so
      - lib/*/libsnappy*

  dqlite:
    after:
      - libco
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    after:
      - qemu
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: edk2-stable202002
    plugin: nil
    build-packages:
      - acpica-tools
      - nasm
      - uuid-dev
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM2_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libco:
    source: https://github.com/canonical/libco
    source-type: git
    plugin: make
    organize:
      usr/lib/: lib/
    prime:
      - lib/libco*so*

  libmnl:
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.1.5
    plugin: autotools
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*

  libseccomp:
    source: https://github.com/seccomp/libseccomp
    source-type: git
    plugin: autotools
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  logrotate:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
      - libpopt0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate
      - lib/*/libpopt*so*

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v0.9.3
    plugin: autotools
    configflags:
      - --with-json
    build-packages:
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.0.6
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      # Supposedly supports x86_64, aarch64 and ppc64le but only x86_64 builds
      [ "$(uname -m)" != "x86_64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  qemu:
    after:
      - libseccomp
    source: https://git.qemu.org/git/qemu.git
    source-type: git
    source-tag: v4.2.0
    plugin: autotools
    configflags:
      - --disable-docs
      - --disable-slirp
      - --disable-user
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-linux-aio
      - --enable-pie
      - --enable-seccomp
      - --enable-system
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --enable-vnc
      - --firmwarepath=/snap/lxd/current/share/qemu/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libcap-ng-dev
      - libglib2.0-dev
      - libpixman-1-dev
      - libaio-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libpixman-1-0
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - lib/*/libmagic*so*
      - lib/*/libpixman*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    source: https://github.com/canonical/raft
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*

  sqlite:
    source: https://github.com/canonical/sqlite
    source-type: git
    source-tag: version-3.30.1+replication4
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tclsh
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v0.8
    plugin: autotools
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ebtables
      - iptables
      - xtables-addons-common
    organize:
      usr/lib/*/xtables/*: lib/xtables/
      lib/ebtables/*: lib/
      sbin/: bin/
    prime:
      - bin/ebtables
      - etc/ethertypes
      - etc/protocols
      - lib/libebt*
      - lib/xtables/*

  xz:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/xz
      - lib/*/liblzma*so*

  zfs-0-6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.13
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.8.3
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.1
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --disable-memfd-rexec
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 850c0659ce5a172b484c535b9d49ceae5bdc8a79  # start: ensure all file descriptors are closed during exec
      git cherry-pick 468797a31fed887e35ea4fba92282ee8f8a7ac86  # syscall_numbers: handle riscv
      git cherry-pick e8bb9e4f940b18eea080df2954be244111ca2a40  # lxc_user_nic: simplify group retrieval
      git cherry-pick 571694003ecacaf0a5f84d9efed49a0d15599573  # lxc_user_nic: continue when we failed to find a group
      git cherry-pick eb8d7c09f797e176c1b89b2a9e093041693ba810  # cgroups: whitespace fixes
      git cherry-pick c2e3e9a4b427f8e0e462ed8b6236c318ec238ec7  # seccomp: newer kernels require the buffer to be zeroed
      git cherry-pick b2722ecbc4c83bf1ee143b9610e38c2aa8f179cf  # network: Make it possible to set the mode of IPVLAN to L2
      git cherry-pick 53cffd7537ba0e1631cd6499c3ebe4cf711c2f55  # src/lxc/network: ipvlan comment and code style tweak
      git cherry-pick 3b7f02fa67f3183bc8db4fdd051f5388d3f03685  # conf: tweak get_minimal_idmap()
      git cherry-pick 37fcb9bc3e080c73e16f94231ff373f82928b70d  # conf: use macros all around in lxc_map_ids()
      git cherry-pick 2a4fed96b0cbde95bd0453c6988bdd4534a1f30b  # conf: move_ptr() in all cases in mapped_hostid_add()

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-4.0.2
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 233818fd4487a73ebdf202ca959307d627d443a6  # Fix #387. Include `:` in matching of lines in /proc/meminfo

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.13
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-4.0.0
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    stage-packages:
      - acl
      - dnsmasq-base
      - gdisk
      - netbase
      - pigz
      - rsync
      - squashfs-tools
      - xdelta3
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/canonical/go-dqlite/internal/bindings/server.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 5cfe923ada3ab4f9622b64a074f3a8453ca0d90e  # doc/instances: Fix escaping
      git cherry-pick 512923873772c898f6694001573c49f124a6184e  # lxc/network: Updates network detach checks to use bridged network property
      git cherry-pick 1715a92070cfcdd246786c69bce2ea84c8ca8473  # lxd/network/network/utils: Updates network setting detection in IsInUse
      git cherry-pick 8444a05bf1b260d8268c17483f9d52cf9b6e0f99  # lxd/instance/drivers/driver/qemu: Adds host_name info to RenderState when lxd-agent is running
      git cherry-pick 8134401b3d4a1c79359e4fffca2cbe8e7e66c39e  # lxd/networks: Fix clustered configs
      git cherry-pick d272d542c29ae182cdef2a986a39079b34695733  # shared/api: Move NUMANode to thread
      git cherry-pick 6a57923cd49991ee2bf606fc1c2b9c752fc675c8  # lxd/resources: Set NUMANode on a per-thread basis
      git cherry-pick f5e02d90812b10e7f45f6df6b39533935c12642a  # lxc/info: Update for NUMANode on thread
      git cherry-pick 45cc03ea6c0da862da68aae0a66d4442de5009d5  # i18n: Update translation templates
      git cherry-pick ae6a75d3e5dcb0635514a16628a47ae9dc5b32a9  # api: resources_cpu_threads_numa
      git cherry-pick c2af847ab0de385e484fbf0ddf8b97be9d452f87  # api: resources_cpu_core_die
      git cherry-pick ed6c20896c4b7b5322c366570d89e78669a55713  # lxd/resources: Parse and report die_id
      git cherry-pick b57df6e064414670be7c1a8c1eabc0792e7ad307  # lxd/storage/drivers/driver/lvm/volumes: Mount xfs snapshot with nouuid option
      git cherry-pick 469c8e2e8ac7aa58240b8403597993edf9d306ec  # lxd/storage/drivers/driver/ceph/volumes: Adds mounting logging
      git cherry-pick 3abf2905b3d5caa08a50011bfe1258a07946779c  # lxd/instance/drivers/driver/lxc: Updates Render() to accept options arguments
      git cherry-pick c87e5562819d15637e42e4344aa4b9d04bb7bef6  # lxd/instance/drivers/driver/qemu: Updates Render() to accept options arguments
      git cherry-pick e2461801dd32fe7d740142f113c146e012d12e97  # lxd/instance/instance/interface: Updates Render() to accept options arguments
      git cherry-pick 09789a1d56144f8cf8dec20724cbef7fe8710b33  # lxd/storage/drivers/utils: Zeros btrfs transaction log in regenerateFilesystemBTRFSUUID
      git cherry-pick d334502e7ed019a7c622c9bdfc0f9ab082220f45  # lxd/storage/utils: Removes unused functions and constants
      git cherry-pick bc095baf66390bc228c0b42c6b65067e7a289066  # lxd/storage/utils: Adds RenderSnapshotUsage function
      git cherry-pick a3a800b3bd29dc76cbb47e545ddaeb65a956b388  # lxd/instance/snapshot: Adds storagePools.RenderSnapshotUsage to Render() in containerSnapshotsGet and snapshotGet
      git cherry-pick 4038e1c5a2f0ce2515e0337196f064cfad3c288f  # lxd/instance/drivers/driver/lxc: Use storagePools.RenderSnapshotUsage in RenderFull()
      git cherry-pick 30eaf0662e5749df4867ba0fac7614e72ac8c6c3  # lxd/instance/drivers/driver/qemu: Use storagePools.RenderSnapshotUsage in RenderFull()
      git cherry-pick 22ce6bf50974c3bd330dc10bd8b5728f2e67b356  # lxd/instance/instance/utils: Removes unused WriteBackupFile
      git cherry-pick a96521882fe9a715880c65070e6ec6676649f1e2  # lxd/storage/drivers/utils: Changes regenerateFilesystemUUID to use expanded arg definitions
      git cherry-pick 455a9c20ebbb209861bd4e6e8365d76648f202b5  # lxd/storage/drivers/driver/ceph/utils: Changes generateUUID to not map device
      git cherry-pick 4ba1c572b4a92d948765f9275a4ff5b52f41fa0b  # lxd/storage/drivers/driver/ceph/volumes: d.generateUUID updated signature usage
      git cherry-pick 46f882d0a47264c68e9e04ab72120a94661e4296  # lxd/storage/drivers/driver/ceph/volumes: Adds BTRFS UUID regeneration to MountVolumeSnapshot
      git cherry-pick 0ef5809c1e2de63cbfb3aea16565e188fd4b6eb9  # lxd/storage/drivers/driver/zfs/volumes: Comment clarification
      git cherry-pick 933d2f64aeb731ef2b2413c90269e08d57036efc  # lxd/storage/drivers/volume: Adds support for setting custom mount path
      git cherry-pick 9307542260d8fb2d616cdc0cec4513f92dd65c39  # lxd/storage/drivers/driver/btrfs/volumes: Create temporary snapshot in BackupVolume()
      git cherry-pick 155172d876f5e7d1bd4e359dbed78f1f3bf83dfc  # lxd/storage/drivers/driver/btrfs/volumes: Renames container vars to instance
      git cherry-pick 87ee11e5a113c5f3346603412573b33469a9bce2  # lxd/storage/drivers/driver/btrfs/volumes: Consistent quoting of error message variables
      git cherry-pick 6856816d57a4f202dba1b3533c734856b1f40741  # lxd/instance/drivers: Removes storagePools.RenderSnapshotUsage from RenderFull()
      git cherry-pick 7ceef4cd878d38569b83f7a0d9359254c57c40aa  # lxd/storage/drivers/driver/zfs/volumes: Create temporary snapshot in BackupVolume()
      git cherry-pick 04c3bb3d772c97a983d26fb4f5d563b39a71b6f2  # lxd/storage/backend/lxd: Checks for existance of volume before deleting
      git cherry-pick afa655c70b79fb477d9ac95d3298ce580bb2b105  # lxd/instance: Switches to revert package for instanceCreateAsSnapshot
      git cherry-pick 4565bd7ba12d89e3cafa1598cae7b9f716bb16a0  # lxd/storage/backend/lxd: Comment tweak
      git cherry-pick e8a2d9a128fa94a4338d66f9555cc741c99eb713  # lxd/storage/drivers/driver/ceph/volumes: Tweaks HasVolume detection
      git cherry-pick bc3648811493ec86292b9f4b36cddcbccdeddd63  # shared/subprocess/proc: Fixes race in process stopping
      git cherry-pick ab29450c102924530e8735505ed884fd4518cdb1  # lxd/main_activateifneeded: s/container/instance/
      git cherry-pick a5603e0e592c9d59e0f66e192258e7b2cee71411  # lxd/main_activateifneeded: Retrieve all instances
      git cherry-pick 91dd675adb86379dfb0128126ec37ce1b9c991ea  # lxd/main_activateifneeded: Check for scheduled instance snapshots
      git cherry-pick 2ea3f209f731bdd3eed8e3b13b8206a1dd899821  # lxd/main_activateifneeded: Check for scheduled volume snapshots
      git cherry-pick a07f73c901dda8276dc15f5b2002f24b3d987948  # test/suites/basic: Update activateifneeded tests
      git cherry-pick 6179284bb2b988c3368f8a209f9e751e647f72a3  # lxd/main_activateifneeded: Use defer statement to close db
      git cherry-pick 1fc005cb9760773fdce8affcef9b57184f14eeeb  # lxd/storage/btrfs: Workaround permission issue
      git cherry-pick cc73f15896d2739a14a8ad7935ad57f88b655776  # lxd/cluster: add RemoveRaftNode() to force removing a raft node
      git cherry-pick 4f6e5ee63ad2dd36e38ee20d41a3c4c2b75b19b4  # api: Add "DELETE /internal/cluster/raft/<address>" endpoint
      git cherry-pick 7f812cb28185ec622209c20e0b1f9b50b4b8bd86  # Increase timeout when calling dqlite.Client.Add() to join the cluster
      git cherry-pick 4d840609b29f64ce06dd8f552eeb8849ce9a701e  # lxd/storage/drivers/driver/zfs/volumes: Comment
      git cherry-pick 9c8986babe3a2420ed4132bed730a5e87dc3f7c0  # lxd/storage/drivers/driver/lvm/volumes: Always return -1/ErrNotSupported for snapshot usage
      git cherry-pick 63a9baaac5dbb30d4050ed5c036b5afbe4f3bdea  # lxd/storage/drivers/driver/dir/volumes: Always return -1/ErrNotSupported for snapshot usage
      git cherry-pick 5013b4f1ddc5dc86300a6207aac8f05c41a33bfb  # lxd/storage/drivers/driver/zfs/volumes: Always used 'used' property for ZFS snapshot usage
      git cherry-pick 5c1bc935943669ece42e6bbbfc867f39bf89e645  # lxd/storage/drivers/driver/cephfs/volumes: Always return -1/ErrNotSupported for snapshot usage
      git cherry-pick 2d4f665b777c0d299d1873284ca9979cfcbae48c  # lxd/storage/drivers/driver/btrfs/volumes: Return -1/ErrNotSupported when no quota available
      git cherry-pick 3f8d71985c7bb37f95b68e157e6da6b60f49a1a5  # lxd/instance: Fix typo in comment
      git cherry-pick bc17dc7fc4d15c812451b6698cc0283eb252100a  # lxc/action: Fix typo in help message
      git cherry-pick a2b9f3eda9fdae6ddabb88b5b6df6867c090a0d8  # i18n: Update translation templates
      git cherry-pick 8abc4b0b028bf620b2b56b74093ea474cbf789d5  # lxd: Add "lxd cluster remove-raft-node" recovery command
      git cherry-pick 5c6244d40ea564982fc2082f9249cb6178df0fbe  # doc: Add paragraph about "lxd cluster remove-raft-node"
      git cherry-pick 3042b8b6cd4bc3af33dabdb8771fe44acab44fa4  # test: Add test exercising "lxd cluster remove-raft-node"
      git cherry-pick b167cc5dc764357eebeac60eae296de2281b8cee  # lxd/storage/lvm: Always call vgchange on mount
      git cherry-pick 54f2bb5c84cc35d84a0a677f50e297dcee660003  # lxd/patches: Fix snapshot migration
      git cherry-pick ff991057707c4a9bf5f5ad1ab097e3c7174c884f  # tests: Fix btrfs storage usage
      git cherry-pick ee7b27afb6dc668a1b6683c1fa8a8c4bd5c9ac2d  # lxd/storage/drivers/volume: Only chmod if needed in EnsureMountPath
      git cherry-pick 3ec824d20e6ecf1f25e714e3a2cdbed13fa6e952  # lxd/storage/drivers/volume: Removes unnecessary variable
      git cherry-pick dd1b18423cb0694282f34cd2c717b0bacf7258ef  # lxd/storage/drivers/driver/zfs/volumes: Ensure volumes created from copy have correct perms
      git cherry-pick 8d6e9c94395e39a0f35cbe7ac245154f27d0d3b8  # lxd/storage/drivers: Call EnsureMountPath() in MountVolume()
      git cherry-pick b055ef53289cdf2774ca3914f3d5200204fbf55d  # lxd/storage/drivers: Call EnsureMountPath() in MountVolumeSnapshot()
      git cherry-pick 36021bc6f5b48670027e4c54f91f364c86880bf3  # lxd/storage/drivers/driver/btrfs/volumes: Adds revert to CreateVolume
      git cherry-pick dfd277cf4fd0528e1d596991f03b0e0e47ac5b63  # lxd/storage/drivers/driver/btrfs/volumes: Comment in CreateVolumeFromCopy
      git cherry-pick 3306cc1726698751a0c72d799225ea701793c628  # lxd/storage/drivers/driver/lvm/utils: EnsureMountPath after copying thin volume
      git cherry-pick 5fbe61f47facf8b5034bbffd12e42700ae1e0d87  # lxd/storage/drivers/driver/cephfs/volumes: typo
      git cherry-pick 7c052d4e6c2e3957cfa5db1888d7f9421280d63d  # lxd/storage/drivers/driver/cephfs/volumes: Calls vol.EnsureMountPath after filling
      git cherry-pick 778859592b32ef5568e346a5b40153041c62b508  # lxd/storage/drivers/driver/ceph/volumes: Calls EnsureMountPath to fix perms after copying volume
      git cherry-pick df4d639b574c2e510a935b011d3d1ceba17226c8  # lxd/storage/drivers/driver/lvm/volumes: Fixes temporary snapshot volume cleanup for VMs
      git cherry-pick f91905090dc379d71a1d1642b085c6ff8f6be1e9  # lxd/storagr/drivers/driver/ceph/volumes: Adds support for snapshot usage reporting
      git cherry-pick 70d22d2effe8b21ca43033cb6ee6b365442227e9  # lxd/storage/drivers/driver/lvm/volumes: Clarifies comments on LVM volume usage reporting
      git cherry-pick 8cb62997cdf9260e2e31d3cdc748f34f3a6ce169  # shared/osarch: Coding style
      git cherry-pick 1088fee4d2f04e452f9459dfb33eda0d44f45f93  # shared/osarch: Don't fail on missing os-release
      git cherry-pick 8e84e1e5f0a146c7d947dfa4ec39522ca9683dad  # shared/api: Add OS information
      git cherry-pick d3a96b9d78b1c6e0b418302440de1e18702ec25e  # lxd/api: Add OS information
      git cherry-pick e5bfdff5fc7f492d84035498beaa11abc432a6ac  # api: Add api_os
      git cherry-pick 466a11902c365e971ee6ff33d13ce340756c341b  # lxc: Use natural string sorting
      git cherry-pick 894b806c8452f8b9682a7565e70ff756128e819c  # lxc: Group snapshot and parent
      git cherry-pick 086e13ec844f202822f451626d5033cf80908864  # lxd/main: Move forkzfs mntns to cgo
      git cherry-pick 2bc975ff965247b823806f8e084d656679be2fdc  # doc/networks: Adds note about firewalld and DHCP/DNS
      git cherry-pick f47f4819dc432d3645565d3fd92efaee8a67b584  # lxd/device/nic/routed: Improves validation of sysctl settings when using vlan option
      git cherry-pick 64712ff5b844e65bb5d3bb78c56dbff1d69403db  # lxd/device/nic/routed: Corrects misleading error message when setting sysctls
      git cherry-pick d545c9c43fbd33d57aacf5ca3ed04d40baeb24b1  # lxd/storage/drivers/generic/vfs: Log when creating snapshots
      git cherry-pick 124f4fd5a161d4a5aaed387d5ed47f6b873a4c9e  # lxd/storage/drivers/driver/zfs/volumes: Fix migrating VM block volumes in MigrateVolume
      git cherry-pick 2a0ab36d21f17ad166b560b8da0310e5a7baed08  # lxd/storage/memorypipe: Adds context support for cancellation
      git cherry-pick 83e90431e87743b72a9a596e84f491ab0fccf061  # lxd/storage/backend/lxd: memorypipe cancellation usage
      git cherry-pick 73169f8dce62d2b86550994bf8f56d13ff780da4  # lxd/device/nic/sriov: Updates networkGetVirtFuncInfo to use json output from ip tool
      git cherry-pick 12da91215a4d8ef4cdeb29fa336e133e72c1385d  # doc: Add missing os_api extension
      git cherry-pick 9c7004a31b0604f959d0b30836bcfaf787449de0  # lxd/storage/drivers/driver/dir/utils: Removes default project quota
      git cherry-pick a93766595ed89bd727b9fcf6db6461eb515fb384  # forkexec: mark fd cloexec so the attaching process doesn't inherit it

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Build the agent (special build tags)
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent github.com/lxc/lxd/lxd-agent

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libco
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xtables
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
