name: lxd
base: core20
assumes:
  - snapd2.39
version: "5.1"
grade: stable
summary: LXD - container and VM manager
description: |-
 LXD is a system container and virtual machine manager.

 It offers a simple CLI and REST API to manage local or remote instances,
 uses an image based workflow and support for a variety of advanced features.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions. Existing
 integrations with many deployment and operation tools, makes it work
 just like a public cloud, except everything is under your control.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines when running Linux on Linux.

 LXD virtual machines are modern and secure, using UEFI and secure-boot
 by default and a great choice when a different kernel or operating
 system is needed.

 With clustering, up to 50 LXD servers can be easily joined and managed
 together with the same tools and APIs and without needing any external
 dependencies.


 Supported configuration options for the snap (snap set lxd [<key>=<value>...]):

   - ceph.builtin: Use snap-specific Ceph configuration [default=false]
   - ceph.external: Use the system's ceph tools (ignores ceph.builtin) [default=false]
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increase logging to debug level [default=false]
   - daemon.group: Set group of users that have full control over LXD [default=lxd]
   - daemon.user.group: Set group of users that have restricted LXD access [default=lxd]
   - daemon.preseed: Pass a YAML configuration to `lxd init` on initial start
   - daemon.syslog: Send LXD log events to syslog [default=false]
   - lvm.external: Use the system's LVM tools [default=false]
   - lxcfs.pidfd: Start per-container process tracking [default=false]
   - lxcfs.loadavg: Start tracking per-container load average [default=false]
   - lxcfs.cfs: Consider CPU shares for CPU usage [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - openvswitch.external: Use the system's OVS tools (ignores openvswitch.builtin) [default=false]
   - ovn.builtin: Use snap-specific OVN configuration [default=false]
   - shiftfs.enable: Enable shiftfs support [default=auto]

 For system-wide configuration of the CLI, place your configuration in
 /var/snap/lxd/common/global-conf/ (config.yml and servercerts)

contact: lxc-devel@lists.linuxcontainers.org
issues: https://github.com/lxc/lxd/issues
source-code: https://github.com/lxc/lxd
website: https://linuxcontainers.org/lxd
confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots:
      - lxd
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  user-daemon:
    command: commands/lxd-user
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd-user/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  lxc-to-lxd:
    command: commands/lxc-to-lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs:
      - lxd-support
      - network
      - system-observe
  remove:
    plugs:
      - lxd-support
      - system-observe

parts:
  # Workarounds
  pull-meson-early:
    source: snapcraft/empty
    override-build: |
      # No-op
      true
    override-stage: |
      # No-op
      true
    plugin: nil
    override-pull: |
      # Fetch meson early to cause all downloads at the beginning of the build.
      python3 -m pip install -U meson

  # Dependencies
  btrfs:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-progs
    organize:
      sbin/: bin/
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/rbd
      - lib/*/ceph
      - lib/*/libatomic.so*
      - lib/*/libboost_iostreams.so*
      - lib/*/libboost_program_options.so*
      - lib/*/libboost_thread.so*
      - lib/*/libcephfs*
      - lib/*/libibverbs.so*
      - lib/*/librados.so*
      - lib/*/librbd.so*
      - lib/*/librdmacm.so*
      - lib/*/libsnappy.so*
      - lib/python3

  criu:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.16.1
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  dqlite:
    build-attributes: [core22-step-dependencies]
    after:
      - raft
      - sqlite
    source: https://github.com/canonical/dqlite
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  edk2:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/tianocore/edk2
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: nil
    build-packages:
      - on amd64:
        - acpica-tools
        - nasm
        - uuid-dev
      - on arm64:
        - acpica-tools
        - nasm
        - uuid-dev
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0
      set -ex
      git clone https://github.com/tianocore/edk2 . -b edk2-stable202202

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      # Fix submodules
      sed -i "s#https://git.cryptomilk.org/projects/cmocka#https://gitlab.com/cmocka/cmocka#g" .gitmodules
      git submodule update --init --recursive

      # Apply patches
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0001-force-DUID-LLT.patch"
      cp "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0002-logo.bmp" MdeModulePkg/Logo/Logo.bmp
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0003-boot-delay.patch"
      patch -p1 < "${SNAPCRAFT_PROJECT_DIR}/patches/edk2-0004-gcc-errors.patch"

      ARCH="X64"
      PKG="OvmfPkg/OvmfPkgX64.dsc"
      FV_CODE="OVMF_CODE"
      FV_VARS="OVMF_VARS"
      if [ "$(uname -m)" = "aarch64" ]; then
          ARCH="AARCH64"
          PKG="ArmVirtPkg/ArmVirtQemu.dsc"
          FV_CODE="QEMU_EFI"
          FV_VARS="QEMU_VARS"
      fi

      # Run in a bash sub-shell as edksetup.sh requires it
      set -ex
      (
      cat << EOF
          . ./edksetup.sh
          make -C BaseTools ARCH=${ARCH}
          build -a ${ARCH} -t GCC49 -b RELEASE -p ${PKG} \
            -DSECURE_BOOT_ENABLE=TRUE \
            -DNETWORK_IP4_ENABLE=TRUE \
            -DNETWORK_IP6_ENABLE=TRUE \
            -DNETWORK_TLS_ENABLE=TRUE \
            -DNETWORK_HTTP_BOOT_ENABLE=TRUE \
            -DFD_SIZE_2MB \
            -DTPM_ENABLE=TRUE \
            -DTPM_CONFIG_ENABLE=TRUE \
            -DTPM2_ENABLE=TRUE \
            -DTPM2_CONFIG_ENABLE=TRUE
      EOF
      ) | bash -e

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      cp Build/*/*/FV/${FV_CODE}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
      cp Build/*/*/FV/${FV_VARS}.fd "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"

      if [ "$(uname -m)" = "aarch64" ]; then
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_CODE.fd"
          truncate -s 64m "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.fd"
      fi

    prime:
      - share/qemu/*

  libmnl:
    build-attributes: [core22-step-dependencies]
    source: https://git.netfilter.org/libmnl
    source-type: git
    source-tag: libmnl-1.0.4
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libmnl*so*

  libnftnl:
    build-attributes: [core22-step-dependencies]
    after:
      - libmnl
    source: https://git.netfilter.org/libnftnl
    source-type: git
    source-tag: libnftnl-1.2.1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libnftnl*so*
    override-build: |
      snapcraftctl build

      sed -i "s# /lib/libmnl.la# ${SNAPCRAFT_STAGE}/lib/libmnl.la#g" "${SNAPCRAFT_PART_INSTALL}/lib/libnftnl.la"

  libseccomp:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/seccomp/libseccomp
    source-type: git
    source-tag: v2.5.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - gperf
    organize:
      usr/lib/: lib/
    prime:
      - lib/libseccomp*so*

  libtpms:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/stefanberger/libtpms
    source-type: git
    source-tag: v0.9.3
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-tpm2
      - --with-openssl
    organize:
      usr/lib/: lib/
    prime:
      - lib/libtpms*so*

  liburing:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/axboe/liburing
    source-type: git
    source-tag: liburing-2.1
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0
      snapcraftctl build
    organize:
      usr/lib/: lib/
    prime:
      - lib/liburing*so*

  libusb:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/libusb/libusb
    source-type: git
    source-tag: v1.0.25
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    organize:
      usr/lib/: lib/
    prime:
      - lib/libusb*so*

  logrotate:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - logrotate
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    stage:
      - bin/logrotate
    prime:
      - bin/logrotate

  lvm:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nftables:
    build-attributes: [core22-step-dependencies]
    after:
      - libmnl
      - libnftnl
    source: https://git.netfilter.org/nftables
    source-type: git
    source-tag: v1.0.2
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-json
    build-packages:
      - libedit-dev
      - libjansson-dev
      - libreadline-dev
    stage-packages:
      - libjansson4
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 18a08fb7f0443f8bde83393bd6f69e23a04246b3  # examples: compile with `make check' and add AM_CPPFLAGS

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/lib/: lib/
    prime:
      - bin/nft
      - lib/*/libjansson*so*
      - lib/libnftables*so*

  nvidia-container:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.9.0
    source-depth: 1
    plugin: make
    build-packages:
      - bmake
      - curl
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ${SNAPCRAFT_PROJECT_DIR}/snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container*.so*

  openvswitch:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openvswitch/ovs
    source-type: git
    source-tag: v2.17.0
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
    stage-packages:
      - uuid-runtime
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex
    organize:
      sbin/: bin/
      usr/bin/: bin/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  ovn:
    build-attributes: [core22-step-dependencies]
    after:
      - openvswitch
    source: https://github.com/ovn-org/ovn
    source-type: git
    source-tag: v22.03.0
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --enable-ssl
      - --prefix=
      - --with-ovs-source=../../openvswitch/build/
    prime:
      - bin/ovn-nbctl
      - bin/ovn-sbctl

  spice-protocol:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/freedesktop/spice-protocol
    source-type: git
    source-tag: v0.14.4
    source-depth: 1
    plugin: meson
    prime: []

  spice-server:
    build-attributes: [core22-step-dependencies]
    after:
      - spice-protocol
    source: https://github.com/freedesktop/spice
    source-type: git
    source-tag: v0.15.0
    source-depth: 1
    plugin: meson
    meson-parameters:
      - --prefix=/
      - -Dgstreamer=no
      - -Dmanual=false
      - -Dlz4=false
      - -Dsasl=false
      - -Dopus=disabled
      - -Dsmartcard=disabled
      - -Dtests=false
    build-packages:
      - libjpeg-turbo8-dev
      - python3-pyparsing
      - python3-six
    stage-packages:
      - libjpeg-turbo8
      - libpixman-1-0
    organize:
      sbin/: bin/
      usr/lib: lib/
      usr/local/lib/: lib/
    prime:
      - lib/*/libjpeg*so*
      - lib/*/libspice-server*so*
      - lib/*/libpixman*so*

  swtpm:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
      - libtpms
    source: https://github.com/stefanberger/swtpm
    source-type: git
    source-tag: v0.7.2
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --with-seccomp
      - --with-openssl
      - --without-cuse
    build-packages:
      - expect
      - gawk
      - iproute2
      - libjson-glib-dev
      - python3-cryptography
      - python3-setuptools
      - socat
    stage-packages:
      - libjson-glib-1.0-0
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      lib/swtpm/: lib/
    prime:
      - bin/swtpm
      - lib/libswtpm*so*
      - lib/*/libjson-glib-1.0.so*

  qemu:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
      - liburing
      - libusb
      - spice-protocol
      - spice-server
    source: IRRELEVANT
    source-type: git
    source-tag: IRRELEVANT
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --disable-bochs
      - --disable-cloop
      - --disable-dmg
      - --disable-docs
      - --disable-guest-agent
      - --disable-parallels
      - --disable-qed
      - --disable-slirp
      - --disable-user
      - --disable-vdi
      - --enable-vnc
      - --disable-xen
      - --enable-attr
      - --enable-cap-ng
      - --enable-kvm
      - --enable-libusb
      - --enable-usb-redir
      - --enable-linux-aio
      - --enable-linux-io-uring
      - --enable-numa
      - --enable-pie
      - --enable-rbd
      - --enable-seccomp
      - --enable-spice
      - --enable-system
      - --enable-tcg
      - --enable-tools
      - --enable-vhost-crypto
      - --enable-vhost-kernel
      - --enable-vhost-net
      - --enable-vhost-scsi
      - --enable-vhost-user
      - --enable-vhost-vsock
      - --enable-virtfs
      - --firmwarepath=/snap/lxd/current/share/qemu/
      - --localstatedir=/var/
    build-packages:
      - bison
      - flex
      - pkg-config
      - libaio-dev
      - libcap-ng-dev
      - libglib2.0-dev
      - libnuma-dev
      - libpixman-1-dev
      - librbd-dev
      - libusbredirhost-dev
    stage-packages:
      - genisoimage
      - libmagic1
      - libnuma1
      - libpixman-1-0
      - libusbredirhost1
      - libusbredirparser1
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0
      set -ex
      git clone https://gitlab.com/qemu/qemu . -b v6.1.1
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && [ "$(uname -m)" != "ppc64le" ] && [ "$(uname -m)" != "s390x" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      [ "${QEMUARCH}" = "ppc64le" ] && QEMUARCH="ppc64"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure
      sed -i 's#libseccomp_minver=".*#libseccomp_minver="0.0"#g' configure

      set +ex
      snapcraftctl build
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/local/bin/: bin/
      usr/local/lib/: lib/
      usr/local/libexec/: bin/
      usr/local/share/: share/
    prime:
      - bin/genisoimage*
      - bin/mkisofs*
      - bin/qemu-system-*
      - bin/qemu-img*
      - bin/virtfs-proxy-helper*
      - bin/virtiofsd*
      - lib/*/libatomic.so*
      - lib/*/libmagic*so*
      - lib/*/libnuma*so*
      - lib/*/libpixman*so*
      - lib/*/libusbredir*so*
      - share/qemu/keymaps*
      - share/qemu/efi-virtio.rom*
      - share/qemu/kvmvapic.bin*
      - share/qemu/s390-*.img*
      - share/qemu/slof.bin*
      - share/qemu/vgabios-*.bin*

  qemu-ovmf-secureboot:
    build-attributes: [core22-step-dependencies]
    after:
      - edk2
      - qemu
    source: https://github.com/puiterwijk/qemu-ovmf-secureboot
    source-type: git
    source-depth: 1
    plugin: nil
    build-packages:
      - xorriso
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      export ARCH="$(basename $(readlink -f ${SNAPCRAFT_STAGE}/lib/*-linux-gnu*/))"
      export LD_LIBRARY_PATH="${SNAPCRAFT_STAGE}/lib:${SNAPCRAFT_STAGE}/lib/${ARCH}"

      set -ex
      rm -Rf iso-root vfat-root shell.iso
      mkdir -p iso-root vfat-root/efi/boot
      cp ../../edk2/build/Build/*/*/*/Shell.efi vfat-root/efi/boot/bootx64.efi
      cp ../../edk2/build/Build/*/*/*/EnrollDefaultKeys.efi vfat-root/
      "${SNAPCRAFT_STAGE}/bin/qemu-img" convert --image-opts driver=vvfat,floppy=on,fat-type=12,label=UEFI_SHELL,dir=vfat-root iso-root/shell.img
      xorriso --as mkisofs -input-charset ASCII -J -rational-rock -e shell.img -no-emul-boot -o shell.iso iso-root/

      # Basic aarch64 support
      if [ "$(uname -m)" = "aarch64" ]; then
          sed -i ovmf-vars-generator \
              -e "s/'-machine', machinetype,/'-machine', 'virt', '-cpu', 'cortex-a57',/" \
              -e "/charserial1/d" \
              -e "s/ide-cd/scsi-cd/" \
              -e "s/'-device',$/'-device', 'virtio-scsi-pci,id=scsi', '-device',/"
      elif [ "$(uname -m)" = "x86_64" ]; then
          cp -f "${SNAPCRAFT_STAGE}/share/qemu/kvmvapic.bin" .
      fi

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/share/qemu/"
      python3 ovmf-vars-generator \
        --qemu-binary "${SNAPCRAFT_STAGE}/bin/qemu-system-$(uname -m)" \
        --print-output --disable-smm --skip-testing \
        --oem-string "$(cat ${SNAPCRAFT_PROJECT_DIR}/snapcraft/etc/ubuntu-sb.crt)" \
        --ovmf-binary "${SNAPCRAFT_STAGE}/share/qemu/OVMF_CODE.fd" \
        --ovmf-template-vars "${SNAPCRAFT_STAGE}/share/qemu/OVMF_VARS.fd" \
        --uefi-shell-iso shell.iso \
        "${SNAPCRAFT_PART_INSTALL}/share/qemu/OVMF_VARS.ms.fd"
    prime:
      - share/qemu/*

  raft:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/canonical/raft
    source-type: git
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    stage-packages:
      - libuv1
      - liblz4-1
    build-packages:
      - libuv1-dev
      - liblz4-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libraft*so*
      - lib/*/libuv.so*

  sqlite:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/sqlite/sqlite
    source-type: git
    source-depth: 1
    source-tag: version-3.38.2
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - tcl
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  squashfs-tools-ng:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/AgentD/squashfs-tools-ng
    source-type: git
    source-tag: v1.1.4
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
    build-packages:
      - liblzma-dev
    prime:
      - bin/sqfs2tar
      - bin/tar2sqfs
      - lib/libsquashfs.so*

  vim:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-common
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim*/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/xfs_repair
      - bin/mkfs.xfs

  xtables:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - arptables
      - ebtables
    organize:
      usr/lib/ebtables/: lib/
      usr/sbin/: bin/
    prime:
      - bin/arptables-legacy
      - bin/ebtables-legacy
      - etc/ethertypes
      - etc/protocols
      - lib/libebtc.so.*

  xz:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xz-utils
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/lzma
      - bin/xz
      - lib/*/liblzma*so*
    override-build: |
      snapcraftctl build

      # Include the lzma symlink
      ln -s xz "${SNAPCRAFT_PART_INSTALL}/usr/bin/lzma"

  zfs-0-6:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-7:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.7.13
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0-8:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-0.8.6
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-0:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.0.7
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.0/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-2-1:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/openzfs/zfs
    source-type: git
    source-tag: zfs-2.1.4
    source-depth: 1
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/udev/zvol_id" "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-2.1/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"


  zstd:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - zstd
    organize:
      usr/bin/: bin/
    prime:
      - bin/pzstd
      - bin/zstd

  # Core components
  lxc:
    build-attributes: [core22-step-dependencies]
    after:
      - libseccomp
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-4.0.12
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=
      - --disable-api-docs
      - --disable-bash
      - --disable-doc
      - --disable-examples
      - --disable-memfd-rexec
      - --disable-tests
      - --disable-tools
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick ca4c25c6e9ebb92f9e241ef9a231d4a715cb812d  # lxc-net: don't start by default inside lxc
      git cherry-pick f314419d1e054f7833b6976ec5ed32373aace622  # lxc-checkconfig: Fix bashism
      git cherry-pick 71ba7f65616e72a313e2a41615e449178da9daf2  # doc: Fix reverse allowlist/denylist
      git cherry-pick f7446b4e10d71f79f9f3952255608268842ee1f3  # cgroups: check that opened file descriptor is a cgroup filesystem
      git cherry-pick f1c4a17e7df5d819b1b170917865e2e458c8e5db  # cgroups: log fd of newly created cgroup
      git cherry-pick 8ef019a6ce2555f7b438b3841ab5216e5d6973ba  # doc: Fix reverse allowlist/denylist in Japanese man page
      git cherry-pick 3b9f84fd2397d06782bbf67dc8421463c43ab139  # ttys: ensure container_ttys= env variable is set correctly
      git cherry-pick 5ba5725cb4a210c25707beeca64fde5f561d1c71  # cgroups: modify cgroup2 attach logic

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-5.0.0
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
      - python3-jinja2
    stage-packages:
      - fuse
    plugin: meson
    meson-parameters:
      - --prefix=/
      - --datadir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
      - -Ddocs=false
      - -Dtests=false
    organize:
      lib/*/lxcfs/liblxcfs.so: lib/
      snap/lxd/current/lxc/config/common.conf.d/*: lxc/config/common.conf.d/
      snap/lxd/current/lxcfs/: lxcfs/
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc/config/common.conf.d/00-lxcfs.conf
      - lxcfs/
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 42c155d1df92d8bbabdb1de3433048584bb05d47  # lxcfs_fuse: ensure lxcfs_fuse_compat.h is included after including fuse header
      git cherry-pick e297458cb0d2a5c7f91ddacc771d4cf9efe301f8  # tree-wide: remove struct stat argument from DIR_FILLER and make it static inline
      git cherry-pick d58528f752aaa532eb3871899a27d66996a2a798  # tree-wide: ensure that file information is set even with legacy fuse
      git cherry-pick 02beb5d4e1b82e3416988af2341142518c804bd3  # tests: add test for issue #522
      git cherry-pick 112f0b9ca720b8f0da4d4a39153c16f55e3294e1  # meson: Include documentation
      git cherry-pick 1ef15e0d1f345ebb851f1bab8835cace5279e392  # workflows: disable documentation generation
      git cherry-pick 9d6cded612483cfb31919f306d1975ce801d8e25  # sysfs: Don't incorrectly filter entries
      git cherry-pick dcc13128a03b8af4e975e65b32afc841074bedb8  # tests: Fix sysfs test
      git cherry-pick 5daf75dbed117c75198e104f852fd170cac766de  # utils: add and use opathdir()
      git cherry-pick 2e3a6f5d8240695bd13a7a6da75de895b9407492  # sysfs_fuse: fix indendation
      git cherry-pick 2e13f0be3ad903adf870e7a3032c3356c0c9e4eb  # sysfs_fuse: generate file info for cpu<nr> entries as well
      git cherry-pick 75395f89cf6de91695562a0a47e36acbba879c1e  # meson: bump fuse version
      git cherry-pick 35bf60d4eed08e703180c1f6ec505c7c91442915  # github: add fuse3 tests
      git cherry-pick 006db260b1202761a6661085f7af2fd3cd7083f3  # meson: handle fuse versions with buggy dt_type handling
      git cherry-pick b997ce418919137df7a4552b2b8e0d8207edbaa5  # init/meson: Use libdir instead of hardcoded /lib path
      git cherry-pick a08da8d7e63a023679603a93c18b6bfc443f9471  # Query systemd system unit dir.

      set +ex
      snapcraftctl build
      set -ex

      patch -p1 $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook < "${SNAPCRAFT_PROJECT_DIR}/patches/lxcfs-0001-hook.patch"

  lxd:
    build-attributes: [core22-step-dependencies]
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-5.1
    after:
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - libudev-dev
      - pkg-config
    build-snaps:
      - go
    stage-packages:
      - acl
      - attr
      - dnsmasq-base
      - gdisk
      - iw
      - netbase
      - pciutils
      - pigz
      - rsync
      - squashfs-tools
      - usbutils
      - xdelta3
    plugin: nil
    override-pull: |
      snapcraftctl pull
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Setup the GOPATH
      rm -Rf "${GOPATH}"
      mkdir -p "${GOPATH}/src/github.com/lxc"
      ln -s "$(pwd)" "${GOPATH}/src/github.com/lxc/lxd"

      # Download the dependencies
      go get -d -v ./...
    override-build: |
      set -ex

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 7e4abf5193aa887f61879e71c81c587000ce8096  # lxd/storage/drivers/btrfs: Modify received UUID
      git cherry-pick 94180308e133e9637ec6e24a8b760207622dd412  # lxd/storage/drivers/btrfs: Set Received UUID
      git cherry-pick 3e2bf70f6e6921d576c8047788c258bef18ffe21  # test: Extend migration refresh test
      git cherry-pick fd6845ddda3f80cdd24a8f94c42acce6bff0c41f  # lxd/secommp: Fix sysinfo syscall interception on 32 bit platforms
      git cherry-pick a3f0fae1090d643dff1f134bf279132feeeb1657  # client/util: Add timeouts to tlsHTTPClient
      git cherry-pick 3cd532714d9a792159771fd832465eed5a75a5b5  # client/util: Add timeouts to unixHTTPClient
      git cherry-pick 540ba5df1af846fa40580242ce034724802ad047  # lxd/cluster/tls: Add timeouts to tlsTransport
      git cherry-pick 76de86ab898d9988b3b9eca1681dd758661680c3  # lxd/main/shutdown: Increase default timeout in cmdShutdown
      git cherry-pick 5cd4bd87f0c0a096f40048c68ad0239323ea36bf  # lxd/util/http: Adds timeouts in HTTPClient
      git cherry-pick 91e6e20e07e2cf35c14575ebe9a0afa29f9c2434  # lxd/vsock/vsock: Adds timeouts in HTTPClient
      git cherry-pick 396c6a30e754eef11f9496208dfa1aaf0146571d  # shared/cert: Adds timeouts in GetRemoteCertificate
      git cherry-pick 54d4db389f556fb3b6935a622bc37a299037d4c5  # lxd/certificates: Simplify non-admin check
      git cherry-pick d0dc795b954d8ede11859313adf787500250b645  # lxd/certificates: Comment the logic a bit
      git cherry-pick 4148e03f53d8fbff46cd4843c54324628c58a0a0  # lxd/certificates: Move duplicate cert detection
      git cherry-pick 675995fa97b3b5769a0cae79f0cfef0d4cc1b0b4  # doc: Fix typos
      git cherry-pick 2258ce0cc5c4827ba35592f6e70b56d85e944110  # server.crt referred to as lxd.crt in the prometheus config file
      git cherry-pick a6a491d11ccbda4e319f1b47a9a89e6e5cac90c7  # doc: headings and whitespace
      git cherry-pick 772003a58e44c3d8f6a021d28a0b491fbf086813  # doc: check for inclusive language
      git cherry-pick b85514b4e60b82167643087cce0b723cb741afcd  # doc: change to "Machine in the middle"
      git cherry-pick 1ee1da44dbf6d00fda8edb7a1abae6291f0789b7  # doc: add exceptions for inclusive language
      git cherry-pick c51fef6304d8a4c62013a78623e6dacaa30ff730  # doc: update doc for OVN peer routing relationships
      git cherry-pick 303984636ddf9ecddaa98f8b9cd121e5a01160b1  # github: Re-organize workflows
      git cherry-pick 3de3c7120b5d618aef1a65dffb45f2ebdd03b574  # github: Add DCO check
      git cherry-pick 87539f9480bcff7c049dbe1f807a99ffc33f10e1  # github: Split static builds from tests
      git cherry-pick 765ed1157989797611c28a68cd2f64b5d780e4f4  # github: Add branch target test
      git cherry-pick c8cfef12334a30a0431afc6fc7dad4639a7abf18  # github: Run commit tests on target
      git cherry-pick 8b9d3113be85e20f798535555e367315870c0095  # github: Fix commit checks
      git cherry-pick c2c9355b3e5e152235d8ad90a9de8ba1488f789c  # doc: update firewall configuration documentation
      git cherry-pick ed30b731e6dec309a22143906e30c02dc153339a  # doc: add a section about LXD and Docker
      git cherry-pick 814a16a976340229520549f04aa61847d77dfa08  # shared/network: Always return 0 on error
      git cherry-pick fefbb99066c8e8ee08aa9120060136728e205313  # lxd/utils: Improve errors in instancesExist
      git cherry-pick 8a2d9b84a5cadb05410fcf778df223d1780630ec  # lxd/device/disk: Improve error in validateConfig
      git cherry-pick a9ed18794b058e157e2be63f3ccb750b1c067781  # lxd/utils: Check snapshots only once in instancesExist
      git cherry-pick 755622e22b4312e9563c12486ea4837722df771f  # i18n: Update translation templates
      git cherry-pick 17554028bb8249d0c0d3c734c9769ff6583ab031  # doc: Fix typo
      git cherry-pick d8cbd91274bbc6c99180c70ce2db9820fc6541de  # lxd: Prevent use of instance/snapshot name in instance specific routes
      git cherry-pick b96517aa7200d42d3fec1fdf13f85bc77cf5d240  # doc: document how to handle SAN vs target name mismatch in Prometheus sample
      git cherry-pick a6801cfab8e766a8fb492ea9da819a8d6947a837  # lxc/list: Don't skip extra info when name filtering
      git cherry-pick 7bb10081086b1896bf346539cf2b95c50307bdde  # doc: rework doc for setting up OVN
      git cherry-pick 72908e3210790655024032927e33b25e4ec558a1  # lxd/certificates: Fix token request validation
      git cherry-pick 884448548ee58c33e371a616e1d65548d495ea5d  # doc: add a Discourse link about simple streams
      git cherry-pick e737a41e07041e8a98380463a6afd1025d80b2f6  # lxc/config_trust: revoke-token requires a name, not a token
      git cherry-pick f50b3352e06dd6d0a601762c64dd88cb66d0a7c2  # i18n: Update translation templates
      git cherry-pick 35accce9080d02bcd00b7e8c09c99b1b7fb52098  # lxd/project: Fix bad error on invalid instance type
      git cherry-pick 06b97e97ae4e323a11be08e6fbfca269b57b8db3  # lxc/config_trust: update help when client should be singular
      git cherry-pick ce281f221e46df612173c2b8f6c48c54d6c6395c  # lxc/config_trust: clarify help for join token creation
      git cherry-pick 5ba747ae0b6f58e2c0b862cf4f7fb783f248615f  # i18n: Update translation templates
      git cherry-pick 81af9115bc5b03294bfd668aa445e0ac1118bbaa  # lxd/daemon: Fix LXD crash is failing to start due to already running LXD process
      git cherry-pick 6b4fe985d1dbe0ddbd97636cc71d7a3a8026eb22  # lxd/request: Export CtxKey type and use for all keys.
      git cherry-pick 3ce35b7cae15d821cb37e8b66d630687baad25d3  # lxd/storage/drivers/driver/zfs/volumes: Simplifies UnmountVolume
      git cherry-pick cec20ceac5c6ee9d4f1f7db2ad5a7b5aa51bd28e  # lxd/storage/drivers/driver/lvm/volumes: Simplifies UnmountVolume
      git cherry-pick 48039fb97c40cb12e5e2cc7d4db052441a3ddbe9  # lxd/storage/drivers/driver/ceph/volumes: Simplifies UnmountVolume
      git cherry-pick c11afc02dc95e7a38abf061f30fbfeba2f7816f5  # lxd/storage/drivers/volumes: v.driver.MountVolumeSnapshot usage in MountTask
      git cherry-pick c8f826abb661aaf1a2cb23830bcb6476ec0985b7  # lxd/storage/drivers/interface: Removes ourMount indicator from MountVolumeSnapshot
      git cherry-pick a7f2640509845decbd692c91673aaba131399abc  # lxd/storage/backend/lxd: b.driver.MountVolumeSnapshot usage
      git cherry-pick 31daa75b563460fcddb55c16429642e45a47998e  # lxd/storage/drivers/driver/mock: Updates MountVolumeSnapshot
      git cherry-pick c2ed02ca8d76083a529ff9d03983949a991e424f  # lxd/storage/driver/driver/btrfs/volumes: Adds ref counting to MountVolumeSnapshot
      git cherry-pick a873a4e461d0c11ca1673b2560e6064663d0dcea  # lxd/storage/drivers/driver/ceph/volumes: Adds ref counting to MountVolumeSnapshot
      git cherry-pick 3210627f4f54d4d60a81b1a614e990c25d650cf9  # lxd/storage/drivers/driver/cephfs/volumes: Adds ref counting to MountVolumeSnapshot
      git cherry-pick 1f395a48dda7407dc8104ac199b2b2a0fd013929  # lxd/storage/drivers/driver/dir/volumes: Adds ref counting to MountVolumeSnapshot
      git cherry-pick f83b9233172b55379088000544b2a6913c80a8c6  # lxd/storage/drivers/driver/lvm/volumes: Adds ref counting to MountVolumeSnapshot
      git cherry-pick d0d7ffc56c170c14a8473e7c061f132c0f93bd48  # lxd/storage/drivers/driver/zfs/volumes: Adds ref counting to MountVolumeSnapshot
      git cherry-pick 2c07abb2f176a426ebec4def55516dc0c2df68ca  # lxc/config: no name shown when editing the instance's config
      git cherry-pick 5e63eb17b68f640ac6d9f33ec2c6c9d3d63835ab  # i18n: Update translation templates
      git cherry-pick d5efd293005d0358ff66472f32dadfcaba12429f  # lxd/resources: Fix comment
      git cherry-pick 8387d59ad1897fca1e692916f76ee8ac9f6356b1  # lxd/response: Adds nolint directive for deadcode.
      git cherry-pick 96453cb4ee60feda0a48e19efe02e0fa4fb855c7  # lxd: Removes unused test function (deadcode).
      git cherry-pick 8bbaeb2965724b65a57333c909d93f1a62b14386  # lxd/network/openvswitch/ovn: Pass --wait=sb when using ovn-nbctl
      git cherry-pick 3e1726d4a90de1ef5bac0083fd4c8111c959a397  # lxd/network/driver/ovn: Fix cleanup of bridge mappings of physical OVS parent
      git cherry-pick 5bc8891a7e02002c14a23889d2fe17745de27b80  # lxd/storage/backend/lxd: Restore instance snapshot volume config and description
      git cherry-pick 8f82a7ce2b653039ac4076194940a5194241d493  # test: Adds tests for restoration of instance volume snapshot config
      git cherry-pick d436f5e28bac6aaa6eb7f0d3735d7734fb084606  # test: Run snapshot naming tests for all storage pool types
      git cherry-pick a3f4b975b91c70febdd2f3e28d0c00173f9b7ccc  # shared/instance: Adds volatile.apply_nvram config key
      git cherry-pick 46d37d2740459011ada91afa770d33eff73b260c  # lxd/instance/drivers/driver/qemu: Regenerate nvram on next start when security.secureboot profile config is changed
      git cherry-pick 7b1aca0af9b1955adfe9fd4598d285037ee294ec  # doc/instances: Documents VM volatile.apply_nvram setting
      git cherry-pick e784133ec090930b92f437f20ba99fcd3cc39d41  # test/static_analysis: Adds golangci-lint and runs deadcode.
      git cherry-pick c555125936df1068fe846f062ab82c275a5ce612  # lxd/resources: Handle negative CPU indexes
      git cherry-pick b1d4ef79d1a914b4ba5faaf430d30b2cfa6e3ce9  # lxc/config_device: Add extra example to device add
      git cherry-pick 4f6ba811aa9893c2e26d5d0c5c4006426a35fd94  # lxd: Increase client header timeout from 30s to 1 hour
      git cherry-pick a0b9dcfe32bb80501b54c9a23e9dc6d99a00b174  # client: Increase header timeout from 30s to 1 hour
      git cherry-pick 5d9e62ebd24147d007c6e3449f2b24bcd49c562b  # shared/cert: Increase header timeout from 30s to 1 hour
      git cherry-pick ff3a045312b4ffeb92f8edfd02afd4f11114d703  # lxc/config_device: Fix small typo
      git cherry-pick 27d397396e00f8963fcf49964ffbb0c3d274d8db  # lxd/storage/utils: Updates DB functions to take Pool interface argument
      git cherry-pick b4903584ab66289d95d57ddbed8ea77805681d0f  # lxd/storage/utils: Updates VolumeDBSnapshotsGet to align with other DB function arguments
      git cherry-pick 4cd8ddb8c1ab85edc987a5c6bfb59117de894eb1  # lxd/migrate/storage/volumes: storagePools.VolumeDBSnapshotsGet usage
      git cherry-pick b07dd0f8a943091862d5f1bb959ae3350a297dbc  # lxd/storage/backend/lxd: Update DB function usage to pass Pool
      git cherry-pick 0beb2f7447eaa3065c8f96bbb1370c5926c39b9a  # lxd/storage/backend/lxd: Updates UpdateInstanceBackupFile to use VolumeDBGet
      git cherry-pick 327b9499d99544680a2a1d12fad798593dedf9b4  # lxd/storage/backend/lxd: Preallocate snapshot slice in UpdateInstanceBackupFile
      git cherry-pick 5b55f2f47ae88b1d813869fbc56848f4db2e7755  # lxd/db/storage/volumes: Populate content type and config in GetLocalStoragePoolVolumeSnapshotsWithType
      git cherry-pick 056711b40117a6a12a74abb3f0269414363cae77  # lxd/storage/backend: Populate instance storage volume snapshots in UpdateInstanceBackupFile
      git cherry-pick 89e5cc30be695d64a3838d6705c6c2d6d91118a3  # lxd/backup: Switch to storagePools.VolumeDBGet in volumeBackupCreate
      git cherry-pick 6271b7bfe356021feaa0cdaa51db93429b0b3d11  # lxd/backup: Updates volumeBackupWriteIndex to use storagePools.VolumeDBSnapshotsGet
      git cherry-pick 4d07ab5188883d426d4079b9e1339b7c25023e3c  # lxd/db/storage/volumes/snapshots: Removes unused function GetStorageVolumeSnapshotsNames
      git cherry-pick 24f0bd373dad271e20f5593cf663592fe9c71317  # lxd/storage/backend/lxd: Updates BackupCustomVolume to use VolumeDBSnapshotsGet
      git cherry-pick c9a22ca4ee9d265a259837715a78cbc9aa16b922  # lxd/images: Remove references to cluster node in user facing error messages
      git cherry-pick e9c52606d9512e389ef5039ec346186177e0d6f6  # lxd/db/query/transaction: Start errors with capital letter
      git cherry-pick 66de913f1512ce54d8566e73fc033375f210e572  # lxd/backup: Whitespace
      git cherry-pick 2e9cff18b1950acde75a8cd0b3e26f1fc6c2639f  # lxd/backup: Populate volume config in backupWriteIndex
      git cherry-pick f5dbba350a305e7ea59929063aaaec919d6be0b4  # test: Add tests for checking that storage volume records are exported and restored from backups
      git cherry-pick 29141a8e601edaf2f59e9faba8dd53578330f22e  # lxd/storage/utils: Adds removeUnknownKeys argument to VolumeDBCreate
      git cherry-pick 9f6a305c63dfe5008a743f02118f3c20191319db  # lxd/storage/backend/lxd: VolumeDBCreate updated usage
      git cherry-pick 17ade3e1c6a40f64673a09177accd8652f32ff88  # lxd/storage/backend/lxd: Updates CreateInstanceFromMigration to strip unknown storage volume config keys
      git cherry-pick f4eb2cfddff85fe641da7144e3a7e45d5fc58428  # lxd/storage/backend/lxd: Don't strip unknown storage volume keys for same pool copies in CreateCustomVolumeFromCopy
      git cherry-pick 2b7f1d95ebe5e90f3d3f5d37a4da8f9fdbbbe6da  # lxd/storage/backend/lxd: Updates CreateCustomVolumeFromMigration to strip unknown storage volume config keys
      git cherry-pick de3aedd3d8701c934ee19f5513c0a9aae7743630  # lxd/storage/backend/lxd: VolumeDBCreate updated usage when stripping unknown storage volume config keys
      git cherry-pick f030133a8eae7a021d89f59d78aea8ecc6069713  # lxd/storage/backend/lxd: Updates CreateInstanceFromBackup to use storage volume config from backup
      git cherry-pick 93e99101d1a4e790156545f54b6b0096476dcc6d  # lxd/storage/backend: Copy snapshot config for same-pool copies in CreateCustomVolumeFromCopy
      git cherry-pick ccc24ff92e7bf0907e1f70dff6878e8c55e849a2  # lxd/storage/backend/lxd: Use snapshot volume config when restoring custom volume in CreateCustomVolumeFromBackup
      git cherry-pick f3b58db35697172a5cf31e531d5e96abd3795521  # test: Add tests to check snapshot volume config is restored from backup
      git cherry-pick 2ef818941e3c8934ee64ab2ea0ace8b251b9eece  # lxc/config_trust: Fix single argument trust remove
      git cherry-pick 1e3631c58020c451a7ba0c8daf475f8f8290cf4c  # Revert "lxc/config: no name shown when editing the instance's config"
      git cherry-pick c02c059cefc7cedcbeaa4fc1afa942d8effa177d  # shared/api: Mark ExpandedConfig and ExpandedDevices fields as omitempty
      git cherry-pick 2892bd1ab02c513d0c17db2fc4e7336f76735936  # lxc/config: Exclude expanded config from edit screen
      git cherry-pick 0452873cb3396e355070fd1a1e6f6814bd262b02  # lxd/filter/value: Fix parsing of yaml tags in ValueOf
      git cherry-pick 555ed25027d7204f332907932986b2879431b055  # test: Check instance name in edit screen
      git cherry-pick 16748816f34c2d8e2e76f29cde494df1e22c6582  # lxd/device: Add rbd format constants
      git cherry-pick b0d31c1f18450d9e8466e1ffe28f1041d6bf373f  # lxd-agent/state: Handle cgroup v2 cpu usage
      git cherry-pick c7bf2e5e76ae36bff6fd91a9731103a78bb129ad  # lxd-agent/state: Use /proc/meminfo
      git cherry-pick eac62ff1e86a14c2ca5159a0ac3cafca5a0bf748  # lxd/device: Add DiskGetRBDFormat
      git cherry-pick 4628402fd34a98e2582d4f28184d8a87c2a9f46c  # lxd/device: Add DiskParseRBDFormat
      git cherry-pick c7450dc3c08e088511757570740001fca310c4e8  # lxd/storage/drivers/ceph: Add cluster and user name constants
      git cherry-pick 2d3a472d9b80f592dfe6e17d2470db7c5b443134  # lxd/storage/drivers/ceph: Use constants
      git cherry-pick 3d1b106f441c1c1ace9cae9826429843f60b957b  # lxd/device/disk: Use ceph constants
      git cherry-pick 0bfa989db2ea6ec23b2ae99bb1ab50f83994386b  # lxd/instance/drivers/qmp: Add AddSecret
      git cherry-pick b17a8b6f7cdcda59ece3dc208bedb00eb4c9c1b7  # lxd/storage/drivers/ceph: Add CephGetRBDImageName
      git cherry-pick 513db1b4cea9621643d26e8a160202b3b7a96c61  # lxd/instance/drivers/qemu: Use QEMU rbd driver if possible
      git cherry-pick 897a481be9738ccc1e3a0ab3c736ed02e4de05f6  # lxd/device/disk: Use rbd syntax for rbd volumes
      git cherry-pick 28c09e0c5955e63584de714a1d191eb2d9eb656d  # lxd/storage/drivers/ceph: Fix typo
      git cherry-pick 7013d1fcd8e6dbbdd4558634c334057e53eeb3c6  # lxd/instance/drivers/qemu: Handle rbd root devices
      git cherry-pick 5fef4e57c163e25fc1bd04a5782a833aee3e00c5  # lxd/instance: Fix auto-snapshot on restricted projects
      git cherry-pick 3b401a2597506b6ab1d76e9abe7045dacaf3ff35  # lxd/instance/qemu: Fix ceph username key
      git cherry-pick d5f4a5993c11b045b283ebf032f519a81ae60800  # lxd/instance/qemu: Fix ceph volname in projects
      git cherry-pick e3a8911ac4a8e7fe88712ccbc4779ac00ff0c3db  # doc: add link to YouTube video for network ACLs

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"
      export CGO_LDFLAGS_ALLOW="(-Wl,-wrap,pthread_create)|(-Wl,-z,now)"

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc" github.com/lxc/lxd/lxc
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxc-to-lxd" github.com/lxc/lxd/lxc-to-lxd
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd" -tags=libsqlite3 github.com/lxc/lxd/lxd
      CGO_ENABLED=0 go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-agent" -tags=agent,netgo github.com/lxc/lxd/lxd-agent
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-benchmark" github.com/lxc/lxd/lxd-benchmark
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-user" github.com/lxc/lxd/lxd-user

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      cp scripts/bash/lxd-client ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/share/misc/: share/misc/
      var/lib/usbutils/usb.ids: share/misc/
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/dnsmasq
      - bin/getfattr
      - bin/setfattr
      - bin/iw
      - bin/pigz
      - bin/rsync
      - bin/setfacl
      - bin/sgdisk
      - bin/unsquashfs
      - bin/xdelta3

      - lib/*/libidn.so.*

      - etc/bash_completion.d/snap.lxd.lxc

      - share/misc

      - bin/lxc
      - bin/lxc-to-lxd
      - bin/lxd
      - bin/lxd-agent
      - bin/lxd-benchmark
      - bin/lxd-user

  lxd-migrate:
    build-attributes: [core22-step-dependencies]
    source: lxd-migrate/
    after:
      - lxd
      - sqlite
    build-snaps:
      - go
    plugin: nil
    override-pull: |
      snapcraftctl pull
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Download the dependencies
      go get -d -v ./...
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)
      export CGO_CFLAGS="-I${SNAPCRAFT_STAGE}/include/ -I${SNAPCRAFT_STAGE}/usr/local/include/"
      export CGO_LDFLAGS="-L${SNAPCRAFT_STAGE}/lib/ -L${SNAPCRAFT_STAGE}/usr/local/lib/"

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/lxd-migrate" -tags=libsqlite3 ./

      # Install bridge script
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    build-attributes: [core22-step-dependencies]
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    build-attributes: [core22-step-dependencies]
    source: snap-query/
    build-snaps:
      - go
    plugin: nil
    override-build: |
      set -ex

      # Setup build environment
      export GOPATH=$(realpath ./.go)

      # Build the binaries
      go build -o "${SNAPCRAFT_PART_INSTALL}/bin/snap-query" snap-query.go
    prime:
      - bin/snap-query

  strip:
    build-attributes: [core22-step-dependencies]
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - dqlite
      - libseccomp
      - logrotate
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - ovn
      - raft
      - sqlite
      - squashfs-tools-ng
      - vim
      - xfs
      - xz
      - zfs-0-6
      - zfs-0-7
      - zfs-0-8
      - zfs-2-0
      - zfs-2-1
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8 zfs-2.0 zfs-2.1; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    build-attributes: [core22-step-dependencies]
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
      wrappers/editor: bin/
      wrappers/remote-viewer: bin/
      wrappers/sshfs: bin/
