name: lxd
version: "2.21"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]
   - waitready.timeout: How long to wait for LXD to be ready [default=600]

confinement: strict

apps:
  benchmark:
    command: wrappers/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: wrappers/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  daemon:
    command: wrappers/daemon.start
    reload-command: wrappers/daemon.reload
    stop-command: wrappers/daemon.stop
    stop-timeout: 600s
    restart-condition: always
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - system-observe
  lxc:
    command: wrappers/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe
  lxd:
    command: wrappers/lxd
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: wrappers/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs: [network]

parts:
  # Dependencies
  btrfs:
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/mkfs.btrfs

  ceph:
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - -lib/python2.7/sitecustomize.py
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so

  go:
    source-tag: go1.9.4

  lvm:
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  openvswitch:
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-*
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  vim:
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim74/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_*
      - bin/mkfs.xfs

  zfs-0.6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    prepare: |-
      set -ex
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el
    install: |
      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0.7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.5
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    install: |
      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-2.1.1
    prepare: |-
      set -ex
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick a37f8ab2b1b171202a56ba5b4d3320cffc570a33  # console: non-functional changes
      git cherry-pick ae1aaf5a3a4565e6ce676858fce3c72f334e7c38  # console: non-functional changes
      git cherry-pick c62e51c253613749bc685f934622445caefe81d1  # console: fix console info message
      git cherry-pick 7982b83356527b0eb20dca7c972fe2a50fd1c0fa  # console: report detach message on demand
      git cherry-pick 8a01a32f641b9a279e1d84a3d36aa4e7ca6a6b7f  # console: use correct escape sequence check
      git cherry-pick 8de44ef8ea7636cea93fa542297bd1e3ad4020b0  # console: prepare for generic signal handler
      git cherry-pick 94b9b79499271a496447805b135482e7bae946fc  # console: exit mainloop on SIGTERM
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libseccomp-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-python
      - --disable-lua
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-api-docs
      - --disable-bash
      - --disable-cgmanager
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.3.0
      - libexec/lxc/lxc-monitord
      - lxc/config/common.conf.d
    install: |-
      set -ex
      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-2.0.8
    prepare: |-
      set -ex
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    install: |-
      set -ex
      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.7
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    build: |-
      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
    install: |-
      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-2.21
    prepare: |-
      set -ex
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"
      git cherry-pick ccb9b42a926fb67d66cda94ad0e3abb145a230ce  # lxc/exec: Fix typo
      git cherry-pick a6eaf97fde1c8392c7cd6f8ecbafa11a9db00395  # lxd/containers: Fix tc egress rules
      git cherry-pick 419fa4c39bbe0f12a35520fe22afecb791a252d8  # Fix device names containing slashes
      git cherry-pick a1a0475defb8b051ccbcd3eb3967f1a28f61136b  # storage/btrfs: Fix handling of UUID-based mounts
      git cherry-pick 51ea2cefdf5cd98fb54c3c60c9a030fe3be5e9e2  # lxd/containers: No slahses in snapshot names
      git cherry-pick a0b4721a8bba360d7ef3a791bb49439547ab54e0  # lxd/storage: Don't allow slashes in pool or volume names
      git cherry-pick 1f932668fa7d0b1192d8df8c343f30ae17b5f521  # lxd/init: Strip leading and trailing spaces
      git cherry-pick a53fe55976f10bcaee9c279542b91400b27cf93e  # console: Don't prevent setting lxc.console.logfile
      git cherry-pick c160898722dd9293690f5cfb4da50d981218aaa4  # console: Fix version check in log API
      git cherry-pick 8a888cb9d2ff3b9f0ab1c604d410585c3f90d4ea  # lxd/containers: Don't drop the description
      git cherry-pick d840004886b702b3bea15d4a1d6e4f32717a6b62  # network: Serialize network creation
      git cherry-pick 7be50c3b81311db6a7c9e3c9b7605885c5cffca4  # storage: Serialize storage pool creation
      git cherry-pick a5e117873d926a8d14b4bcdad07de3be9d07060e  # lxd/containers: Fix container shutdown on exit
      git cherry-pick 479d024f0b22d006679e47a7496c987f4d2cd62a  # fix parsing for container name tab-completion
      git cherry-pick 747d70aeee6cf567b4d1d54cf2cf044e1ce6fa47  # lxc/file: Fix edit in a snap environment
      git cherry-pick 82ccced4702f7736970fc3ff6ca72311f4d4faa3  # correct mistake in help
      git cherry-pick c950b4a06f525b100d681883e6909fb407a608eb  # lxc client: return errArgs on empty pool
      git cherry-pick 4a064e2f70595a30aef9bf1407aba34ad7792884  # networks: Drop all firewall rules when disabled
      git cherry-pick 107beb0369b672f184dfe1483dabbde57d9af2c5  # container_lxc: ensure container is initialized
      git cherry-pick 3e02c0389476dfc927458c053f45394d8c4f0061  # migrate: check pre-dump only on live migration
      git cherry-pick f0c5e424d37bea46101bd65881afe2aed496eae4  # shared/hostpath: Also check SNAP_NAME
      git cherry-pick 78e7e887d6bf10027f26233a5535aec2e8946d0c  # shared/hostpath: Properly handle prefix check
      git cherry-pick a4ae2539454cf794dec5b2dbeef90fbbb339c333  # lxc/config: Fix metadata edit
      git cherry-pick 959b822027b16cba6d47aaf222dd0a7eb07a3b9b  # containers: Default to pids cgroup for fork bomb mitigation

    after:
      - go
      - lxc
    build-packages:
      - pkg-config
      - libacl1-dev
      - libsqlite3-dev
    stage-packages:
      - acl
      - dnsmasq-base
      - ebtables
      - rsync
      - squashfs-tools
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    install: |-
      set -ex
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat ../src/config/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
      lib/ebtables: lib/
    prime:
      - bin/dnsmasq
      - bin/ebtables
      - bin/rsync
      - bin/setfacl
      - bin/unsquashfs
      - lib/*/libsqlite3*
      - lib/libebt*

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - go
      - lxd
    build-packages:
      - libsqlite3-dev
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    install: |-
      set -ex
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
