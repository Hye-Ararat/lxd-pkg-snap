name: lxd
version: "3.10"
grade: stable
summary: LXD - the container lightervisor
description: |-
 LXD is a container manager for system containers.

 It offers a REST API to remotely manage containers over the network,
 using an image based workflow and with support for live migration.

 Images are available for all Ubuntu releases and architectures as well
 as for a wide number of other Linux distributions.

 LXD containers are lightweight, secure by default and a great
 alternative to virtual machines.

 Supported configuration options (snap set lxd [<key>=<value>...]):
   - criu.enable: Enable experimental live-migration support [default=false]
   - daemon.debug: Increases logging to debug level [default=false]
   - daemon.group: Group of users that can interact with LXD [default=lxd]
   - ceph.builtin: Use snap-specific ceph configuration [default=false]
   - openvswitch.builtin: Run a snap-specific OVS daemon [default=false]

confinement: strict

apps:
  # Main commands
  activate:
    command: commands/daemon.activate
    daemon: oneshot
    plugs:
      - lxd-support
      - system-observe

  daemon:
    command: commands/daemon.start
    reload-command: commands/daemon.reload
    stop-command: commands/daemon.stop
    stop-timeout: 600s
    restart-condition: on-failure
    daemon: simple
    slots: [lxd]
    plugs:
      - lxd-support
      - network-bind
      - system-observe
    sockets:
      unix:
        listen-stream: $SNAP_COMMON/lxd/unix.socket
        socket-mode: 0660

  lxc:
    command: commands/lxc
    completer: etc/bash_completion.d/snap.lxd.lxc
    plugs:
      - lxd-support
      - system-observe

  lxd:
    command: commands/lxd
    plugs:
      - lxd-support
      - system-observe

  # Sub-commands
  benchmark:
    command: commands/lxd-benchmark
    plugs:
      - lxd-support
      - system-observe
  buginfo:
    command: commands/buginfo
    plugs:
      - lxd-support
      - system-observe
  check-kernel:
    command: commands/lxd-check-kernel
    plugs:
      - lxd-support
      - system-observe
  migrate:
    command: commands/lxd-migrate
    plugs:
      - lxd-support
      - system-observe

hooks:
  configure:
    plugs: [network]

parts:
  # Dependencies
  btrfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - btrfs-tools
    prime:
      - bin/btrfs
      - bin/btrfstune
      - bin/mkfs.btrfs

  ceph:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - ceph-common
      - libdb5.3
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
    prime:
      - bin/ceph
      - bin/python
      - bin/python2*
      - bin/rbd
      - lib/python2.7
      - -lib/python2.7/sitecustomize.py
      - lib/*/libboost_iostreams.so.*
      - lib/*/libboost_program_options.so.*
      - lib/*/libboost_random.so.*
      - lib/*/libboost_regex.so.*
      - lib/*/libboost_system.so.*
      - lib/*/libboost_thread.so.*
      - lib/*/libdb-5.3.so
      - lib/*/libicudata.so.*
      - lib/*/libicui18n.so.*
      - lib/*/libicuuc.so.*
      - lib/*/libnspr4.so
      - lib/*/libnss3.so
      - lib/*/nss/libsoftokn3.so
      - lib/*/nss/libfreeblpriv3.so
      - lib/*/libnssutil3.so
      - lib/*/libplc4.so
      - lib/*/libplds4.so
      - lib/*/librados.so.*
      - lib/*/librbd.so.*
      - lib/*/libsmime3.so

  go:
    source-tag: go1.11.5

  lvm:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - dmeventd
      - lvm2
      - thin-provisioning-tools
    organize:
      sbin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
    prime:
      - bin/cache_*
      - bin/dmeventd
      - bin/era_*
      - bin/lv*
      - bin/pdata_tools
      - bin/pv*
      - bin/thin_*
      - bin/vg*
      - -bin/vgimportclone
      - -bin/lvmconf
      - -bin/lvmdump
      - -bin/lvmetad
      - -bin/lvmpolld
      - etc/lvm/lvm.conf
      - lib/*/device-mapper/*
      - lib/*/libaio.so*
      - lib/*/libdevmapper*
      - lib/*/liblvm*
      - lib/*/libreadline.so*

  nano:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - nano
    organize:
      usr/bin/: bin/
    prime:
      - bin/nano
      - etc/nanorc

  nvidia-container:
    source: https://github.com/NVIDIA/libnvidia-container
    source-type: git
    source-tag: v1.0.0
    plugin: make
    build-packages:
      - bmake
      - curl
      - libseccomp-dev
      - lsb-release
    override-build: |-
      set -ex

      [ "$(uname -m)" != "x86_64" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin/"
      cp ../../../snapcraft/wrappers/nvidia-container-cli "${SNAPCRAFT_PART_INSTALL}/bin/"

      set +ex
      snapcraftctl build
    organize:
      usr/local/bin/nvidia-container-cli: bin/nvidia-container-cli.real
      usr/local/lib: lib/
    prime:
      - bin/nvidia-container-cli*
      - lib/libnvidia-container.so*

  openvswitch:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - uuid-runtime
    organize:
      usr/bin/: bin/
      usr/lib/openvswitch-switch/: bin/
      usr/sbin/: bin/
      usr/share/: share/
    prime:
      - bin/ovs-appctl
      - bin/ovs-vsctl
      - bin/ovs-vswitchd
      - bin/ovsdb-*
      - bin/uuidgen
      - share/openvswitch/

  sqlite:
    source: https://github.com/CanonicalLTD/sqlite
    source-type: git
    plugin: autotools
    configflags:
      - --enable-replication
    build-packages:
      - tclsh
    override-build: |-
      set -ex

      git log -1 --format=format:%ci%n | sed -e 's/ [-+].*$//;s/ /T/;s/^/D /' > manifest
      git log -1 --format=format:%H > manifest.uuid
      cp /usr/share/misc/config.guess .
      cp /usr/share/misc/config.sub .
      autoreconf -f -i

      set +ex
      snapcraftctl build
    prime:
      - bin/sqlite3
      - lib/libsqlite3*so*

  dqlite:
    after:
      - sqlite
    source: https://github.com/CanonicalLTD/dqlite
    source-type: git
    plugin: autotools
    stage-packages:
      - libuv1
    build-packages:
      - libuv1-dev
    organize:
      usr/lib/: lib/
    prime:
      - lib/libdqlite*so*
      - lib/*/libuv*

  vim:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - vim-tiny
    organize:
      usr/bin/: bin/
      usr/share/vim/vim74/debian.vim: etc/vimrc
    prime:
      - bin/vim.tiny
      - etc/vimrc

  xfs:
    source: snapcraft/empty
    plugin: nil
    stage-packages:
      - xfsprogs
    organize:
      usr/sbin/: bin/
      sbin/: bin/
    prime:
      - bin/xfs_admin
      - bin/xfs_db
      - bin/xfs_growfs
      - bin/mkfs.xfs

  zfs-0.6:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.6.5.11
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick fb963d33ee0dd350143ba1c9cd35d5f7d86910d2  # Fix endian build problem on ppc64el

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.6/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0.7:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.7.12
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.7/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  zfs-0.8:
    source: https://github.com/zfsonlinux/zfs
    source-type: git
    source-tag: zfs-0.8.0-rc3
    plugin: autotools
    configflags:
      - --with-config=user
    build-packages:
      - libblkid-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      set +ex
      snapcraftctl build
      set -ex

      mv "${SNAPCRAFT_PART_INSTALL}" "${SNAPCRAFT_PART_INSTALL}.tmp"
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zfs" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/sbin/zpool" "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/bin/"
      mv "${SNAPCRAFT_PART_INSTALL}.tmp/lib/"*so* "${SNAPCRAFT_PART_INSTALL}/zfs-0.8/lib/"
      rm -Rf "${SNAPCRAFT_PART_INSTALL}.tmp"

  # Core components
  lxc:
    source: https://github.com/lxc/lxc
    source-type: git
    source-tag: lxc-3.1.0
    build-packages:
      - libapparmor-dev
      - libcap-dev
      - libgnutls28-dev
      - libseccomp-dev
      - libselinux1-dev
      - pkg-config
    plugin: autotools
    configflags:
      - --disable-selinux
      - --disable-tests
      - --disable-examples
      - --disable-doc
      - --disable-tools
      - --disable-api-docs
      - --disable-bash
      - --enable-apparmor
      - --enable-seccomp
      - --enable-selinux
      - --enable-capabilities
      - --with-rootfs-path=/var/snap/lxd/common/lxc/
      - --libexecdir=/snap/lxd/current/libexec/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/libexec: libexec
      share/lxc/hooks: lxc/hooks
    prime:
      - bin/lxc-checkconfig
      - lib/liblxc.so.1
      - lib/liblxc.so.1.*
      - lxc/config/common.conf.d
      - lxc/hooks/nvidia
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 4e5a9657cafad69d8447a385abb1a384423b54f8  # lxccontainer: fix mount api (mount_injection_file)
      git cherry-pick c00d0e3b2a06b34ebe25c27208ab38075bbf33d2  # mount: Allow over-mounting
      git cherry-pick 71521317b2a4432fb5aa1878a7933d563b7020cb  # mount: Cleanup allow over-mounting
      git cherry-pick d8bc14a762b1b710b221e3fa40f8de19816e062b  # Fix existing mount target check

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/
      ln -s /var/snap/lxd/common/lxc/local.conf $SNAPCRAFT_PART_INSTALL/lxc/config/common.conf.d/01-local.conf
      sed -i "s#includedir=.*#includedir=$SNAPCRAFT_PART_INSTALL/include#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc
      sed -i "s#libdir=.*#libdir=$SNAPCRAFT_PART_INSTALL/lib#g" $SNAPCRAFT_PART_INSTALL/lib/pkgconfig/lxc.pc

  lxcfs:
    source: https://github.com/lxc/lxcfs
    source-type: git
    source-tag: lxcfs-3.0.3
    build-packages:
      - libfuse-dev
      - libpam0g-dev
      - pkg-config
    stage-packages:
      - fuse
    plugin: autotools
    configflags:
      - --datarootdir=/snap/lxd/current/
      - --localstatedir=/var/snap/lxd/common/var/
    organize:
      snap/lxd/current/lxc: lxc
      snap/lxd/current/lxcfs: lxcfs
      lib/lxcfs: lib
    prime:
      - bin/fusermount
      - lib/*/libfuse.so.*

      - bin/lxcfs
      - lib/liblxcfs.so

      - lxc
      - lxcfs
    override-build: |
      set -ex

      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      set +ex
      snapcraftctl build
      set -ex

      sed -i "s#\${LXC_ROOTFS_MOUNT}/var/snap/lxd/common/var/lib/lxcfs/#\${LXC_ROOTFS_MOUNT}/var/lib/lxcfs/#g" $SNAPCRAFT_PART_INSTALL/snap/lxd/current/lxcfs/lxc.mount.hook

  criu:
    source: https://github.com/checkpoint-restore/criu
    source-tag: v3.11
    source-type: git
    plugin: nil
    build-packages:
      - asciidoc
      - libcap-dev
      - libnet1-dev
      - libnl-3-dev
      - libprotobuf-c-dev
      - libprotobuf-dev
      - protobuf-c-compiler
      - protobuf-compiler
      - python
      - xmlto
    stage-packages:
      - libnet1
      - libprotobuf-c1
    override-build: |
      set -ex

      [ "$(uname -m)" != "x86_64" ] && \
        [ "$(uname -m)" != "armv7l" ] && \
        [ "$(uname -m)" != "aarch64" ] && \
        [ "$(uname -m)" != "s390x" ] && \
        [ "$(uname -m)" != "ppc64le" ] && exit 0

      make
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/criu/"
      cp criu/criu "${SNAPCRAFT_PART_INSTALL}/criu/"
    organize:
      usr/lib/: lib/
    prime:
      - criu/*
      - lib/*/libnet*
      - lib/*/libproto*

  lxd:
    source: https://github.com/lxc/lxd
    source-type: git
    source-tag: lxd-3.10
    after:
      - go
      - lxc
      - dqlite
      - sqlite
    build-packages:
      - libacl1-dev
      - pkg-config
    stage-packages:
      - acl
      - dnsmasq-base
      - ebtables
      - iptables
      - rsync
      - squashfs-tools
      - xdelta3
      - xtables-addons-common
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd
    go-packages:
      - github.com/lxc/lxd/lxc
      - github.com/lxc/lxd/lxd
      - github.com/lxc/lxd/lxd-benchmark
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/CanonicalLtd/go-dqlite/internal/bindings/cluster.go
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      # Git cherry-picks
      cd ../src
      git config user.email "noreply@linuxcontainers.org"
      git config user.name "LXD snap builder"

      git cherry-pick 03ae822a43506311b7d92a50665d8bf45a85ca23  # lxc/profile: Make json/yaml consistent
      git cherry-pick 8b6c03202d9b056fd05bd44b24019c5cc073e70b  # shared/osarch: Add gentoo armhf variant
      git cherry-pick 6401f063087db5f71f1a74eb44f9f6ad6c11251e  # fix variable in range
      git cherry-pick 88ddb8cb1216350dc28e16583396b9a5a67d41fb  # lxd: Fix snapshot expiry for scheduled snapshots
      git cherry-pick d3529c8308df894fd364a6eae4f75668c15c0f28  # lxd/db: Fix tests for current go-sqlite3
      git cherry-pick 2965b9d04e493fe69338aa68ceeed06b864d807b  # lxd/storage: Drop unused function
      git cherry-pick 44f45ee9048739b445dbe07bba63f4573c36d92c  # lxd/network: Rework IP validation functions
      git cherry-pick 6517b5c333f2b62ea2fd5fefbd7f623efd19888d  # lxd/containers: Validate ipv4/ipv6 address
      git cherry-pick bb44c49d468fae7cf1070aff5e1c3cc8afd7ff57  # lxd/network: Reword sysctl network functions
      git cherry-pick 295132e3b5641bb301e7a19db72ad3617c0fc923  # lxd/containers: Skip interface removal if missing
      git cherry-pick e2379cf367ef76f1b42f5a747c475c18cbdf6cac  # client: fix goroutine leak in ExecContainer
      git cherry-pick 3a4c0d31698693a7cd92a5058a4a45b25c9bd7be  # shared/osarch: Add ArchLinux name for armv7
      git cherry-pick 2149bdaf895a1145d49e7627b50e0097678de189  # lxd: remove /proc/self/cmdline parsing
      git cherry-pick 4f4b5c57c3d4bd75bde3035e3c8f3ece7b71b7d1  # Revert "lxd: remove /proc/self/cmdline parsing"
      git cherry-pick eab4f0aafdc812fe5fecc91bca0f910eb1555cae  # nsexec: make cmdline parsing more reliable
      git cherry-pick 6cf20b3149c419a5dd842ce3f2c3e1e349771ec9  # lxd/storage/lvm: Call wipesignatures
      git cherry-pick 70cea30d57c4ebfafd90ad0872c04f5d2824a1bc  # lxd/storage/ceph: Rework df handling
      git cherry-pick 395f901bb4e1779edec46b3b0472ab3028f062b4  # config: Keep candid domains and cookies per-remote
      git cherry-pick 474e8c01aa3c89d5b42c2383af236303ce15bdd2  # lxc: Update for per-remote candid domain/cookies
      git cherry-pick 9a887fe00504071754a3a59ebecdd22bd54e7158  # tests: Update godeps
      git cherry-pick c727035e5e466adcd95156e4cb6312be8a75da55  # lxd/containers: Set liblxc env for CVE-2019-5736
      git cherry-pick 817f196eb9c5ffdd5cf00160fd1b2bdda9547f1c  # lxc/remote: Tweak remote list
      git cherry-pick 31546ecfb806a79d5b9d318d7a218b0f47e1735e  # lxd: Fix duplicate scheduled snapshots
      git cherry-pick e7904f0862ce230988b02ef65261f0c3037f348e  # lxd: Fix failing backup import
      git cherry-pick cb744c13cc7812204a2a48263e4379107fb06aa1  # shared: Tweak progress metadata
      git cherry-pick 49fc96ac9c393de0f8786a11c69ffbdb2f80e2ff  # lxd: Set correct progress data for backup/publish
      git cherry-pick 5b287581ac020299a55577c820da3aa03220d2a7  # lxc/publish: Add progress reporting
      git cherry-pick a7d392a9323c59f6294dbb032b6d5e24f8df2f4d  # lxd: copy C smarts from LXC into lxd/include/
      git cherry-pick 9285e1ab6fc070c78f5289478e203c07f4a10dc4  # nsexec: cleanup macros do_setns
      git cherry-pick 8e6db42fe064481b17a243641e1b71db0a8f260b  # nsexec: cleanup macros in_same_namespace
      git cherry-pick 685fe578fb11bde07d243e0d21c9537d701247eb  # nsexec: cleanup macros attach_userns
      git cherry-pick 5c52fba2719c36fbd6e5bc9156540b79942dda78  # nsexec: cleanup macros file_to_buf
      git cherry-pick e20b83c6f1a81eee97391751e2eb4cd03ea0dc6b  # devlxd_gccgo: initialize to 0
      git cherry-pick feae2b4985cde5f534fb3ae50dc3da2c8c6ee4d3  # network: include macro.h
      git cherry-pick 75aed6e45d09a33c0d5131fff290a81ae7c630b5  # checkfeature: cleanup macros netns_set_nsid
      git cherry-pick e7d52d3cccda6edb20f515490012fae53c79c937  # checkfeature: cleanup macros is_netnsid_aware
      git cherry-pick 08b722a9977a55c1d104908981c91b95c2c4e08f  # forkfile: cleanup macros manip_file_in_ns
      git cherry-pick f74710c79bf5c9f914439b65ad04a736f3fe54c3  # forkmount: cleanup macros
      git cherry-pick cc95932b9799edc455cb2aa042edc4faa35abc74  # forkuevent: cleanup macros
      git cherry-pick 27625e2efb81cde76d4c1c2573ca044625255fd1  # storage_cgo: include macro.h
      git cherry-pick de975ab4b6328d109c8e7483be05a6d4b1432a29  # storage_cgo: cleanup macros find_associated_[...]
      git cherry-pick 0ea0fd41437cf9aa068797f544adb35f7d76dfd4  # storage_cgo: cleanup macros get_un[...]_legacy
      git cherry-pick b6b734f71d4fc5676faebecc1bc47c3607256b7a  # storage_cgo: cleanup macros get_unused_loop_dev
      git cherry-pick ced7235853f5e8b8353b549998f26e505bdf3592  # storage_cgo: cleanup macros prepare_loop_dev
      git cherry-pick ee728e15f4d9ee97d94a9ea2432ee55b7d4a7d12  # shift_linux: cleanup macros shiftowner
      git cherry-pick a4980a4a0e83c8810b45e36f66efba5cf29b0a53  # util_linux_cgo: cleanup macros lxc_abstract_[...]
      git cherry-pick 68eea39e9c8847c5ce87144f63ec19c93c666a75  # proxy: Add locking around UDP timer
      git cherry-pick 2f434854ce3e57f31426f74ee00f6cfc2a011519  # Revert "client: fix goroutine leak in ExecContainer"
      git cherry-pick ccb9863269a1b69631d44caa8bfcd168a31081f2  # lxd: Remove backup directory after creating tarball
      git cherry-pick 844383f90ae1c7e69905f9c6e4d519da9a50cba8  # util_linux_cgo: restore old behavior
      git cherry-pick 1a22b1956d85c501573f7446a9203359bafae958  # lxc/exec: Cleanup terminal logic
      git cherry-pick ece1de996f1c75f95d4a7f6867ec5fcb208d4bde  # client: Empty stdin channel on exec completion
      git cherry-pick 6ba7f91a86e2ece9a9f92f936b014ab65ec435a7  # lxc/list: Fix multiple filters
      git cherry-pick f052dfdb95268418e0c69a21d1bcde2954d9a12c  # lxd/main_nsexec: Fix type of length in file_to_buf
      git cherry-pick 1336407af2d68fee772706353127a9e73297d898  # When starting up, use the cluster.https_address as key for updating the nodes table
      git cherry-pick 521d094defab7c829963c7d4656eac287743a424  # Use capital case in error messages returned by db.NodeInfo.IsEmpty()
      git cherry-pick 2cd835c23148b14714ac1682cb303cdf7ab7f0cb  # db.NodeInfo.IsEmpty(): a node with custom volumes is not empty
      git cherry-pick 10e1e0b57818ecc71205275b16abc397029f5c04  # Add integration test checking that nodes with custom volumes can't be removed
      git cherry-pick 08d6576a8d2206eae7f01d3123c60b6ecf603810  # Prompt for confirmation when using --delete to remove a server
      git cherry-pick a66e72d12af450fd57ffc63c3c001b984b5be44d  # lxc/monitor: Don't directly use Exit
      git cherry-pick e6dbb2f41dd16628e0002239076ef0860e18f914  # lxc/console: Remove unused code
      git cherry-pick 0a1d2ae8a15cda8532deb6a59e24a9604d030c52  # lxc: Improve error handling in execIfAliases
      git cherry-pick 09896f7ffd3a93fa4419c779a95f23ea851b84cb  # lxc/exec: Don't use Exit
      git cherry-pick 5ad177307d18f9b142156c3cbc89c86b6ebe85b5  # lxc/remote: Use candid if supported
      git cherry-pick 50d0dff2131b921854884fa03f451b027d69e4fd  # lxd/profiles: Fix project update when clustered

      # Download any new dependencies
      export GOPATH=$(realpath ../go)
      go get -t -d ./...

      # Run the standard build
      set +ex
      snapcraftctl build
      set -ex

      # Setup bash completion
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
      cat scripts/bash/lxd-client >> ${SNAPCRAFT_PART_INSTALL}/etc/bash_completion.d/snap.lxd.lxc
    organize:
      usr/bin/: bin/
      usr/lib/: lib/
      usr/sbin/: bin/
      sbin/: bin/
      lib/ebtables: lib/
    prime:
      - bin/dnsmasq
      - bin/ebtables
      - bin/rsync
      - bin/setfacl
      - bin/unsquashfs
      - bin/xdelta3
      - lib/libebt*
      - lib/xtables/*

      - etc/bash_completion.d/snap.lxd.lxc

      - bin/lxc
      - bin/lxd
      - bin/lxd-benchmark

  lxd-migrate:
    source: lxd-migrate/
    after:
      - go
      - lxd
      - sqlite
    plugin: go
    go-buildtags:
      - libsqlite3
    go-importpath: github.com/lxc/lxd-pkg-snap/lxd-migrate
    override-build: |
      set -ex

      # Setup for our shared libraries
      sed -i "/^\/\*/a #cgo CFLAGS: -I${SNAPCRAFT_STAGE}/include/" ../go/src/github.com/mattn/go-sqlite3/sqlite3.go

      set +ex
      snapcraftctl build
      set -ex

      mkdir -p ${SNAPCRAFT_PART_INSTALL}/bin/
      cp scripts/upgrade-bridge ${SNAPCRAFT_PART_INSTALL}/bin/upgrade-bridge
    prime:
      - bin/lxd-migrate
      - bin/upgrade-bridge

  shmounts:
    source: shmounts/
    plugin: make
    prime:
      - bin/setup-shmounts

  snap-query:
    source: snap-query/
    after:
      - go
    plugin: go
    go-importpath: github.com/lxc/lxd-pkg-snap/snap-query
    prime:
      - bin/snap-query

  strip:
    source: snapcraft/empty
    after:
      - btrfs
      - ceph
      - go
      - lvm
      - nano
      - nvidia-container
      - openvswitch
      - sqlite
      - dqlite
      - vim
      - xfs
      - lxc
      - lxcfs
      - criu
      - lxd
      - lxd-migrate
      - shmounts
      - snap-query
      - wrappers
    plugin: nil
    override-prime: |
      set -x

      # Strip some of the heavy bits
      strip -s ${SNAPCRAFT_PRIME}/bin/lxc
      strip -s ${SNAPCRAFT_PRIME}/bin/lxd*
      strip -s ${SNAPCRAFT_PRIME}/bin/snap*
      strip -s ${SNAPCRAFT_PRIME}/lib/liblxc*
      strip -s ${SNAPCRAFT_PRIME}/lib/libdqlite*
      strip -s ${SNAPCRAFT_PRIME}/lib/libsqlite*

      for zfs in zfs-0.6 zfs-0.7 zfs-0.8; do
          [ ! -d "${SNAPCRAFT_PRIME}/${zfs}" ] && continue
          strip -s ${SNAPCRAFT_PRIME}/${zfs}/bin/* ${SNAPCRAFT_PRIME}/${zfs}/lib/*
      done

      [ -e "${SNAPCRAFT_PRIME}/criu/criu" ] && strip -s ${SNAPCRAFT_PRIME}/criu/criu

      exit 0

  wrappers:
    plugin: dump
    source: snapcraft/
    organize:
      hooks/: snap/hooks/
